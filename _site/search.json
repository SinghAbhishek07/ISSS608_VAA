[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "Hands-on/Hands-on 1/Hand-on1.html",
    "href": "Hands-on/Hands-on 1/Hand-on1.html",
    "title": "Hand-on1",
    "section": "",
    "text": "pacman::p_load(tidyverse,dplyr)"
  },
  {
    "objectID": "Hands-on/Hands-on 1/Hand-on1.html#essential-grammatical-elements-in-ggplot2",
    "href": "Hands-on/Hands-on 1/Hand-on1.html#essential-grammatical-elements-in-ggplot2",
    "title": "Hand-on1",
    "section": "Essential Grammatical Elements in ggplot2",
    "text": "Essential Grammatical Elements in ggplot2\nA Layered Grammar of Graphics\n\nData: The dataset being plotted.\nAesthetics take attributes of the data and use them to influence visual characteristics, such as position, colours, size, shape, or transparency.\nGeometrics: The visual elements used for our data, such as point, bar or line.\nFacets split the data into subsets to create multiple variations of the same graph (paneling, multiple plots).\nStatistics, statiscal transformations that summarise data (e.g. mean, confidence intervals).\nCoordinate systems define the plane on which data are mapped on the graphic.\nThemes modify all non-data components of a plot, such as main title, sub-title, y-aixs title, or legend background.\n\n\nggplot(data=exam_data)\n\n\n\n\n\n\n\n\n\n\nNotes\n\n\n\n\nNotice that a blank canvas appears.\nggplot() initializes a ggplot object.\nThe data argument defines the dataset to be used for plotting.\nIf the dataset is not already a data.frame, it will be converted to one by `fortify()"
  },
  {
    "objectID": "Hands-on/Hands-on 1/Hand-on1.html#essential-grammatical-elements-in-ggplot2-1",
    "href": "Hands-on/Hands-on 1/Hand-on1.html#essential-grammatical-elements-in-ggplot2-1",
    "title": "Hand-on1",
    "section": "Essential Grammatical Elements in ggplot2",
    "text": "Essential Grammatical Elements in ggplot2\n\nGeometric Objects: [geom_bar]\n\nPLotCode\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar()\n\n\n\n\n\n\nGeometric Objects: geom_dotplot\nIn a dot plot, the width of a dot corresponds to the bin width (or maximum width, depending on the binning algorithm), and dots are stacked, with each dot representing one observation.\n\n\n\n\n\n\nNotes\n\n\n\nThe code chunk below performs the following two steps:\n\nscale_y_continuous() is used to turn off the y-axis, and\nbinwidth argument is used to change the binwidth to 2.5.\n\n\n\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, aes(x = MATHS)) +\n  geom_dotplot(binwidth=2.5, dotsize = 0.5) +\n  scale_y_continuous(NULL, breaks = NULL)\n\n\n\n\n\n\nGeometric Objects: geom_histogram()\nIn the code chunk below, [geom_histogram()] is used to create a simple histogram by using values in MATHS field of exam_data.\n\n\n\n\n\n\nNote\n\n\n\nNote that the default bin is 30.\n\n\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_histogram()\n\n\n\n\n\n\nModifying a geometric object by changing geom()\nIn the code chunk below,\n\nbins argument is used to change the number of bins to 20,\nfill argument is used to shade the histogram with light blue color, and\ncolor argument is used to change the outline colour of the bars in black\n\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20,            \n                 color=\"black\",      \n                 fill=\"light blue\") \n\n\n\n\n\n\nModifying a geometric object by changing aes()\n\nThe code chunk below changes the interior colour of the histogram (i.e. fill) by using sub-group of aesthetic().\n\n\n\n\n\n\n\nNote\n\n\n\nThis approach can be used to colour, fill and alpha of the geometric.\n\n\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           fill = GENDER)) +\n  geom_histogram(bins=20, \n                 color=\"grey30\")\n\n\n\n\n\n\nGeometric Objects: geom-density\n[geom-density()]computes and plots kernel density estimate, which is a smoothed version of the histogram.\nIt is a useful alternative to the histogram for continuous data that comes from an underlying smooth distribution.\nThe code below plots the distribution of Maths scores in a kernel density estimate plot.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_density() \n\n\n\n\nThe code chunk below plots two kernel density lines by using colour or fill arguments of aes()\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x = MATHS, \n           colour = GENDER)) +\n  geom_density()\n\n\n\n\n\n\nGeometric Objects: geom_boxplot\n\n[geom_boxplot()]displays continuous value list.\n\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(y = MATHS,       \n           x= GENDER)) +    \n  geom_boxplot() \n\n\n\n\nNotches are used in box plots to help visually assess whether the medians of distributions differ. If the notches do not overlap, this is evidence that the medians are different.\nThe code chunk below plots the distribution of Maths scores by gender in notched plot instead of boxplot.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_boxplot(notch=TRUE)\n\n\n\n\n\n\ngeom objects can be combined\nThe code chunk below plots the data points on the boxplots by using both geom_boxplot() and geom_point().\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_boxplot() +\n  geom_point(position=\"jitter\", \n             size = 0.5)\n\n\n\n\n\n\nGeometric Objects: geom_violin\n[geom_violin] is designed for creating violin plot. Violin plots are a way of comparing multiple data distributions. With ordinary density curves, it is difficult to compare more than just a few distributions because the lines visually interfere with each other. With a violin plot, it’s easier to compare several distributions since they’re placed side by side.\nThe code below plot the distribution of Maths score by gender in violin plot.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_violin() \n\n\n\n\n\n\nGeometric Objects: geom_violin() and geom_boxplot()\nThe code chunk below combined a violin plot and a boxplot to show the distribution of Maths scores by gender.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_violin(fill=\"light blue\") +\n  geom_boxplot(alpha=0.5)  \n\n\n\n\n\n\nGeometric Objects: geom_point()\n\n[geom_point()] is especially useful for creating scatterplot.\nThe code chunk below plots a scatterplot showing the Maths and English grades of pupils by using geom_point().\n\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point()\n\n\n\n\n\n\nStatistics, stat\n\nThe Statistics functions statistically transform data, usually as some form of summary. For example:\n\nfrequency of values of a variable (bar graph)\na mean\na confidence limit\n\nThere are two ways to use these functions:\n\nadd a stat_() function and override the default geom, or\nadd a geom_() function and override the default stat.\n\n\n\n\nWorking with stat - the stat_summary() method\nThe code chunk below adds mean values by using [stat_summary()] function and overriding the default geom.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  stat_summary(geom = \"point\",       \n               fun.y=\"mean\",         \n               colour =\"red\",        \n               size=4)   \n\n\n\n\n\n\nWorking with stat - the geom() method\nThe code chunk below adding mean values by using geom_() function and overriding the default stat.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  geom_point(stat=\"summary\",        \n             fun.y=\"mean\",           \n             colour =\"red\",          \n             size=4)   \n\n\n\n\n\n\nHow to add a best fit curve on a scatterplot?\nIn the code chunk below, [geom_smooth()] is used to plot a best fit curve on the scatterplot.\n\nThe default method used is loess.\n\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(size=0.5)\n\n\n\n\nThe default smoothing method can be overridden as shown below.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              linewidth=0.5)"
  },
  {
    "objectID": "Hands-on/Hands-on 1/Hand-on1.html#facets",
    "href": "Hands-on/Hands-on 1/Hand-on1.html#facets",
    "title": "Hand-on1",
    "section": "Facets",
    "text": "Facets\n\nFacetting generates small multiples (sometimes also called trellis plot), each displaying a different subset of the data.\nFacets are an alternative to aesthetics for displaying additional discrete variables.\nggplot2 supports two types of factes, namely: facet_grid() and facet_wrap.\n\n\nfacet_wrap()\n\n[facet_wrap] wraps a 1d sequence of panels into 2d.\nThis is generally a better use of screen space than facet_grid because most displays are roughly rectangular.\n\nThe code chunk below plots a trellis plot using facet-wrap().\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20) +\n    facet_wrap(~ CLASS)\n\n\n\n\n\n\nfacet_grid() function\n\n[facet_grid()] forms a matrix of panels defined by row and column facetting variables.\nIt is most useful when you have two discrete variables, and all combinations of the variables exist in the data.\n\nThe code chunk below plots a trellis plot using facet_grid().\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20) +\n    facet_grid(~ CLASS)\n\n\n\n\n\n\nCoordinates\n\nThe Coordinates functions map the position of objects onto the plane of the plot.\nThere are a number of different possible coordinate systems to use, they are:\n\n[coord_cartesian()]: the default cartesian coordinate systems, where you specify x and y values (e.g. allows you to zoom in or out).\n\n[coord_fixed()]: a cartesian system with a “fixed” aspect ratio .\n[coord_quickmap()](: a coordinate system that approximates a good aspect ratio for maps.\n\n\nBy the default, the bar chart of ggplot2 is in vertical form.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar()\n\n\n\n\nThe code chunk below flips the horizontal bar chart into vertical bar chart by using coord_flip().\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip()\n\n\n\n\n\nHow to change to the y- and x-axis range?\nThe code chunk below fixed both the y-axis and x-axis range from 0-100.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\n\n\n\n\n\n\nThemes\n\nThemes control elements of the graph not related to the data. For example:\n\nbackground colour\nsize of fonts\ngridlines\ncolour of labels\n\nBuilt-in themes include:\n\ntheme_gray() (default)\ntheme_bw()\ntheme_classic()\n\nA list of theme can be found at this link.\nEach theme element can be conceived of as either a line (e.g. x-axis), a rectangle (e.g. graph background), or text (e.g. axis title).\n\nThe code chunk below plot a horizontal bar chart using theme_gray()\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_gray()\n\n\n\n\nA horizontal bar chart plotted using theme_classic().\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_classic()"
  },
  {
    "objectID": "Hands-on/Hands-on 2/Hand-on2.html",
    "href": "Hands-on/Hands-on 2/Hand-on2.html",
    "title": "Hand-on2",
    "section": "",
    "text": "4 new packages beside tidyverse.\n\nggrepel: an R package provides geoms for ggplot2 to repel - overlapping text labels.\nggthemes: an R package provides some extra themes, geoms, and scales for ‘ggplot2’.\nhrbrthemes: an R package provides typography-centric themes and theme components for ggplot2.\npatchwork: an R package for preparing composite figure created using ggplot2.\n\n\npacman::p_load(ggrepel, patchwork, \n               ggthemes, hrbrthemes,\n               tidyverse)"
  },
  {
    "objectID": "Hands-on/Hands-on 2/Hand-on2.html#importing-data",
    "href": "Hands-on/Hands-on 2/Hand-on2.html#importing-data",
    "title": "Hand-on2",
    "section": "Importing data",
    "text": "Importing data\n\nexam_data <- read_csv(\"data/Exam_data.csv\")\n\nThere are a total of seven attributes in the exam_data tibble data frame. Four of them are categorical data type and the other three are in continuous data type.\n\nThe categorical attributes are: ID, CLASS, GENDER and RACE.\nThe continuous attributes are: MATHS, ENGLISH and SCIENCE.\n\n\nDT::datatable(exam_data, class= \"compact\")"
  },
  {
    "objectID": "Hands-on/Hands-on 2/Hand-on2.html#beyond-ggplot2-annotation",
    "href": "Hands-on/Hands-on 2/Hand-on2.html#beyond-ggplot2-annotation",
    "title": "Hand-on2",
    "section": "Beyond ggplot2 Annotation",
    "text": "Beyond ggplot2 Annotation\n\nggrepel\nOne of the challenge in plotting statistical graph is annotation, especially with large number of data points.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  geom_label(aes(label = ID), \n             hjust = .5, \n             vjust = -.5) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\n\n\n\n[ggrepel] is an extension of ggplot2 package which provides geoms for ggplot2 to repel overlapping text as in our examples on the right. We simply replace geom_text() by [geom_text_repel()] and geom_label() by [geom_label_repel]\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  geom_label_repel(aes(label = ID), \n                   fontface = \"bold\") +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")"
  },
  {
    "objectID": "Hands-on/Hands-on 2/Hand-on2.html#ggplot2-themes",
    "href": "Hands-on/Hands-on 2/Hand-on2.html#ggplot2-themes",
    "title": "Hand-on2",
    "section": "ggplot2 Themes",
    "text": "ggplot2 Themes\nggplot2 comes with eight [built-in themes], they are: theme_gray(), theme_bw(), theme_classic(), theme_dark(), theme_light(), theme_linedraw(), theme_minimal(), and theme_void().\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  theme_gray() +  \n  ggtitle(\"Distribution of Maths scores\") \n\n\n\n\n\nWorking with ggtheme package\nggthemes provides ‘ggplot2’ themes that replicate the look of plots by Edward Tufte, Stephen Few, Fivethirtyeight, The Economist, ‘Stata’, ‘Excel’, and The Wall Street Journal, among others.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_economist()\n\n\n\n\n\n\nWorking with hrbthems package\n[hrbrthemes] package provides a base theme that focuses on typographic elements, including where various labels are placed as well as the fonts that are used.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum()\n\n\n\n\n\nThe second goal centers around productivity for a production workflow. In fact, this “production workflow” is the context for where the elements of hrbrthemes should be used.\n\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum(axis_title_size = 18, \n              base_size = 15, \n              grid = \"Y\") \n\n\n\n\n\n\n\n\n\n\nWhat can we learn from the code chunk below?\n\n\n\n\naxis_title_size argument is used to increase the font size of the axis title to 18,\nbase_size argument is used to increase the default axis label to 15, and\ngrid argument is used to remove the x-axis grid lines."
  },
  {
    "objectID": "Hands-on/Hands-on 2/Hand-on2.html#combining-graphs",
    "href": "Hands-on/Hands-on 2/Hand-on2.html#combining-graphs",
    "title": "Hand-on2",
    "section": "Combining Graphs",
    "text": "Combining Graphs\nIn this section, you will learn how to create composite plot by combining multiple graphs. First, let us create three statistical graphics.\n\nPlotCode\n\n\n\n\n\n\n\n\np1 <- ggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") + \n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of Maths scores\")\n\n\n\n\n\nPlotCode\n\n\n\n\n\n\n\n\np2 <- ggplot(data=exam_data, \n             aes(x = ENGLISH)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of English scores\")\n\n\n\n\n\nPlotCode\n\n\n\n\n\n\n\n\np3 <- ggplot(data=exam_data, \n             aes(x= MATHS, \n                 y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\n\n\n\n\nWorking with patchwork\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\np1 + p2 / p3\n\n\n\n\n| will place the plots beside each other, while / will stack them.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n(p1 / p2) | p3\n\n\n\n\npatchwork also provides auto-tagging capabilities, in order to identify subplots in text:\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n((p1 / p2) | p3) + \n  plot_annotation(tag_levels = 'I')\n\n\n\n\nBeside providing functions to place plots next to each other based on the provided layout. With inset_element() of patchwork, we can place one or several plots or graphic elements freely on top or below another plot.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\np3 + inset_element(p2, \n                   left = 0.02, \n                   bottom = 0.7, \n                   right = 0.5, \n                   top = 1)"
  },
  {
    "objectID": "In-class Exercise/In-class 1/In-Class1.html",
    "href": "In-class Exercise/In-class 1/In-Class1.html",
    "title": "In-Class1",
    "section": "",
    "text": "Loading Tidyverse\nImporting data"
  },
  {
    "objectID": "In-class Exercise/In-class 1/In-Class1.html#working-with-theme",
    "href": "In-class Exercise/In-class 1/In-Class1.html#working-with-theme",
    "title": "In-Class1",
    "section": "Working with theme",
    "text": "Working with theme\nChanging the colors of plot panel background of theme_minimal() to light blue and the color of grid lines to white.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_minimal() +\n  theme(\n    panel.background = element_rect(fill = \"lightblue\", colour = \"lightblue\", \n                                    size = 0.5, linetype = \"solid\"),\n    panel.grid.major = element_line(size = 0.5, linetype = 'solid', colour = \"white\"), \n    panel.grid.minor = element_line(size = 0.25, linetype = 'solid', colour = \"white\"))"
  },
  {
    "objectID": "In-class Exercise/In-class 1/In-Class1.html#designing-data-drive-graphics-for-analysis-i",
    "href": "In-class Exercise/In-class 1/In-Class1.html#designing-data-drive-graphics-for-analysis-i",
    "title": "In-Class1",
    "section": "Designing Data-drive Graphics for Analysis I",
    "text": "Designing Data-drive Graphics for Analysis I\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x=reorder(RACE,RACE,\n                     function(x)-length(x)))) +\n  geom_bar() +\n  ylim(0,220) +\n  geom_text(stat=\"count\", \n      aes(label=paste0(..count.., \", \", \n      round(..count../sum(..count..)*100, 1), \"%\")),\n      vjust=-1) +\n  xlab(\"Race\") +\n  ylab(\"No. of\\nPupils\") +\n  theme(axis.title.y=element_text(angle = 0))\n\n\n\n\nThis code chunk uses fct_infreq() of forcats package.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nexam_data %>%\n  mutate(RACE = fct_infreq(RACE)) %>%\n  ggplot(aes(x = RACE)) + \n  geom_bar()+\n  ylim(0,220) +\n  geom_text(stat=\"count\", \n      aes(label=paste0(after_stat(count), \", \", \n      round(after_stat(count)/sum(after_stat(count))*100,\n            1), \"%\")),\n      vjust=-1) +\n  xlab(\"Race\") +\n  ylab(\"No. of\\nPupils\") +\n  theme(axis.title.y=element_text(angle = 0))"
  },
  {
    "objectID": "In-class Exercise/In-class 1/In-Class1.html#designing-data-drive-graphics-for-analysis-ii",
    "href": "In-class Exercise/In-class 1/In-Class1.html#designing-data-drive-graphics-for-analysis-ii",
    "title": "In-Class1",
    "section": "Designing Data-drive Graphics for Analysis II",
    "text": "Designing Data-drive Graphics for Analysis II\n\nAdding mean and median lines on the histogram plot.\nChange fill color and line color\n\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\") +\n  geom_vline(aes(xintercept=mean(MATHS, na.rm=T)),\n             color=\"red\", \n             linetype=\"dashed\", \n             size=1) +\n  geom_vline(aes(xintercept=median(MATHS, na.rm=T)),\n             color=\"grey30\",\n             linetype=\"dashed\", \n             size=1)"
  },
  {
    "objectID": "In-class Exercise/In-class 1/In-Class1.html#designing-data-drive-graphics-for-analysis-iii",
    "href": "In-class Exercise/In-class 1/In-Class1.html#designing-data-drive-graphics-for-analysis-iii",
    "title": "In-Class1",
    "section": "Designing Data-drive Graphics for Analysis III",
    "text": "Designing Data-drive Graphics for Analysis III\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nggplot(d, aes(x = ENGLISH, fill = GENDER)) +\n  geom_histogram(data = d_bg, fill = \"grey\", alpha = .5) +\n  geom_histogram(colour = \"black\") +\n  facet_wrap(~ GENDER) +\n  guides(fill = 'none') +  \n  theme_bw()"
  },
  {
    "objectID": "In-class Exercise/In-class 1/In-Class1.html#designing-data-drive-graphics-for-analysis-iv",
    "href": "In-class Exercise/In-class 1/In-Class1.html#designing-data-drive-graphics-for-analysis-iv",
    "title": "In-Class1",
    "section": "Designing Data-drive Graphics for Analysis IV",
    "text": "Designing Data-drive Graphics for Analysis IV\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x=MATHS, y=ENGLISH)) +\n  geom_point() +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  geom_hline(yintercept=50,\n             linetype=\"dashed\",\n             color=\"grey60\",\n             size=1) + \n  geom_vline(xintercept=50, \n             linetype=\"dashed\",\n             color=\"grey60\",\n             size=1)"
  },
  {
    "objectID": "In-class Exercise/In-class 1/In-Class1.html#tableau",
    "href": "In-class Exercise/In-class 1/In-Class1.html#tableau",
    "title": "In-Class1",
    "section": "Tableau",
    "text": "Tableau\nLinks to Tableau Visualisations:\nSuperstore Orders"
  },
  {
    "objectID": "In-class Exercise/In-class 4/In-Class4.html",
    "href": "In-class Exercise/In-class 4/In-Class4.html",
    "title": "In_ClassExercise4",
    "section": "",
    "text": "pacman::p_load(rstatix, gt, patchwork, tidyverse)\n\n\nexam_data<-read_csv(\"data/Exam_data.csv\")\n\n\nThe PlotThe Code Chunk\n\n\n\n\n\n\n\n\n\n\nggplot(exam_data,\n       aes(sample=ENGLISH))+\n  stat_qq() +\n  stat_qq_line()\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nWe can see that the points deviate significantly from the straight diagonal line. This is a clear inidcation that the set of data is not normally distributed.\n\n\n\nComibining statistical graph and analysis table\nNeed to install webshot"
  },
  {
    "objectID": "In-class Exercise/In-class 5/In-Class5.html",
    "href": "In-class Exercise/In-class 5/In-Class5.html",
    "title": "In-Class5",
    "section": "",
    "text": "pacman::p_load(igraph, tidygraph, ggraph, \n               visNetwork, lubridate, clock,\n               tidyverse, graphlayouts,jsonlite)\n\n\nGAStech_nodes <- read_csv(\"data/GAStech_email_node.csv\")\nGAStech_edges <- read_csv(\"data/GAStech_email_edge-v2.csv\")\n\n\nglimpse(GAStech_edges)\n\nRows: 9,063\nColumns: 8\n$ source      <dbl> 43, 43, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 26, 26, 26…\n$ target      <dbl> 41, 40, 51, 52, 53, 45, 44, 46, 48, 49, 47, 54, 27, 28, 29…\n$ SentDate    <chr> \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\"…\n$ SentTime    <time> 08:39:00, 08:39:00, 08:58:00, 08:58:00, 08:58:00, 08:58:0…\n$ Subject     <chr> \"GT-SeismicProcessorPro Bug Report\", \"GT-SeismicProcessorP…\n$ MainSubject <chr> \"Work related\", \"Work related\", \"Work related\", \"Work rela…\n$ sourceLabel <chr> \"Sven.Flecha\", \"Sven.Flecha\", \"Kanon.Herrero\", \"Kanon.Herr…\n$ targetLabel <chr> \"Isak.Baza\", \"Lucas.Alcazar\", \"Felix.Resumir\", \"Hideki.Coc…\n\n\n\nGAStech_edges <- GAStech_edges %>%\n  mutate(SendDate = dmy(SentDate)) %>%\n  mutate(Weekday = wday(SentDate,\n                        label = TRUE,\n                        abbr = FALSE))\n\n\nglimpse(GAStech_edges)\n\nRows: 9,063\nColumns: 10\n$ source      <dbl> 43, 43, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 26, 26, 26…\n$ target      <dbl> 41, 40, 51, 52, 53, 45, 44, 46, 48, 49, 47, 54, 27, 28, 29…\n$ SentDate    <chr> \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\"…\n$ SentTime    <time> 08:39:00, 08:39:00, 08:58:00, 08:58:00, 08:58:00, 08:58:0…\n$ Subject     <chr> \"GT-SeismicProcessorPro Bug Report\", \"GT-SeismicProcessorP…\n$ MainSubject <chr> \"Work related\", \"Work related\", \"Work related\", \"Work rela…\n$ sourceLabel <chr> \"Sven.Flecha\", \"Sven.Flecha\", \"Kanon.Herrero\", \"Kanon.Herr…\n$ targetLabel <chr> \"Isak.Baza\", \"Lucas.Alcazar\", \"Felix.Resumir\", \"Hideki.Coc…\n$ SendDate    <date> 2014-01-06, 2014-01-06, 2014-01-06, 2014-01-06, 2014-01-0…\n$ Weekday     <ord> Friday, Friday, Friday, Friday, Friday, Friday, Friday, Fr…\n\n\n\nGAStech_edges_aggregated <- GAStech_edges %>%\n  filter(MainSubject == \"Work related\") %>%\n  group_by(source, target, Weekday) %>%\n    summarise(Weight = n()) %>%\n  filter(source!=target) %>%\n  filter(Weight > 1) %>%\n  ungroup()\n\n\nglimpse(GAStech_edges_aggregated)\n\nRows: 1,372\nColumns: 4\n$ source  <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ target  <dbl> 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 6,…\n$ Weekday <ord> Sunday, Monday, Tuesday, Wednesday, Friday, Sunday, Monday, Tu…\n$ Weight  <int> 5, 2, 3, 4, 6, 5, 2, 3, 4, 6, 5, 2, 3, 4, 6, 5, 2, 3, 4, 6, 5,…\n\n\n\nGAStech_graph <- tbl_graph(nodes = GAStech_nodes,\n                           edges = GAStech_edges_aggregated, \n                           directed = TRUE)\n\n\nGAStech_graph\n\n# A tbl_graph: 54 nodes and 1372 edges\n#\n# A directed multigraph with 1 component\n#\n# A tibble: 54 × 4\n     id label               Department     Title                                \n  <dbl> <chr>               <chr>          <chr>                                \n1     1 Mat.Bramar          Administration Assistant to CEO                     \n2     2 Anda.Ribera         Administration Assistant to CFO                     \n3     3 Rachel.Pantanal     Administration Assistant to CIO                     \n4     4 Linda.Lagos         Administration Assistant to COO                     \n5     5 Ruscella.Mies.Haber Administration Assistant to Engineering Group Manag…\n6     6 Carla.Forluniau     Administration Assistant to IT Group Manager        \n# ℹ 48 more rows\n#\n# A tibble: 1,372 × 4\n   from    to Weekday Weight\n  <int> <int> <ord>    <int>\n1     1     2 Sunday       5\n2     1     2 Monday       2\n3     1     2 Tuesday      3\n# ℹ 1,369 more rows\n\n\n\nGAStech_graph %>%\n  activate(edges) %>%\n  arrange(desc(Weight))\n\n# A tbl_graph: 54 nodes and 1372 edges\n#\n# A directed multigraph with 1 component\n#\n# A tibble: 1,372 × 4\n   from    to Weekday  Weight\n  <int> <int> <ord>     <int>\n1    40    41 Saturday     13\n2    41    43 Monday       11\n3    35    31 Tuesday      10\n4    40    41 Monday       10\n5    40    43 Monday       10\n6    36    32 Sunday        9\n# ℹ 1,366 more rows\n#\n# A tibble: 54 × 4\n     id label           Department     Title           \n  <dbl> <chr>           <chr>          <chr>           \n1     1 Mat.Bramar      Administration Assistant to CEO\n2     2 Anda.Ribera     Administration Assistant to CFO\n3     3 Rachel.Pantanal Administration Assistant to CIO\n# ℹ 51 more rows\n\n\n\nggraph(GAStech_graph) +\n  geom_edge_link() +\n  geom_node_point()\n\n\n\n\n\ng <- ggraph(GAStech_graph) + \n  geom_edge_link(aes()) +\n  geom_node_point(aes())\n\ng + theme_graph()\n\n\n\n\n\ng <- ggraph(GAStech_graph) + \n  geom_edge_link(aes(colour = 'grey50')) +\n  geom_node_point(aes(colour = 'grey40'))\n\ng + theme_graph(background = 'grey10',\n                text_colour = 'white')\n\n\n\n\n\ng <- ggraph(GAStech_graph, \n            layout = \"fr\") +\n  geom_edge_link(aes()) +\n  geom_node_point(aes())\n\ng + theme_graph()\n\n\n\n\n\nMC1 <- fromJSON(\"data/MC1.json\")\n\n\nMC1_nodes <- as.tibble(MC1$nodes) %>%\n  select(id,type,country)\n\n\nMC1_edges <- as.tibble(MC1$links) %>%\n  select(source,target,type,weight,key)"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Abhishek’s Visual Data Visualization",
    "section": "",
    "text": "Welcome to ISSS608 Visual Analytics and Applications.In this website, you will find my coursework prepared for this course."
  },
  {
    "objectID": "Takehome Exercise/Takehome Ex 1/Take-home_Ex01/Takehome1.html",
    "href": "Takehome Exercise/Takehome Ex 1/Take-home_Ex01/Takehome1.html",
    "title": "Take-home Exercise 1",
    "section": "",
    "text": "The City of Engagement, a small city located in the Country of Nowhere, serves as a service center for an agriculture region known for its fruit farms and vineyards. The local council is currently preparing the Local Plan 2023, and they have conducted a sample survey of 1000 representative residents to gather data on household demographics and spending patterns. This exercise aims to uncover insights into the city’s demographic and financial characteristics. The goal is to provide city managers and planners with a user-friendly and interactive solution that allows them to explore the complex data and identify hidden patterns."
  },
  {
    "objectID": "Takehome Exercise/Takehome Ex 1/Take-home_Ex01/Takehome1.html#objective",
    "href": "Takehome Exercise/Takehome Ex 1/Take-home_Ex01/Takehome1.html#objective",
    "title": "Take-home Exercise 1",
    "section": "Objective",
    "text": "Objective\nThe objective of this exercise is to use the tidyverse family of packages, including ggplot2 and its extensions, to process the survey data and create appropriate static and interactive statistical graphics. By using this, I aim to\n\nExplore the distribution of joviality among the participants and identify any patterns or trends.\nAnalyze the demographic characteristics of the City of Engagement\nInvestigate whether there is a correlation between joviality and financial behavior. Are participants with higher joviality more likely to spend or save money?\n\nThe city wants to use the information to help with its significant community development initiatives, particularly how to distribute a sizable grant for city renewal that it recently received it. This would make it possible for urban planners to concentrate their efforts on particular regions of the community to raise population merriment generally."
  },
  {
    "objectID": "Takehome Exercise/Takehome Ex 1/Take-home_Ex01/Takehome1.html#data-preparation",
    "href": "Takehome Exercise/Takehome Ex 1/Take-home_Ex01/Takehome1.html#data-preparation",
    "title": "Take-home Exercise 1",
    "section": "1. Data Preparation",
    "text": "1. Data Preparation\n\n1.1 Install R packages and import dataset\nThe code chunk below uses pacman::p_load() to check if packages are installed. If they are, they will be launched into R. The packages installed are\n\nplotly: Used for creating interactive web-based graphs.\nggstatsplot: Used for creating graphics with details from statistical tests.\nknitr: Used for dynamic report generation\npacthwork: Used to combine plots\nggdist: Used for visualising distribution and uncertainty\nggthemes: Provide additional themes for ggplot2\ntidyverse: A collection of core packages designed for data science, used extensively for data preparation and wrangling.\nrstatix: used for data manipulation, summarization, and group-wise comparisons\nHmisc : used to compute descriptive statistics for a variable in a dataset\nDT : DataTables that create interactive table on html page.\nsummarytools- used for creating summary statistics and tables for data exploration and reporting\nkableExtra- is used for creating tables in various output formats, such as HTML, PDF, or Word documents.\nggplot2- provides a flexible and layered approach to create a wide variety of high-quality static and interactive plots\nggpubr- It provides a collection of easy-to-use functions for creating publication-ready plots and performing statistical analysis\nggridges- used to visualize the distribution of a continuous variable across different categories or groups.\nreshape2- It provides functions to convert data between wide and long formats, which is useful for restructuring and aggregating data.\nAll packages can be found within CRAN.\n\npacman::p_load() function from the pacman package is used in the following code chunk to install and call the libraries of multiple R packages:\n\n#Load packages\npacman::p_load(plotly, ggstatsplot, knitr, patchwork, ggdist, ggthemes, tidyverse,rstatix,Hmisc, DT ,summarytools,kableExtra,ggplot2 ,ggpubr,ggridges, reshape2)\n\n\n\n1.2 Importing data sets\nTwo datasets are provided: Participants.csv and FinancialJournal.csv.\nI used them as resident_info and financial respectively.\n\n1.2.1 Working with Participants dataset\nImport data from csv using readr::read_csv() and store it in variable resident_info.\nreadr is one of the tidyverse package.\n\nresident_info <- read_csv(\"data/Participants.csv\")\n\n\nDatatableStructureSummary StataticsSummary Table\n\n\nDisplaying the datatable using the DT package\n\nDT::datatable(resident_info, class= \"compact\", filter='top')\n\n\n\n\n\n\n\n\nIt used to provide a compact and structured summary of the internal structure\n\nstr(resident_info)\n\nspc_tbl_ [1,011 × 7] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ participantId : num [1:1011] 0 1 2 3 4 5 6 7 8 9 ...\n $ householdSize : num [1:1011] 3 3 3 3 3 3 3 3 3 3 ...\n $ haveKids      : logi [1:1011] TRUE TRUE TRUE TRUE TRUE TRUE ...\n $ age           : num [1:1011] 36 25 35 21 43 32 26 27 20 35 ...\n $ educationLevel: chr [1:1011] \"HighSchoolOrCollege\" \"HighSchoolOrCollege\" \"HighSchoolOrCollege\" \"HighSchoolOrCollege\" ...\n $ interestGroup : chr [1:1011] \"H\" \"B\" \"A\" \"I\" ...\n $ joviality     : num [1:1011] 0.00163 0.32809 0.39347 0.13806 0.8574 ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   participantId = col_double(),\n  ..   householdSize = col_double(),\n  ..   haveKids = col_logical(),\n  ..   age = col_double(),\n  ..   educationLevel = col_character(),\n  ..   interestGroup = col_character(),\n  ..   joviality = col_double()\n  .. )\n - attr(*, \"problems\")=<externalptr> \n\n\nThere are a total of 1011 rows and 7 variables. The output reveals that variables participantId and householdSize have been read as numeric, continuous data types, and it should changed as nominal data instead because participantId serve as unique identifiers and householdSize represent discrete categories such as 1, 2, 3.\n\n\nIt provides a summary of the variables in the data frame, including their distribution, range, and missing values. This includes measures such as count, mean, standard deviation, minimum, maximum, and quartiles.\n\nHmisc::describe(resident_info)\n\nresident_info \n\n 7  Variables      1011  Observations\n--------------------------------------------------------------------------------\nparticipantId \n       n  missing distinct     Info     Mean      Gmd      .05      .10 \n    1011        0     1011        1      505    337.3     50.5    101.0 \n     .25      .50      .75      .90      .95 \n   252.5    505.0    757.5    909.0    959.5 \n\nlowest :    0    1    2    3    4, highest: 1006 1007 1008 1009 1010\n--------------------------------------------------------------------------------\nhouseholdSize \n       n  missing distinct     Info     Mean      Gmd \n    1011        0        3    0.886    1.964   0.8635 \n                            \nValue          1     2     3\nFrequency    337   373   301\nProportion 0.333 0.369 0.298\n--------------------------------------------------------------------------------\nhaveKids \n       n  missing distinct \n    1011        0        2 \n                      \nValue      FALSE  TRUE\nFrequency    710   301\nProportion 0.702 0.298\n--------------------------------------------------------------------------------\nage \n       n  missing distinct     Info     Mean      Gmd      .05      .10 \n    1011        0       43    0.999    39.07     14.3       20       22 \n     .25      .50      .75      .90      .95 \n      29       39       50       56       58 \n\nlowest : 18 19 20 21 22, highest: 56 57 58 59 60\n--------------------------------------------------------------------------------\neducationLevel \n       n  missing distinct \n    1011        0        4 \n                                                                      \nValue                Bachelors            Graduate HighSchoolOrCollege\nFrequency                  232                 170                 525\nProportion               0.229               0.168               0.519\n                              \nValue                      Low\nFrequency                   84\nProportion               0.083\n--------------------------------------------------------------------------------\ninterestGroup \n       n  missing distinct \n    1011        0       10 \n\nlowest : A B C D E, highest: F G H I J\n                                                                      \nValue          A     B     C     D     E     F     G     H     I     J\nFrequency    102    91   102    96    83   106   108   111    96   116\nProportion 0.101 0.090 0.101 0.095 0.082 0.105 0.107 0.110 0.095 0.115\n--------------------------------------------------------------------------------\njoviality \n       n  missing distinct     Info     Mean      Gmd      .05      .10 \n    1011        0     1011        1   0.4938   0.3364  0.05642  0.10871 \n     .25      .50      .75      .90      .95 \n 0.24007  0.47754  0.74682  0.90645  0.96024 \n\nlowest : 0.000204000 0.000265000 0.000985000 0.001365799 0.001626703\nhighest: 0.992601749 0.997604884 0.997670843 0.998644049 0.999233967\n--------------------------------------------------------------------------------\n\n\nFrom the output, there are zero missing values across all columns in resident_info\n\n\n\n\n\n\nTip\n\n\n\nThe describe() function provides summary statistics for numerical variables by default. If we need to include categorical variables as well, it can set the fast = FALSE argument Hmisc::describe(resident_info, fast = FALSE)\nBy setting fast = FALSE, the describe() function will calculate summary statistics for both numerical and categorical variables in the resident_info data frame.\n\n\n\n\nCreating detailed summary table\n\ndf1 <- resident_info %>% \n  select(-starts_with('Q'), -starts_with('HQ')) %>%\n  mutate_if(is.integer, as.numeric) %>%\n  mutate_if(is.logical, as.numeric)\n\nflat_numeric <- df1 %>% select_if(is.numeric)\n\nprint(dfSummary(flat_numeric, graph.magnif = 0.75), method = 'render')\n\n\n\nData Frame Summary\nflat_numeric\nDimensions: 1011 x 5\n  Duplicates: 0\n\n\n  \n    \n      No\n      Variable\n      Stats / Values\n      Freqs (% of Valid)\n      Graph\n      Valid\n      Missing\n    \n  \n  \n    \n      1\n      participantId\n[numeric]\n      Mean (sd) : 505 (292)min ≤ med ≤ max:0 ≤ 505 ≤ 1010IQR (CV) : 505 (0.6)\n      1011 distinct values\n      \n      1011\n(100.0%)\n      0\n(0.0%)\n    \n    \n      2\n      householdSize\n[numeric]\n      Mean (sd) : 2 (0.8)min ≤ med ≤ max:1 ≤ 2 ≤ 3IQR (CV) : 2 (0.4)\n      1:337(33.3%)2:373(36.9%)3:301(29.8%)\n      \n      1011\n(100.0%)\n      0\n(0.0%)\n    \n    \n      3\n      haveKids\n[numeric]\n      Min  : 0Mean : 0.3Max  : 1\n      0:710(70.2%)1:301(29.8%)\n      \n      1011\n(100.0%)\n      0\n(0.0%)\n    \n    \n      4\n      age\n[numeric]\n      Mean (sd) : 39.1 (12.4)min ≤ med ≤ max:18 ≤ 39 ≤ 60IQR (CV) : 21 (0.3)\n      43 distinct values\n      \n      1011\n(100.0%)\n      0\n(0.0%)\n    \n    \n      5\n      joviality\n[numeric]\n      Mean (sd) : 0.5 (0.3)min ≤ med ≤ max:0 ≤ 0.5 ≤ 1IQR (CV) : 0.5 (0.6)\n      1011 distinct values\n      \n      1011\n(100.0%)\n      0\n(0.0%)\n    \n  \n\nGenerated by summarytools 1.0.1 (R version 4.2.3)2023-05-14\n\n\n\n\n\n\n\n\n\n\n\n\nImportant\n\n\n\n\n\nBased on the statistics from the summary table, below are some useful insights:\n\nparticipantId: There are 1,011 unique participant IDs. The range of IDs is from 0 to 1,010, indicating that there are no missing or duplicated IDs.\nhouseholdSize: The data contains three distinct household sizes: 1, 2, and 3. The most common household size is 2, followed by 1 and then 3. The proportions indicate that 33.3% of the households have a size of 1, 36.9% have a size of 2, and 29.8% have a size of 3.\nhaveKids: There are two distinct values: FALSE and TRUE. The majority of participants (70.2%) do not have kids, while 29.8% have kids.\nage: The data includes 43 distinct ages, ranging from 18 to 60. The mean age is approximately 39 years, with a standard deviation of 14.3. The 5th percentile is 20, the median is 39, and the 95th percentile is 58.\neducationLevel: There are four distinct education levels: Bachelors, Graduate, HighSchoolOrCollege, and Low. The majority of participants (51.9%) have a HighSchoolOrCollege education level, followed by Bachelors (22.9%), Graduate (16.8%), and Low (8.3%).\ninterestGroup: There are 10 distinct interest groups labeled from A to J. The frequencies and proportions indicate the distribution of participants across these interest groups.\njoviality: Joviality is a numeric variable ranging from 0 to 1. The mean joviality score is approximately 0.494, with a standard deviation of 0.3364. The 5th percentile is 0.05642, the median is 0.47754, and the 95th percentile is 0.96024.\n\n\n\n\n\nChanging Data Types:\n\nparticipantId is classified as <dbl>, numerical continuous data, instead of nominal. This is cast as <chr> class using as.factor()\nhouseholdSize is classified as <dbl>, but categorical in nature with different levels. This is cast as <chr> class using `as.factor()\neducationLevel is classified as <chr  > categorical data,which has 4 different category. It need to be changed using ordered() function.\n\n\n\nChanging data typeChecking the changes\n\n\n\nresident_new <- resident_info %>%\n# Changing Data Types of participantsID , household, educationlevel\n   mutate(participantId = as.factor(participantId),\n         householdSize = as.factor(householdSize),\n         educationLevel = as.ordered(educationLevel))\n\n\n\n\n# Check the data types of variables\nstr(resident_new)\n\ntibble [1,011 × 7] (S3: tbl_df/tbl/data.frame)\n $ participantId : Factor w/ 1011 levels \"0\",\"1\",\"2\",\"3\",..: 1 2 3 4 5 6 7 8 9 10 ...\n $ householdSize : Factor w/ 3 levels \"1\",\"2\",\"3\": 3 3 3 3 3 3 3 3 3 3 ...\n $ haveKids      : logi [1:1011] TRUE TRUE TRUE TRUE TRUE TRUE ...\n $ age           : num [1:1011] 36 25 35 21 43 32 26 27 20 35 ...\n $ educationLevel: Ord.factor w/ 4 levels \"Bachelors\"<\"Graduate\"<..: 3 3 3 3 1 3 3 1 1 1 ...\n $ interestGroup : chr [1:1011] \"H\" \"B\" \"A\" \"I\" ...\n $ joviality     : num [1:1011] 0.00163 0.32809 0.39347 0.13806 0.8574 ...\n\n\n\n\n\n\nAdding a new column Age Group\n\n\nAdding Age-GroupViolin Plot\n\n\nFirst we can calculate the range using the quartile() function and then group them according and check their visualization after grouping them\n\n# Calculate the percentile values for age\nage_percentiles <- quantile(resident_new$age, probs = c(0.25, 0.5, 0.75, 1))\n\n# Display the percentile values\nprint(age_percentiles)\n\n 25%  50%  75% 100% \n  29   39   50   60 \n\n\nBased on the result, now will group them accordingly\n\n# Define the percentile ranges\nage_percentiles <- quantile(resident_new$age, probs = c(0, 0.25, 0.5, 0.75, 1))\n\n# Create age group labels based on the percentile ranges\nage_labels <- c(\"18-29 yrs\", \"30-39 yrs\", \"40-50 yrs\", \"51-60 yrs\")\n\n# Create age groups based on the percentile ranges\nresident_new$age_group <- cut(resident_new$age, breaks = age_percentiles, labels = age_labels, include.lowest = TRUE)\n\n\n# Display the updated table with age groups\nstr(resident_new)\n\ntibble [1,011 × 8] (S3: tbl_df/tbl/data.frame)\n $ participantId : Factor w/ 1011 levels \"0\",\"1\",\"2\",\"3\",..: 1 2 3 4 5 6 7 8 9 10 ...\n $ householdSize : Factor w/ 3 levels \"1\",\"2\",\"3\": 3 3 3 3 3 3 3 3 3 3 ...\n $ haveKids      : logi [1:1011] TRUE TRUE TRUE TRUE TRUE TRUE ...\n $ age           : num [1:1011] 36 25 35 21 43 32 26 27 20 35 ...\n $ educationLevel: Ord.factor w/ 4 levels \"Bachelors\"<\"Graduate\"<..: 3 3 3 3 1 3 3 1 1 1 ...\n $ interestGroup : chr [1:1011] \"H\" \"B\" \"A\" \"I\" ...\n $ joviality     : num [1:1011] 0.00163 0.32809 0.39347 0.13806 0.8574 ...\n $ age_group     : Factor w/ 4 levels \"18-29 yrs\",\"30-39 yrs\",..: 2 1 2 1 3 2 1 1 1 2 ...\n\n\n\n\n\n\n\n\nNote\n\n\n\ncut() is used to create age groups based on the age column in the resident_new table. The breaks argument takes the percentile ranges obtained earlier, and the labels argument assigns labels to each group. The include.lowest = TRUE parameter ensures that the lowest age value is included in the first group.\n\n\n\n\n\nggplot(resident_new, aes(x = age_group, y = age, fill = age_group)) +\n  geom_violin() +\n  xlab(\"Age Group\") +\n  ylab(\"Age\") +\n  ggtitle(\"Distribution of Age by Age Group\") +\n  scale_fill_brewer(palette = \"Set1\")\n\n\n\n\n\n\n\n\n\n1.2.2 Working with FinancialJournal dataset\nImport data from csv using readr::read_csv() and store it in variable financial.\nreadr is one of the tidyverse package.\n\nfinancial <- read_csv(\"data/FinancialJournal.csv\")\n\n\nDatatableStructureSummary StataticsSummary Table\n\n\nDisplaying the datatable using the DT package\n\nDT:: datatable(head(financial,100),options = list(pagelength=10,scrollX='400px'),class='cell-border stripe',filter='top')\n\n\n\n\n\n\n\n\nIt used to provide a compact and structured summary of the internal structure\n\nstr(financial)\n\nspc_tbl_ [1,513,636 × 4] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ participantId: num [1:1513636] 0 0 0 1 1 1 2 2 2 3 ...\n $ timestamp    : POSIXct[1:1513636], format: \"2022-03-01\" \"2022-03-01\" ...\n $ category     : chr [1:1513636] \"Wage\" \"Shelter\" \"Education\" \"Wage\" ...\n $ amount       : num [1:1513636] 2473 -555 -38 2047 -555 ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   participantId = col_double(),\n  ..   timestamp = col_datetime(format = \"\"),\n  ..   category = col_character(),\n  ..   amount = col_double()\n  .. )\n - attr(*, \"problems\")=<externalptr> \n\n\nThere are a total of 1,513,636 rows and 4 variables. The output reveals that variables participantId been read as numeric, continuous data types, and it should changed as nominal data instead because participantId serve as unique identifiers .\n\n\nIt provides a summary of the variables in the data frame, including their distribution, range, and missing values. This includes measures such as count, mean, standard deviation, minimum, maximum, and quartiles.\n\nHmisc::describe(financial)\n\nfinancial \n\n 4  Variables      1513636  Observations\n--------------------------------------------------------------------------------\nparticipantId \n       n  missing distinct     Info     Mean      Gmd      .05      .10 \n 1513636        0     1011        1    480.9    341.2       43       86 \n     .25      .50      .75      .90      .95 \n     222      464      726      918      967 \n\nlowest :    0    1    2    3    4, highest: 1006 1007 1008 1009 1010\n--------------------------------------------------------------------------------\ntimestamp \n                  n             missing            distinct                Info \n            1513636                   0               87366                   1 \n               Mean                 Gmd                 .05                 .10 \n2022-08-26 05:00:48            10684501 2022-03-14 14:00:00 2022-03-31 07:20:00 \n                .25                 .50                 .75                 .90 \n2022-05-24 13:25:00 2022-08-25 15:00:00 2022-11-27 07:25:00 2023-01-22 10:20:00 \n                .95 \n2023-02-09 20:10:00 \n\nlowest : 2022-03-01 00:00:00 2022-03-01 04:50:00 2022-03-01 05:30:00 2022-03-01 05:40:00 2022-03-01 05:45:00\nhighest: 2023-02-28 23:35:00 2023-02-28 23:40:00 2023-02-28 23:45:00 2023-02-28 23:50:00 2023-02-28 23:55:00\n--------------------------------------------------------------------------------\ncategory \n       n  missing distinct \n 1513636        0        6 \n\nlowest : Education      Food           Recreation     RentAdjustment Shelter       \nhighest: Food           Recreation     RentAdjustment Shelter        Wage          \n                                                                      \nValue           Education           Food     Recreation RentAdjustment\nFrequency            3319         790051         296013            131\nProportion          0.002          0.522          0.196          0.000\n                                        \nValue             Shelter           Wage\nFrequency           11463         412659\nProportion          0.008          0.273\n--------------------------------------------------------------------------------\namount \n       n  missing distinct     Info     Mean      Gmd      .05      .10 \n 1513636        0     6690    0.981    20.05    66.15  -21.050  -15.182 \n     .25      .50      .75      .90      .95 \n  -5.594   -4.000   21.598  107.467  159.561 \n\nlowest : -1562.726 -1556.356 -1499.254 -1475.672 -1458.686\nhighest:  4059.861  4069.449  4078.119  4085.387  4096.526\n--------------------------------------------------------------------------------\n\n\nFrom the output, there are zero missing values across all columns in financial\n\n\n\n\n\n\nTip\n\n\n\nThe describe() function provides summary statistics for numerical variables by default. If we need to include categorical variables as well, it can set the fast = FALSE argument Hmisc::describe(resident_info, fast = FALSE)\nBy setting fast = FALSE, the describe() function will calculate summary statistics for both numerical and categorical variables in the resident_info data frame.\n\n\n\n\nCreating detailed summary table\n\ndf2 <- financial %>% \n  select(-starts_with('Q'), -starts_with('HQ')) %>%\n  mutate_if(is.integer, as.numeric) %>%\n  mutate_if(is.logical, as.numeric)\n\nflat_numeric1 <- df2 %>% select_if(is.numeric)\n\nprint(dfSummary(flat_numeric1, graph.magnif = 0.75), method = 'render')\n\n\n\nData Frame Summary\nflat_numeric1\nDimensions: 1513636 x 2\n  Duplicates: 1418986\n\n\n  \n    \n      No\n      Variable\n      Stats / Values\n      Freqs (% of Valid)\n      Graph\n      Valid\n      Missing\n    \n  \n  \n    \n      1\n      participantId\n[numeric]\n      Mean (sd) : 480.9 (295.9)min ≤ med ≤ max:0 ≤ 464 ≤ 1010IQR (CV) : 504 (0.6)\n      1011 distinct values\n      \n      1513636\n(100.0%)\n      0\n(0.0%)\n    \n    \n      2\n      amount\n[numeric]\n      Mean (sd) : 20 (111.8)min ≤ med ≤ max:-1562.7 ≤ -4 ≤ 4096.5IQR (CV) : 27.2 (5.6)\n      6690 distinct values\n      \n      1513636\n(100.0%)\n      0\n(0.0%)\n    \n  \n\nGenerated by summarytools 1.0.1 (R version 4.2.3)2023-05-14\n\n\n\n\n\n\n\n\n\n\n\n\nImportant\n\n\n\n\n\nBased on the statistics from the summary table, below are some useful insights:\n\nParticipant ID: There are 1,011 unique participants in the financial data. The participant ID ranges from 0 to 1,010. .\nTimestamp: The financial data spans a time period from March 1, 2022, to February 28, 2023. The timestamp variable shows the date and time of each financial transaction. .\nCategory: There are six distinct categories in the financial data, including Education, Food, Recreation, RentAdjustment, Shelter, and Wage. The most frequent category is Food, accounting for approximately 52.2% of the transactions, followed by Recreation (19.6%) and Wage (27.3%).\nAmount: The amount variable represents the monetary value of each transaction. The mean amount is 20.05, indicating an average transaction value. The range of the amounts is from -1562.726 to 4096.526, with a wide distribution. The majority of the amounts fall within the range of -21.050 to 159.561.\n\n\n\n\n\nChanging Data Types:\n\nparticipantId is classified as <dbl>, numerical continuous data, instead of nominal. This is cast as <chr> class using as.factor()\ntimestamp has a big value contains date and time both, which is not required for our anaylsis. So i will change it into Year-month bascially extract that data only from timestamp and save it.\ncategory is classified as <chr  >but categorical data,which has 4 different category. It need to be changed using as.factor().\namount has decimal point upto 10. It will be rounded upto 2 for readability and easily computation.\n\n\n\nChanging data typeChecking the changes\n\n\n\nfinancial_new <- financial %>%\n  mutate(\n\n# Changing participantId to nominal\nparticipantId = as.factor(participantId),\n\n# Extracting Year-Month from timestamp\ntimestamp = format(as.Date(timestamp), \"%Y-%m\"),\n\n# Changing category to factor\ncategory = as.factor(category),\n\n# Rounding amount to 2 decimal places\namount = round(amount, 2)\n\n)\n\n\n\n\n# Check the data types of variables\nstr(financial_new)\n\ntibble [1,513,636 × 4] (S3: tbl_df/tbl/data.frame)\n $ participantId: Factor w/ 1011 levels \"0\",\"1\",\"2\",\"3\",..: 1 1 1 2 2 2 3 3 3 4 ...\n $ timestamp    : chr [1:1513636] \"2022-03\" \"2022-03\" \"2022-03\" \"2022-03\" ...\n $ category     : Factor w/ 6 levels \"Education\",\"Food\",..: 6 5 1 6 5 1 6 5 1 6 ...\n $ amount       : num [1:1513636] 2473 -555 -38 2047 -555 ...\n\n\n\n\n\n\nDivide Category into new columns and count Total Amount for each category\n\n\nCategory’sChecking the changes\n\n\n\nfinancial_new <- financial_new %>%\n  group_by(participantId, timestamp, category) %>%\n  summarise(total_amount = sum(amount), .groups = \"drop\") %>%\n  pivot_wider(names_from = category, values_from = total_amount)\n\n\n\n\n\n\n\nNote\n\n\n\nThe code chunk groups the data by participantId, timestamp, and category, calculates the sum of amount for each group, and then reshapes the data to have separate columns for each category, with the corresponding total_amount values. The resulting data frame is assigned to financial_new.The pivot_wider() function is used to reshape the data frame from a long format to a wide format. It takes the distinct category values as column names and populates the corresponding total_amount values for each participantId and timestamp combination.\n\n\n\n\n\nDT::datatable(financial_new, class= \"compact\", filter='top')\n\n\n\n\n\n\n\n\n\n\n\n\n1.2 Joining the Tables\nWe have 2 dataset resident_new with columns participantId, householdSize, haveKids, age, educationLevel,interestGroup, joviality, age_group and financial_new with columns participantId, timestamp,Education ,Food, Recreation, Shelter, Wage, RentAdjustment.\n\nJoin TableCheck Table\n\n\n\nresident_financial <- left_join(resident_new, financial_new, by = \"participantId\")\n\nThe code chunk will create a new data frame resident_financial that combines the columns from both tables based on matching participantId values. The resulting data frame will include all the columns from both tables.\n\n\n\nDT::datatable(resident_financial, class= \"compact\", filter='top')\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nThe new table resident_financial consists of the columns participantId, householdSize, haveKids, age, educationLevel,interestGroup, joviality, age_group timestamp, Education ,Food, Recreation, Shelter, Wage, RentAdjustment.\n\n\n\n\n\n\nChecking Summary Statistics of resident_financial\n\n\nStructureSummary StatisticsSummary Table\n\n\nIt used to provide a compact and structured summary of the internal structure\n\nstr(resident_financial)\n\ntibble [10,691 × 15] (S3: tbl_df/tbl/data.frame)\n $ participantId : Factor w/ 1011 levels \"0\",\"1\",\"2\",\"3\",..: 1 1 1 1 1 1 1 1 1 1 ...\n $ householdSize : Factor w/ 3 levels \"1\",\"2\",\"3\": 3 3 3 3 3 3 3 3 3 3 ...\n $ haveKids      : logi [1:10691] TRUE TRUE TRUE TRUE TRUE TRUE ...\n $ age           : num [1:10691] 36 36 36 36 36 36 36 36 36 36 ...\n $ educationLevel: Ord.factor w/ 4 levels \"Bachelors\"<\"Graduate\"<..: 3 3 3 3 3 3 3 3 3 3 ...\n $ interestGroup : chr [1:10691] \"H\" \"H\" \"H\" \"H\" ...\n $ joviality     : num [1:10691] 0.00163 0.00163 0.00163 0.00163 0.00163 ...\n $ age_group     : Factor w/ 4 levels \"18-29 yrs\",\"30-39 yrs\",..: 2 2 2 2 2 2 2 2 2 2 ...\n $ timestamp     : chr [1:10691] \"2022-03\" \"2022-04\" \"2022-05\" \"2022-06\" ...\n $ Education     : num [1:10691] -76 -38 -38 -38 -38 ...\n $ Food          : num [1:10691] -268 -266 -265 -257 -270 ...\n $ Recreation    : num [1:10691] -349 -219 -383 -466 -1069 ...\n $ Shelter       : num [1:10691] -1110 -555 -555 -555 -555 ...\n $ Wage          : num [1:10691] 11932 8637 9048 9048 8637 ...\n $ RentAdjustment: num [1:10691] NA NA NA NA NA NA NA NA NA NA ...\n\n\nThere are a total of 10,691 rows and 14 variables.\n\n\nIt provides a summary of the variables in the data frame, including their distribution, range, and missing values. This includes measures such as count, mean, standard deviation, minimum, maximum, and quartiles.\n\nHmisc::describe(resident_financial)\n\nresident_financial \n\n 15  Variables      10691  Observations\n--------------------------------------------------------------------------------\nparticipantId \n       n  missing distinct \n   10691        0     1011 \n\nlowest : 0    1    2    3    4   , highest: 1006 1007 1008 1009 1010\n--------------------------------------------------------------------------------\nhouseholdSize \n       n  missing distinct \n   10691        0        3 \n                            \nValue          1     2     3\nFrequency   4044  3629  3018\nProportion 0.378 0.339 0.282\n--------------------------------------------------------------------------------\nhaveKids \n       n  missing distinct \n   10691        0        2 \n                      \nValue      FALSE  TRUE\nFrequency   7673  3018\nProportion 0.718 0.282\n--------------------------------------------------------------------------------\nage \n       n  missing distinct     Info     Mean      Gmd      .05      .10 \n   10691        0       43    0.999    39.13     14.3       20       22 \n     .25      .50      .75      .90      .95 \n      29       39       50       56       58 \n\nlowest : 18 19 20 21 22, highest: 56 57 58 59 60\n--------------------------------------------------------------------------------\neducationLevel \n       n  missing distinct \n   10691        0        4 \n                                                                      \nValue                Bachelors            Graduate HighSchoolOrCollege\nFrequency                 2784                2040                5167\nProportion               0.260               0.191               0.483\n                              \nValue                      Low\nFrequency                  700\nProportion               0.065\n--------------------------------------------------------------------------------\ninterestGroup \n       n  missing distinct \n   10691        0       10 \n\nlowest : A B C D E, highest: F G H I J\n                                                                      \nValue          A     B     C     D     E     F     G     H     I     J\nFrequency   1092  1015  1048  1042   864  1151  1131  1123  1042  1183\nProportion 0.102 0.095 0.098 0.097 0.081 0.108 0.106 0.105 0.097 0.111\n--------------------------------------------------------------------------------\njoviality \n       n  missing distinct     Info     Mean      Gmd      .05      .10 \n   10691        0     1011        1   0.4686   0.3311   0.0518   0.1038 \n     .25      .50      .75      .90      .95 \n  0.2179   0.4471   0.7008   0.9008   0.9552 \n\nlowest : 0.000204000 0.000265000 0.000985000 0.001365799 0.001626703\nhighest: 0.992601749 0.997604884 0.997670843 0.998644049 0.999233967\n--------------------------------------------------------------------------------\nage_group \n       n  missing distinct \n   10691        0        4 \n                                                  \nValue      18-29 yrs 30-39 yrs 40-50 yrs 51-60 yrs\nFrequency       2825      2587      2814      2465\nProportion     0.264     0.242     0.263     0.231\n--------------------------------------------------------------------------------\ntimestamp \n       n  missing distinct \n   10691        0       12 \n\nlowest : 2022-03 2022-04 2022-05 2022-06 2022-07\nhighest: 2022-10 2022-11 2022-12 2023-01 2023-02\n                                                                          \nValue      2022-03 2022-04 2022-05 2022-06 2022-07 2022-08 2022-09 2022-10\nFrequency     1011     880     880     880     880     880     880     880\nProportion   0.095   0.082   0.082   0.082   0.082   0.082   0.082   0.082\n                                          \nValue      2022-11 2022-12 2023-01 2023-02\nFrequency      880     880     880     880\nProportion   0.082   0.082   0.082   0.082\n--------------------------------------------------------------------------------\nEducation \n       n  missing distinct     Info     Mean      Gmd \n    3018     7673        8    0.937   -51.15    37.56 \n\nlowest : -182.28 -146.40  -91.14  -76.02  -73.20\nhighest:  -76.02  -73.20  -38.01  -25.62  -12.81\n                                                                          \nValue      -182.28 -146.40  -91.14  -76.02  -73.20  -38.01  -25.62  -12.81\nFrequency       57      49     517     122     407    1023      73     770\nProportion   0.019   0.016   0.171   0.040   0.135   0.339   0.024   0.255\n--------------------------------------------------------------------------------\nFood \n       n  missing distinct     Info     Mean      Gmd      .05      .10 \n   10691        0     8208        1   -346.4    92.84   -474.0   -452.2 \n     .25      .50      .75      .90      .95 \n  -421.9   -308.5   -283.5   -265.6   -255.9 \n\nlowest : -590.55 -590.32 -590.16 -585.46 -585.29\nhighest:  -37.37  -36.85  -36.66  -34.80  -31.97\n--------------------------------------------------------------------------------\nRecreation \n       n  missing distinct     Info     Mean      Gmd      .05      .10 \n    9492     1199     8888        1   -436.5      232   -835.8   -697.9 \n     .25      .50      .75      .90      .95 \n  -533.7   -405.5   -295.1   -202.5   -147.1 \n\nlowest : -1962.06 -1947.79 -1889.53 -1829.60 -1794.38\nhighest:   -11.85   -11.23    -9.98    -6.24    -5.88\n--------------------------------------------------------------------------------\nShelter \n       n  missing distinct     Info     Mean      Gmd      .05      .10 \n   10560      131      960        1     -692    310.8  -1301.6  -1014.5 \n     .25      .50      .75      .90      .95 \n  -800.5   -676.3   -455.4   -375.7   -350.2 \n\nlowest : -7385.96 -5998.49 -5781.88 -4223.40 -4037.32\nhighest:  -282.68  -274.43  -265.41  -257.87  -231.70\n--------------------------------------------------------------------------------\nWage \n       n  missing distinct     Info     Mean      Gmd      .05      .10 \n   10691        0     4507        1     4265     2446     1778     1993 \n     .25      .50      .75      .90      .95 \n    2546     3614     5172     7360     9149 \n\nlowest :  1600.00  1603.80  1605.80  1606.60  1614.60\nhighest: 18405.33 19012.28 19521.93 21039.15 21334.65\n--------------------------------------------------------------------------------\nRentAdjustment \n       n  missing distinct     Info     Mean      Gmd      .05      .10 \n      72    10619       71        1      763    794.6     94.3    111.0 \n     .25      .50      .75      .90      .95 \n   231.1    497.0    848.3   1403.5   2791.2 \n\nlowest :   77.23   88.47   91.48   94.23   94.35\nhighest: 2430.32 3232.28 3436.52 3852.02 4809.28\n--------------------------------------------------------------------------------\n\n\nFrom the output, there are zero missing values across all columns in resident_financial\n\n\n\n\n\n\nTip\n\n\n\nThe describe() function provides summary statistics for numerical variables by default. If we need to include categorical variables as well, it can set the fast = FALSE argument Hmisc::describe(resident_info, fast = FALSE)\nBy setting fast = FALSE, the describe() function will calculate summary statistics for both numerical and categorical variables in the resident_info data frame.\n\n\n\n\nCreating detailed summary table\n\ndf3 <- resident_financial %>% \n  select(-starts_with('Q'), -starts_with('HQ')) %>%\n  mutate_if(is.integer, as.numeric) %>%\n  mutate_if(is.logical, as.numeric)\n\nSummary_Table <- df3 %>% select_if(is.numeric)\n\nprint(dfSummary(Summary_Table, graph.magnif = 0.75), method = 'render')\n\n\n\nData Frame Summary\nSummary_Table\nDimensions: 10691 x 9\n  Duplicates: 41\n\n\n  \n    \n      No\n      Variable\n      Stats / Values\n      Freqs (% of Valid)\n      Graph\n      Valid\n      Missing\n    \n  \n  \n    \n      1\n      haveKids\n[numeric]\n      Min  : 0Mean : 0.3Max  : 1\n      0:7673(71.8%)1:3018(28.2%)\n      \n      10691\n(100.0%)\n      0\n(0.0%)\n    \n    \n      2\n      age\n[numeric]\n      Mean (sd) : 39.1 (12.4)min ≤ med ≤ max:18 ≤ 39 ≤ 60IQR (CV) : 21 (0.3)\n      43 distinct values\n      \n      10691\n(100.0%)\n      0\n(0.0%)\n    \n    \n      3\n      joviality\n[numeric]\n      Mean (sd) : 0.5 (0.3)min ≤ med ≤ max:0 ≤ 0.4 ≤ 1IQR (CV) : 0.5 (0.6)\n      1011 distinct values\n      \n      10691\n(100.0%)\n      0\n(0.0%)\n    \n    \n      4\n      Education\n[numeric]\n      Mean (sd) : -51.1 (35.9)min ≤ med ≤ max:-182.3 ≤ -38 ≤ -12.8IQR (CV) : 60.4 (-0.7)\n      8 distinct values\n      \n      3018\n(28.2%)\n      7673\n(71.8%)\n    \n    \n      5\n      Food\n[numeric]\n      Mean (sd) : -346.4 (85.2)min ≤ med ≤ max:-590.6 ≤ -308.5 ≤ -32IQR (CV) : 138.5 (-0.2)\n      7944 distinct values\n      \n      10691\n(100.0%)\n      0\n(0.0%)\n    \n    \n      6\n      Recreation\n[numeric]\n      Mean (sd) : -436.5 (221.4)min ≤ med ≤ max:-1962.1 ≤ -405.5 ≤ -5.9IQR (CV) : 238.6 (-0.5)\n      8848 distinct values\n      \n      9492\n(88.8%)\n      1199\n(11.2%)\n    \n    \n      7\n      Shelter\n[numeric]\n      Mean (sd) : -692 (317.9)min ≤ med ≤ max:-7386 ≤ -676.3 ≤ -231.7IQR (CV) : 345.1 (-0.5)\n      960 distinct values\n      \n      10560\n(98.8%)\n      131\n(1.2%)\n    \n    \n      8\n      Wage\n[numeric]\n      Mean (sd) : 4265.1 (2436.3)min ≤ med ≤ max:1600 ≤ 3613.9 ≤ 21334.7IQR (CV) : 2625.6 (0.6)\n      4483 distinct values\n      \n      10691\n(100.0%)\n      0\n(0.0%)\n    \n    \n      9\n      RentAdjustment\n[numeric]\n      Mean (sd) : 763 (903.6)min ≤ med ≤ max:77.2 ≤ 497 ≤ 4809.3IQR (CV) : 617.2 (1.2)\n      71 distinct values\n      \n      72\n(0.7%)\n      10619\n(99.3%)\n    \n  \n\nGenerated by summarytools 1.0.1 (R version 4.2.3)2023-05-14\n\n\n\n\n\n\n\n\n\n\n\n\nImportant\n\n\n\n\n\n\nThe dataset contains information on 10,691 participants. The householdSize variable indicates that the majority of households have 1 or 2 members, with proportions of 0.378 and 0.339, respectively.\nThe variable haveKids shows that 28.2% of the participants have kids, while 71.8% do not.\nThe age variable has a mean age of 39.13 years, with a range from 18 to 60. The distribution shows that the majority of participants are between 29 and 50 years old.\nThe educationLevel variable indicates that the highest proportion of participants (48.3%) have a high school or college education, followed by 26% with a bachelor’s degree and 19.1% with a graduate degree.\nThe interestGroup variable represents the interest groups of the participants, with values ranging from A to J. The highest proportion of participants belongs to interest group J (11.1%), followed by groups E (10.8%) and H (10.5%).\nThe joviality variable has a mean joviality score of 0.4686, with a range from 0.000204 to 0.999234. The distribution of joviality scores shows that the majority of participants have scores between 0.2 and 0.7.\nThe dataset spans a time period from March 2022 to February 2023, with equal frequencies of observations in each month.\nThe Education, Food, Recreation, Shelter, and Wage variables represent financial aspects. These variables have varying ranges and distributions, indicating different levels of spending or income for the participants.\nThe RentAdjustment variable, with only 72 observations, indicates adjustments made to rental prices, ranging from 77.23 to 4809.28, with a mean of 763.\n\n\n\n\n\nDoing some Univariate Visualization on all the columns on Unique dataset\n\n\nhouseholdSizeCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\n\nWe are using resident_new table because it has the unique set of data for each participantID.\nThe code chunk creates a bar plot (geom_bar) for the householdSize column using ggplot2. The bars are filled with #69b3a2 color and have black outlines. The plot is given axis labels, a title, and a minimal theme. The plot is then converted to an interactive plotly object\n\n\n\n\n\n\n# Creating a bar plot for householdSize\nplot_household_size <- ggplot(resident_new, aes(x = householdSize)) +\n  geom_bar(fill = \"#69b3a2\", color = \"black\") +\n  labs(x = \"Household Size\", y = \"Count\") +\n  ggtitle(\"Distribution of Household Size\") +\n  theme_minimal()\n\n# Converting the plot to an interactive plotly object\nplotly_household_size <- ggplotly(plot_household_size) %>%\n  layout(\n    title = list(\n      text = \"Distribution of Household Size\",\n      x = 0.5\n    ),\n    xaxis = list(title = \"Household Size\"),\n    yaxis = list(title = \"Count\"),\n    plot_bgcolor = \"#f5f5f5\",\n    paper_bgcolor = \"#f5f5f5\",\n    font = list(color = \"#333333\")\n  )\n\n# Display the interactive plot\nplotly_household_size\n\n\n\n\n\nHaveKidsCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\n\nWe are using resident_new table because it has the unique set of data for each participantID.\nThe code chunk creates a bar plot (geom_bar) for the haveKids column using ggplot2. The bars are filled with two different colors (#69b3a2 and #E45756) to represent the categories “No” and “Yes” respectively. The plot is given axis labels, a title, and a minimal theme. The plot is then converted to an interactive plotly object.\n\n\n\n\n\n\n# Creating a bar plot for haveKids\nplot_have_kids <- ggplot(resident_new, aes(x = factor(haveKids))) +\n  geom_bar(fill = c(\"#69b3a2\", \"#E45756\"), color = \"black\") +\n  labs(x = \"Have Kids\", y = \"Count\") +\n  ggtitle(\"Distribution of Having Kids\") +\n  scale_x_discrete(labels = c(\"No\", \"Yes\")) +\n  theme_minimal()\n\n# Converting the plot to an interactive plotly object\nplotly_have_kids <- ggplotly(plot_have_kids) %>%\n  layout(\n    title = list(\n      text = \"Distribution of Having Kids\",\n      x = 0.5\n    ),\n    xaxis = list(title = \"Have Kids\"),\n    yaxis = list(title = \"Count\"),\n    plot_bgcolor = \"#f5f5f5\",\n    paper_bgcolor = \"#f5f5f5\",\n    font = list(color = \"#333333\")\n  )\n\n# Customize the bar colors\nplotly_have_kids <- plotly_have_kids %>%\n  layout(\n    colorway = c(\"#69b3a2\", \"#E45756\")\n  )\n\n# Display the interactive plot\nplotly_have_kids\n\n\n\n\n\nAgeCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\n\nWe are using resident_new table because it has the unique set of data for each participantID.\nThe code chunk creates a histogram (geom_histogram) for the age column using ggplot2. The histogram bars are filled with a light blue color and outlined in black. The plot is given axis labels, a title, and converted to an interactive plotly object\n\n\n\n\n\n\n# Creating a Histogram for age\nplot_age <- ggplot(resident_new, aes(x = age)) +\n  geom_histogram(binwidth = 5, fill = \"lightblue\", color = \"black\") +\n  labs(x = \"Age\", y = \"Count\") +\n  ggtitle(\"Distribution of Age\")\n\nplotly_age <- ggplotly(plot_age) %>%\n  layout(\n    title = \"Interactive Age Distribution\",\n    xaxis = list(title = \"Age\"),\n    yaxis = list(title = \"Count\"),\n    hovermode = \"closest\",\n    showlegend = FALSE\n  ) %>%\n  config(displayModeBar = TRUE)\n\n# Display the interactive plot\nplotly_age\n\n\n\n\n\nEducation & InterestCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\n\nWe are using resident_new table because it has the unique set of data for each participantID. -`The code chunk creates two bar plots using ggplot2 for the columns educationLevel and interestGroup. Each bar represents a category in the respective column, and the bars are filled with colors corresponding to the category. The plots are given axis labels and titles. The ggplot objects are then converted to interactive plotly objects\n\n\n\n\n\n\n# Creating a bar plot for EducationLevel & InterestGroup\nplot_education_level <- ggplot(resident_new, aes(x = educationLevel, fill = educationLevel)) +\n  geom_bar() +\n  labs(x = \"Education Level\", y = \"Count\") +\n  ggtitle(\"Distribution of Education Level\")\n\nplot_interest_group <- ggplot(resident_new, aes(x = interestGroup, fill = interestGroup)) +\n  geom_bar() +\n  labs(x = \"Interest Group\", y = \"Count\") +\n  ggtitle(\"Distribution of Interest Group\")\n\n# Convert plots to interactive plotly objects\nplotly_education_level <- ggplotly(plot_education_level)\nplotly_interest_group <- ggplotly(plot_interest_group)\n\n# Display the interactive plot\nplotly_education_level \nplotly_interest_group\n\n\n\n\n\nJovialityCode\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\n\nWe are using resident_new table because it has the unique set of data for each participantID.\nThe code chunk creates a dotplot using ggplot2 for the column joviality. Each dot represents a data point in the column, and the dots are stacked vertically with a ratio of 1.2 and a direction of upward. The dots are filled with a light blue color and have a red border.\n\n\n\n\n\n\n# Creating a dot plot using geom_dotplot\nplot_joviality_dot <- ggplot(resident_new, aes(x = joviality)) +\n  geom_dotplot(stackratio = 1.2,stackdir = \"up\",fill = \"#1696d2\", color = 'red',dotsize = .3) +\n  labs(title = \"Joviality\", x = NULL, y = NULL) +\n  theme(axis.text.y = element_blank(), \n        panel.grid.major = element_blank()\n        )\n\n# Display the dot plot\nplot_joviality_dot"
  },
  {
    "objectID": "Takehome Exercise/Takehome Ex 4/1.html",
    "href": "Takehome Exercise/Takehome Ex 4/1.html",
    "title": "ISSS608-VAA",
    "section": "",
    "text": "title: “Take-home Exercise 1”\nformat:\nhtml:\ncode-fold: true\ncode-summary: “code block”"
  },
  {
    "objectID": "Takehome Exercise/Takehome Ex 4/1.html#installing-r-packages",
    "href": "Takehome Exercise/Takehome Ex 4/1.html#installing-r-packages",
    "title": "ISSS608-VAA",
    "section": "1.1: Installing R packages",
    "text": "1.1: Installing R packages\npacman::p_load() function from the pacman package is used in the following code chunk to install and call the libraries of multiple R packages:\n\n#| code-fold: false\n\n#| warning: false\n\npacman::p_load(tidyverse, ggstatsplot, ggridges, plotly, patchwork, scales,\n\nggiraph, gganimate, gifski, ggpubr, ggdist, qqplotr, gt,\n\nHmisc, vcd, knitr, kableExtra, DT, rstatix,\n\nurbnthemes)\n\nInstalling package into 'C:/Users/ABHISHEK/AppData/Local/R/win-library/4.2'\n(as 'lib' is unspecified)\n\n\nWarning: package 'urbnthemes' is not available for this version of R\n\nA version of this package for your version of R might be available elsewhere,\nsee the ideas at\nhttps://cran.r-project.org/doc/manuals/r-patched/R-admin.html#Installing-packages\n\n\nWarning: unable to access index for repository http://www.stats.ox.ac.uk/pub/RWin/bin/windows/contrib/4.2:\n  cannot open URL 'http://www.stats.ox.ac.uk/pub/RWin/bin/windows/contrib/4.2/PACKAGES'\n\n\nWarning: 'BiocManager' not available.  Could not check Bioconductor.\n\nPlease use `install.packages('BiocManager')` and then retry.\n\n\nWarning in p_install(package, character.only = TRUE, ...):\n\n\nWarning in library(package, lib.loc = lib.loc, character.only = TRUE,\nlogical.return = TRUE, : there is no package called 'urbnthemes'\n\n\nWarning in pacman::p_load(tidyverse, ggstatsplot, ggridges, plotly, patchwork, : Failed to install/load:\nurbnthemes"
  },
  {
    "objectID": "Takehome Exercise/Takehome Ex 4/1.html#data-sets",
    "href": "Takehome Exercise/Takehome Ex 4/1.html#data-sets",
    "title": "ISSS608-VAA",
    "section": "1.2: Data Sets",
    "text": "1.2: Data Sets\nTwo datasets are provided for the task: Participants.csv and FinancialJournal.csv .\nThese are uploaded as * demo_data * and * financial_data * respectively."
  },
  {
    "objectID": "Takehome Exercise/Takehome Ex 4/1.html#summary-statistics-of-demo_data",
    "href": "Takehome Exercise/Takehome Ex 4/1.html#summary-statistics-of-demo_data",
    "title": "ISSS608-VAA",
    "section": "1.2.1: Summary Statistics of demo_data",
    "text": "1.2.1: Summary Statistics of demo_data\n\n#| message: false\n\ndemo_data <- read_csv(\"data/Participants.csv\")\n\nRows: 1011 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (2): educationLevel, interestGroup\ndbl (4): participantId, householdSize, age, joviality\nlgl (1): haveKids\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nFirst 10 RowsDataset StructureSummary Statistics\n\n\n\nDisplaying first 10 rows using head(): *\n\n\n#| code-fold: false\n\nhead(demo_data,10) %>%\n\nkbl() %>%\n\nkable_material()\n\n\n\n \n  \n    participantId \n    householdSize \n    haveKids \n    age \n    educationLevel \n    interestGroup \n    joviality \n  \n \n\n  \n    0 \n    3 \n    TRUE \n    36 \n    HighSchoolOrCollege \n    H \n    0.0016267 \n  \n  \n    1 \n    3 \n    TRUE \n    25 \n    HighSchoolOrCollege \n    B \n    0.3280865 \n  \n  \n    2 \n    3 \n    TRUE \n    35 \n    HighSchoolOrCollege \n    A \n    0.3934696 \n  \n  \n    3 \n    3 \n    TRUE \n    21 \n    HighSchoolOrCollege \n    I \n    0.1380634 \n  \n  \n    4 \n    3 \n    TRUE \n    43 \n    Bachelors \n    H \n    0.8573967 \n  \n  \n    5 \n    3 \n    TRUE \n    32 \n    HighSchoolOrCollege \n    D \n    0.7729578 \n  \n  \n    6 \n    3 \n    TRUE \n    26 \n    HighSchoolOrCollege \n    I \n    0.8339807 \n  \n  \n    7 \n    3 \n    TRUE \n    27 \n    Bachelors \n    A \n    0.9581894 \n  \n  \n    8 \n    3 \n    TRUE \n    20 \n    Bachelors \n    G \n    0.6975548 \n  \n  \n    9 \n    3 \n    TRUE \n    35 \n    Bachelors \n    D \n    0.4671314 \n  \n\n\n\n\n\n\n\n\nChecking the structure of demo_data using str(): *\n\n\n#| code-fold: false\n\nstr(demo_data)\n\nspc_tbl_ [1,011 × 7] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ participantId : num [1:1011] 0 1 2 3 4 5 6 7 8 9 ...\n $ householdSize : num [1:1011] 3 3 3 3 3 3 3 3 3 3 ...\n $ haveKids      : logi [1:1011] TRUE TRUE TRUE TRUE TRUE TRUE ...\n $ age           : num [1:1011] 36 25 35 21 43 32 26 27 20 35 ...\n $ educationLevel: chr [1:1011] \"HighSchoolOrCollege\" \"HighSchoolOrCollege\" \"HighSchoolOrCollege\" \"HighSchoolOrCollege\" ...\n $ interestGroup : chr [1:1011] \"H\" \"B\" \"A\" \"I\" ...\n $ joviality     : num [1:1011] 0.00163 0.32809 0.39347 0.13806 0.8574 ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   participantId = col_double(),\n  ..   householdSize = col_double(),\n  ..   haveKids = col_logical(),\n  ..   age = col_double(),\n  ..   educationLevel = col_character(),\n  ..   interestGroup = col_character(),\n  ..   joviality = col_double()\n  .. )\n - attr(*, \"problems\")=<externalptr> \n\n\nThere are a total of 1011 rows and 7 variables. The output reveals that variables * participantId * and * householdSize * have been read as numeric, continuous data types, but should be analysed as nominal data instead.\n\n\n\nInspecting summary statistics of the dataset using describe() from Hmisc pacakage: *\n\n\n#| code-fold: false\n\nHmisc::describe(demo_data)\n\ndemo_data \n\n 7  Variables      1011  Observations\n--------------------------------------------------------------------------------\nparticipantId \n       n  missing distinct     Info     Mean      Gmd      .05      .10 \n    1011        0     1011        1      505    337.3     50.5    101.0 \n     .25      .50      .75      .90      .95 \n   252.5    505.0    757.5    909.0    959.5 \n\nlowest :    0    1    2    3    4, highest: 1006 1007 1008 1009 1010\n--------------------------------------------------------------------------------\nhouseholdSize \n       n  missing distinct     Info     Mean      Gmd \n    1011        0        3    0.886    1.964   0.8635 \n                            \nValue          1     2     3\nFrequency    337   373   301\nProportion 0.333 0.369 0.298\n--------------------------------------------------------------------------------\nhaveKids \n       n  missing distinct \n    1011        0        2 \n                      \nValue      FALSE  TRUE\nFrequency    710   301\nProportion 0.702 0.298\n--------------------------------------------------------------------------------\nage \n       n  missing distinct     Info     Mean      Gmd      .05      .10 \n    1011        0       43    0.999    39.07     14.3       20       22 \n     .25      .50      .75      .90      .95 \n      29       39       50       56       58 \n\nlowest : 18 19 20 21 22, highest: 56 57 58 59 60\n--------------------------------------------------------------------------------\neducationLevel \n       n  missing distinct \n    1011        0        4 \n                                                                      \nValue                Bachelors            Graduate HighSchoolOrCollege\nFrequency                  232                 170                 525\nProportion               0.229               0.168               0.519\n                              \nValue                      Low\nFrequency                   84\nProportion               0.083\n--------------------------------------------------------------------------------\ninterestGroup \n       n  missing distinct \n    1011        0       10 \n\nlowest : A B C D E, highest: F G H I J\n                                                                      \nValue          A     B     C     D     E     F     G     H     I     J\nFrequency    102    91   102    96    83   106   108   111    96   116\nProportion 0.101 0.090 0.101 0.095 0.082 0.105 0.107 0.110 0.095 0.115\n--------------------------------------------------------------------------------\njoviality \n       n  missing distinct     Info     Mean      Gmd      .05      .10 \n    1011        0     1011        1   0.4938   0.3364  0.05642  0.10871 \n     .25      .50      .75      .90      .95 \n 0.24007  0.47754  0.74682  0.90645  0.96024 \n\nlowest : 0.000204000 0.000265000 0.000985000 0.001365799 0.001626703\nhighest: 0.992601749 0.997604884 0.997670843 0.998644049 0.999233967\n--------------------------------------------------------------------------------\n\n\nFrom the output, there are zero missing values across all columns in * demo_data *.\n\n\n\n\n\nInitial Insights from Summary Statistics *\n\nThere seems to be a fairly even distribution of participants across * joviality , householdSize , age * and * interestGroup *. There are more participants who do not have children, and approximately half of them have attained the highest education at high school or college level. The distributions and correlations of these variables will be investigated further in subsequent sections, after appropriate data wrangling techniques have been applied.\n\n\nChanging Data Types *:\n\nparticipantId * is classified as <dbl  >, numerical continuous data, instead of nominal. This is cast as <chr  > class using as.character()\n\n\neducationLevel * is classified as <chr  > categorical data, and consists of four levels, with inherent hierarchy. This variable is cast as factor type on an ordinal scale using the ordered() function\n\n\nhouseholdSize * and * interestGroup * are classified as <dbl  > and <chr  > respectively, but are categorical in nature with different levels. These variables are cast as factors using as.factor()\n\n\n\ndemo_data_new <- demo_data %>%\n\n# Changing participantId to character\n\nmutate(participantId = as.character(demo_data$participantId),\n\n# Updating educationLevel with ordinal scale\n\neducationLevel = ordered(demo_data$educationLevel, levels = c(\"Graduate\", \"Bachelors\", \"HighSchoolOrCollege\", \"Low\")),\n\n# Casting householdSize and interestGroup as factors\n\nhouseholdSize = as.factor(demo_data$householdSize),\n\ninterestGroup = as.factor(demo_data$interestGroup)\n\n)\n\n\ndemo_data_new: *\n\n\nhead(demo_data_new, 10) %>%\n\nkbl() %>%\n\nkable_styling(full_width = F, bootstrap_options = c(\"condensed\", \"responsive\"))\n\n\n\n \n  \n    participantId \n    householdSize \n    haveKids \n    age \n    educationLevel \n    interestGroup \n    joviality \n  \n \n\n  \n    0 \n    3 \n    TRUE \n    36 \n    HighSchoolOrCollege \n    H \n    0.0016267 \n  \n  \n    1 \n    3 \n    TRUE \n    25 \n    HighSchoolOrCollege \n    B \n    0.3280865 \n  \n  \n    2 \n    3 \n    TRUE \n    35 \n    HighSchoolOrCollege \n    A \n    0.3934696 \n  \n  \n    3 \n    3 \n    TRUE \n    21 \n    HighSchoolOrCollege \n    I \n    0.1380634 \n  \n  \n    4 \n    3 \n    TRUE \n    43 \n    Bachelors \n    H \n    0.8573967 \n  \n  \n    5 \n    3 \n    TRUE \n    32 \n    HighSchoolOrCollege \n    D \n    0.7729578 \n  \n  \n    6 \n    3 \n    TRUE \n    26 \n    HighSchoolOrCollege \n    I \n    0.8339807 \n  \n  \n    7 \n    3 \n    TRUE \n    27 \n    Bachelors \n    A \n    0.9581894 \n  \n  \n    8 \n    3 \n    TRUE \n    20 \n    Bachelors \n    G \n    0.6975548 \n  \n  \n    9 \n    3 \n    TRUE \n    35 \n    Bachelors \n    D \n    0.4671314"
  },
  {
    "objectID": "Takehome Exercise/Takehome Ex 4/1.html#summary-statistics-of-financial_data",
    "href": "Takehome Exercise/Takehome Ex 4/1.html#summary-statistics-of-financial_data",
    "title": "ISSS608-VAA",
    "section": "1.2.2: Summary Statistics of financial_data",
    "text": "1.2.2: Summary Statistics of financial_data\n\n#| message: false\n\nfinancial_data <- read_csv(\"data/FinancialJournal.csv\")\n\nRows: 1513636 Columns: 4\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (1): category\ndbl  (2): participantId, amount\ndttm (1): timestamp\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nAt a GlimpseSummary Statistics\n\n\n\n#| code-fold: false\n\nglimpse(financial_data)\n\nRows: 1,513,636\nColumns: 4\n$ participantId <dbl> 0, 0, 0, 1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 6,…\n$ timestamp     <dttm> 2022-03-01, 2022-03-01, 2022-03-01, 2022-03-01, 2022-03…\n$ category      <chr> \"Wage\", \"Shelter\", \"Education\", \"Wage\", \"Shelter\", \"Educ…\n$ amount        <dbl> 2472.50756, -554.98862, -38.00538, 2046.56221, -554.9886…\n\n\nThe dataset captures specific financial transactions by participants, with a single transaction recorded in each row. Participants may have multiple transactions over time.\n\n\n\n#| code-fold: false\n\nHmisc::describe(financial_data)\n\nfinancial_data \n\n 4  Variables      1513636  Observations\n--------------------------------------------------------------------------------\nparticipantId \n       n  missing distinct     Info     Mean      Gmd      .05      .10 \n 1513636        0     1011        1    480.9    341.2       43       86 \n     .25      .50      .75      .90      .95 \n     222      464      726      918      967 \n\nlowest :    0    1    2    3    4, highest: 1006 1007 1008 1009 1010\n--------------------------------------------------------------------------------\ntimestamp \n                  n             missing            distinct                Info \n            1513636                   0               87366                   1 \n               Mean                 Gmd                 .05                 .10 \n2022-08-26 05:00:48            10684501 2022-03-14 14:00:00 2022-03-31 07:20:00 \n                .25                 .50                 .75                 .90 \n2022-05-24 13:25:00 2022-08-25 15:00:00 2022-11-27 07:25:00 2023-01-22 10:20:00 \n                .95 \n2023-02-09 20:10:00 \n\nlowest : 2022-03-01 00:00:00 2022-03-01 04:50:00 2022-03-01 05:30:00 2022-03-01 05:40:00 2022-03-01 05:45:00\nhighest: 2023-02-28 23:35:00 2023-02-28 23:40:00 2023-02-28 23:45:00 2023-02-28 23:50:00 2023-02-28 23:55:00\n--------------------------------------------------------------------------------\ncategory \n       n  missing distinct \n 1513636        0        6 \n\nlowest : Education      Food           Recreation     RentAdjustment Shelter       \nhighest: Food           Recreation     RentAdjustment Shelter        Wage          \n                                                                      \nValue           Education           Food     Recreation RentAdjustment\nFrequency            3319         790051         296013            131\nProportion          0.002          0.522          0.196          0.000\n                                        \nValue             Shelter           Wage\nFrequency           11463         412659\nProportion          0.008          0.273\n--------------------------------------------------------------------------------\namount \n       n  missing distinct     Info     Mean      Gmd      .05      .10 \n 1513636        0     6690    0.981    20.05    66.15  -21.050  -15.182 \n     .25      .50      .75      .90      .95 \n  -5.594   -4.000   21.598  107.467  159.561 \n\nlowest : -1562.726 -1556.356 -1499.254 -1475.672 -1458.686\nhighest:  4059.861  4069.449  4078.119  4085.387  4096.526\n--------------------------------------------------------------------------------\n\n\nFrom the output, there are zero missing values across all columns in * financial_data *. Summary statistics revealed that a total of 1,513,636 financial transactions were captured over a year from March 2022 to February 2023.\n\n\n\n\n\nInitial Insights from Summary Statistics *\n\nThere seems to be a skewed distribution of transactions, with a higher proportion (0.522) falling under * category: Food * followed by * category: Wage. * Transaction * amount * has a wide range due to negative and positive values, and a skewed distribution due to large difference between 95th percentile value (159.561) and highest value (4096.526). The distributions and correlations of these variables will be investigated further in subsequent sections, after appropriate data wrangling and transformation techniques have been applied.\n\n\nData Quality Issues *:\n\nparticipantId * is classified as <dbl  >, numerical continuous data, instead of nominal. This is cast as <chr  > class using as.character()\n\n\ncategory * is classified as <chr  >, but is categorical in nature with six different levels. These is cast as factor type using as.factor()\n\n\ntimestamp * contains both Date and Time, which is not suitable for analysis. Year-Month is extracted and saved into a separate variable, * transDate *.\n\n\namount * is reflected as a numeric value with 3 decimal places. This is rounded to 2 d.p. to reflect standard currency structure while maintaing accuracy.\n\n\n\nfinancial_data_new <- financial_data %>%\n\n# Changing participantId to character\n\nmutate(participantID = as.character(financial_data$participantId),\n\n# Casting category as factor\n\ncategory = as.factor(financial_data$category),\n\n# Extracting Year-Month from timestamp\n\ntransDate = as.character(format(as.Date(financial_data  $timestamp), \"%Y-%m\")),\n\n# Rounding amount to 2 decimal places\n\namount = round(amount, digits = 2)\n\n) %>%\n\n# remove timestamp column\n\nselect(-timestamp) %>%\n\n# Sort by Participant ID\n\narrange(participantId)\n\n\nfinancial_data_new: *\n\n\nhead(financial_data_new, 10) %>%\n\nkbl() %>%\n\nkable_styling(full_width = F, bootstrap_options = c(\"condensed\", \"responsive\"))\n\n\n\n \n  \n    participantId \n    category \n    amount \n    participantID \n    transDate \n  \n \n\n  \n    0 \n    Wage \n    2472.51 \n    0 \n    2022-03 \n  \n  \n    0 \n    Shelter \n    -554.99 \n    0 \n    2022-03 \n  \n  \n    0 \n    Education \n    -38.01 \n    0 \n    2022-03 \n  \n  \n    0 \n    Shelter \n    -554.99 \n    0 \n    2022-03 \n  \n  \n    0 \n    Education \n    -38.01 \n    0 \n    2022-03 \n  \n  \n    0 \n    Wage \n    4.28 \n    0 \n    2022-03 \n  \n  \n    0 \n    Food \n    -4.17 \n    0 \n    2022-03 \n  \n  \n    0 \n    Wage \n    385.58 \n    0 \n    2022-03 \n  \n  \n    0 \n    Food \n    -4.17 \n    0 \n    2022-03 \n  \n  \n    0 \n    Wage \n    21.42 \n    0 \n    2022-03"
  },
  {
    "objectID": "Takehome Exercise/Takehome Ex 4/1.html#banding-of-age-into-age-groups",
    "href": "Takehome Exercise/Takehome Ex 4/1.html#banding-of-age-into-age-groups",
    "title": "ISSS608-VAA",
    "section": "2.1: Banding of Age into Age Groups",
    "text": "2.1: Banding of Age into Age Groups\nThe range of participants’ ages is rather wide, spanning from 18-60 years old:\n\noptions(width = 100)\n\ndescribe(demo_data_new$age)\n\ndemo_data_new$age \n       n  missing distinct     Info     Mean      Gmd      .05      .10      .25      .50      .75 \n    1011        0       43    0.999    39.07     14.3       20       22       29       39       50 \n     .90      .95 \n      56       58 \n\nlowest : 18 19 20 21 22, highest: 56 57 58 59 60\n\n\n\nThese may be grouped together by percentile, and analysed as age groups instead to give a better overview of different demographics. Each band is approximately grouped into 10-year age ranges:\n\n\n25th Percentile: 18-29yo *\n\n\n25-50th Percentile: 30-39yo *\n\n\n50-75th Percentile: 40-50yo *\n\n\n75th Percentile: 51-60yo *\n\n\n\n\n#  | fig-width: 8\n\n  # Grouping Age into Age Groups\n\ndemo_data_new  $ageGroup<- as.factor(cut(demo_data_new  $age,\n\nbreaks = c(0,29,39,50,60),\n\nlabels = c(\"18-29\", \"30-39\", \"40-50\", \"51-60\")))\n\n  # Setting default theme for all plots\n\n\n\n  # Barchart of ageGroup\n\nggplot(demo_data_new, aes(x = ageGroup)) +\n\ngeom_bar() +\n\nlabs(title = \"Participants are evenly distributed across Age Groups\",\n\nx = NULL,\n\ny = NULL) +\n\ngeom_text(stat = \"count\",\n\naes(label = after_stat(count)),\n\nvjust = -1) +\n\ntheme(text = element_text(size = 12),\n\nplot.background = element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\"))"
  },
  {
    "objectID": "Takehome Exercise/Takehome Ex 4/1.html#computing-new-variables-based-on-financial-transactions",
    "href": "Takehome Exercise/Takehome Ex 4/1.html#computing-new-variables-based-on-financial-transactions",
    "title": "ISSS608-VAA",
    "section": "2.2: Computing New Variables based on financial transactions",
    "text": "2.2: Computing New Variables based on financial transactions\n\nfinancial_data_new * lists out individual transactions by participant, and records both cash inflows and outflows. A boxplot is used to visualise the range of values by category:\n\n\n# | fig-width: 8\n\nggplot(financial_data_new, aes(x = amount,\n\ny = category)) +\n\nstat_boxplot(geom = \"errorbar\", width = 0.2) +\n\ngeom_boxplot() +\n\nlabs(title = \"Transaction Amount Range by Category\",\n\nx = NULL,\n\ny = NULL) +\n\ngeom_vline(aes(xintercept = 0),\n\ncolour=\"#f53b5d\", linewidth = 0.5, linetype = \"dashed\") +\n\ntheme(axis.ticks.y = element_blank(),\n\nplot.background = element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\"))\n\n\n\n\n\n\nInsights from Boxplot *\nTransactions are either outflows (-ve value) or inflows (+ve value)\n\nWage , Shelter * and * RentAdjustment * have a larger range of values compared to Recreation, Food and Education\n\n\nWage * seems to be made up of ‘clusters’ of points, with a gap in between higher wage groups and lower wage groups\n\n\n\nNew aggregate variables are computed based on this for further analysis:\n\n\nnumTrans *: Total Number of transactions per participant\n\n\nnetAmount *: Net Total amount ( $) of transactions per participant = (Inflow - Outflow)\n\n\nexpenseRatio *: % of inflow that is spent (outflow) per participant\n\n\nout_pctEdu, out_pctFood, out_pctRec, out_pctShelter *: % contribution to cash outflow by category\n\n\nin_pctWage, in_pctRentAdj *: % contribution to cash inflow by category\n\n\n\n# Create new dataframe with transformed variables\nfinancial_agg <- financial_data_new %>%\n                  group_by(participantId) %>% \n                  summarise(numTrans = n(), #< Count number of rows per participantId\n                            netAmount = sum(amount), #< Sum net total amount per participantId\n                            annualWage = sum(amount[category == \"Wage\"]), #< Sum total income per participantId\n                            \n                            totInflow = sum(amount[category == \"Wage\"]) + \n                                        sum(amount[category == \"RentAdjustment\"]), #< Compute inflow value\n                            totOutflow = sum(abs(amount[category == \"Education\"])) + \n                                         sum(abs(amount[category == \"Food\"])) +\n                                         sum(abs(amount[category == \"Recreation\"])) +\n                                         sum(abs(amount[category== \"Shelter\"])), #< Compute outflow value\n                            expenseRatio = round((totOutflow/totInflow), 2), #< Compute outflow/inflow ratio\n                        #< % of each category contribution to inflow\n                            in_pctWage = round((sum(amount[category == \"Wage\"])/totInflow), 2), \n                            in_pctRentAdj = round((sum(amount[category == \"RentAdjustment\"])/totInflow), 2),\n                        #< % of each category contribution to outflow    \n                            out_pctEdu = round((sum(abs(amount[category == \"Education\"]))/totOutflow), 2), \n                            out_pctFood = round((sum(abs(amount[category == \"Food\"]))/totOutflow), 2),\n                            out_pctRec = round((sum(abs(amount[category == \"Recreation\"]))/totOutflow), 2),\n                            out_pctShelter = round((sum(abs(amount[category == \"Shelter\"]))/totOutflow), 2) \n                            ) %>%\n                  replace(is.na(.),0) %>%\n                  ungroup()\n\n\nfinancial_agg: *\n\n\nhead(financial_agg, 10) %>%\n\nkbl() %>%\n\nkable_styling(full_width = F, bootstrap_options = c(\"condensed\", \"responsive\"))\n\n\n\n \n  \n    participantId \n    numTrans \n    netAmount \n    annualWage \n    totInflow \n    totOutflow \n    expenseRatio \n    in_pctWage \n    in_pctRentAdj \n    out_pctEdu \n    out_pctFood \n    out_pctRec \n    out_pctShelter \n  \n \n\n  \n    0 \n    1617 \n    94582.68 \n    109816.59 \n    109816.59 \n    15233.91 \n    0.14 \n    1.00 \n    0.00 \n    0.03 \n    0.21 \n    0.29 \n    0.47 \n  \n  \n    1 \n    1560 \n    78860.22 \n    96374.57 \n    96374.57 \n    17514.35 \n    0.18 \n    1.00 \n    0.00 \n    0.03 \n    0.18 \n    0.38 \n    0.41 \n  \n  \n    2 \n    1543 \n    70068.50 \n    85108.65 \n    85108.65 \n    15040.15 \n    0.18 \n    1.00 \n    0.00 \n    0.01 \n    0.23 \n    0.28 \n    0.48 \n  \n  \n    3 \n    1644 \n    66460.86 \n    82269.18 \n    82269.18 \n    15808.32 \n    0.19 \n    1.00 \n    0.00 \n    0.03 \n    0.21 \n    0.30 \n    0.46 \n  \n  \n    4 \n    1730 \n    82711.54 \n    106056.88 \n    110866.16 \n    28154.62 \n    0.25 \n    0.96 \n    0.04 \n    0.01 \n    0.12 \n    0.22 \n    0.65 \n  \n  \n    5 \n    1426 \n    5958.28 \n    23208.92 \n    23208.92 \n    17250.64 \n    0.74 \n    1.00 \n    0.00 \n    0.01 \n    0.24 \n    0.30 \n    0.45 \n  \n  \n    6 \n    1606 \n    4296.42 \n    23407.25 \n    23407.25 \n    19110.83 \n    0.82 \n    1.00 \n    0.00 \n    0.01 \n    0.20 \n    0.40 \n    0.40 \n  \n  \n    7 \n    2235 \n    47704.46 \n    72877.03 \n    72877.03 \n    25172.57 \n    0.35 \n    1.00 \n    0.00 \n    0.01 \n    0.24 \n    0.23 \n    0.52 \n  \n  \n    8 \n    2197 \n    17774.97 \n    44544.72 \n    44544.72 \n    26769.75 \n    0.60 \n    1.00 \n    0.00 \n    0.01 \n    0.22 \n    0.20 \n    0.57 \n  \n  \n    9 \n    1639 \n    136200.02 \n    152575.41 \n    152575.41 \n    16375.39 \n    0.11 \n    1.00 \n    0.00 \n    0.07 \n    0.21 \n    0.28 \n    0.44"
  },
  {
    "objectID": "Takehome Exercise/Takehome Ex 4/1.html#banding-of-participants-by-wage",
    "href": "Takehome Exercise/Takehome Ex 4/1.html#banding-of-participants-by-wage",
    "title": "ISSS608-VAA",
    "section": "2.3: Banding of participants by Wage",
    "text": "2.3: Banding of participants by Wage\nFrom the boxplot diagram in section 2.2, there is a large variation in wage range, and a segregation between lower and higher wage bands.\n\ndescribe(financial_agg$annualWage)\n\nfinancial_agg$annualWage \n       n  missing distinct     Info     Mean      Gmd      .05      .10      .25      .50      .75 \n    1011        0     1011        1    45102    31841     2482     2704    28096    40995    57654 \n     .90      .95 \n   79184   101220 \n\nlowest :   2098.36   2209.24   2235.99   2241.90   2252.72\nhighest: 174221.60 176406.39 179331.79 211439.15 211734.65\n\n\n\nBased on the Mean and distribution of values across percentiles as shown above, participants are banded according to annual wage:\n\n\nBottom 10th Percentile: low *\n\n\n11-50th Percentile: mid-low *\n\n\n50-90th Percentile: mid-high *\n\n\nTop 10th Percentile: high *\n\n\n\n\n  # Grouping Annual wage into income Groups\n\nfinancial_agg  $incomeGroup <- as.factor(cut(financial_agg  $annualWage,\n\nbreaks = c(0,2704,40995,79184,Inf),\n\nlabels = c(\"low\", \"mid-low\", \"mid-high\", \"high\")))\n\n  # Barchart of incomeGroup\n\nggplot(financial_agg, aes(x = incomeGroup)) +\n\ngeom_bar() +\n\nlabs(title = \"Higher concentration of Participants in Middle Income Groups\",\n\nx = NULL,\n\ny = NULL) +\n\ngeom_text(stat = \"count\",\n\naes(label = after_stat(count)),\n\nvjust = -1) +\n\ntheme(text = element_text(size = 12),\n\nplot.background = element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\"))"
  },
  {
    "objectID": "Takehome Exercise/Takehome Ex 4/1.html#home-ownership",
    "href": "Takehome Exercise/Takehome Ex 4/1.html#home-ownership",
    "title": "ISSS608-VAA",
    "section": "2.4: Home Ownership",
    "text": "2.4: Home Ownership\nTo derive home ownership from financial transactions, we filter out participants with transactions in the ‘RentAdjustment’ category. This is based on the assumption that ‘RentAdjustment’ is additional rental income for the participant, who is the home owner. A new boolean variable, * homeOwner *, is created to reflect this.\n\n  # Create new column homeOwner with boolean values, true if participant gets income from rent adjustment\n\nfinancial_agg <- financial_agg %>%\n\nmutate(homeOwner = if_else(in_pctRentAdj> 0, TRUE, FALSE))\n\n  # Barchart of homeOwner\n\nggplot(financial_agg, aes(x = homeOwner)) +\n\ngeom_bar() +\n\nlabs(title = \"The City has a very small proportion of Home Owners\",\n\nx = \"Home Owner?\",\n\ny = NULL) +\n\ngeom_text(stat = \"count\",\n\naes(label = after_stat(count)),\n\nvjust = -1) +\n\ntheme(text = element_text(size = 12),\n\nplot.background = element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\"))"
  },
  {
    "objectID": "Takehome Exercise/Takehome Ex 4/1.html#computing-annual-income-per-capita",
    "href": "Takehome Exercise/Takehome Ex 4/1.html#computing-annual-income-per-capita",
    "title": "ISSS608-VAA",
    "section": "2.5: Computing Annual Income per Capita",
    "text": "2.5: Computing Annual Income per Capita\nThe dataframes are first combined into * df_combined *:\n\ndf_combined   <- cbind(demo_data_new, financial_agg) %>%\n\nselect(unique(colnames(.)))\n\nDT::datatable(df_combined  [c(\"participantId\", \"ageGroup\", \"incomeGroup\", \"householdSize\", \"educationLevel\", \"haveKids\", \"interestGroup\", \"joviality\", \"numTrans\", \"expenseRatio\", \"out_pctEdu\", \"out_pctFood\", \"out_pctRec\", \"out_pctShelter\")  ],\n\nclass =\"compact\")\n\n\n\n\n\n\nThe formula used to determine Income per Capita for this study is as follows:\n$ $Income per Capita = frac{Total Annual Wage}{Household Size} $ $\n\n#| fig-width: 8\n#| fig-height: 5\n#| warning: false\n\n# Compute income per capita and save as new variable\ndf_combined <- df_combined %>%\n              mutate(incomePerCapita = round((annualWage/as.integer(householdSize)), 0))\n\n# Calculate min, max, 95th percentile and median values for annotations\nmin_incomePC <- round(min(df_combined$incomePerCapita),0)\nmax_incomePC <- round(max(df_combined$incomePerCapita),0)\nq_incomePC <- round(quantile(df_combined$incomePerCapita, probs = .95),0)\nmedian_incomePC <- round(median(df_combined$incomePerCapita),0)\n\n# Histogram of income per capita\nh <- ggplot(df_combined, aes(x = incomePerCapita)) +\n      geom_histogram(bins = 15,\n                    color = \"#F8F3E6\") +\n      scale_x_continuous(breaks = scales::pretty_breaks(n = 10),\n                        limits = c(500,140000),\n                        labels = label_dollar()) +\n      geom_vline(aes(xintercept = median_incomePC),\n                    colour=\"grey40\", linewidth = 0.8, linetype = \"dashed\") +\n      annotate(geom = \"text\", x = 50000, y = 250,\n              label = paste0(\"Median Income per Capita: $\", median_incomePC)) +\n      labs(x = NULL, y = NULL) +\n      theme_minimal() +\n      theme(axis.text.y = element_blank(),\n           panel.grid.major = element_blank(),\n           plot.background = element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\"))\n\n#Boxplot of Income per capita\nbox <- ggplot(df_combined, aes(y = incomePerCapita)) + \n          geom_boxplot(outlier.colour=\"salmon\", outlier.shape=16,\n                        outlier.size=1, notch=FALSE) + \n          coord_flip() + \n          annotate(geom = \"text\", x = 0.38, y = min_incomePC,\n                  label = paste0(\"$\", min_incomePC),\n                  color = \"grey30\") + \n          annotate(geom = \"text\", x = 0.38, y = q_incomePC,\n                  label = paste0(\"$\", q_incomePC),\n                  color = \"grey30\") +\n          annotate(geom = \"text\", x = 0.38, y = max_incomePC,\n                  label = paste0(\"$\", max_incomePC),\n                  color = \"salmon\") + \n          labs(title = \"Right-skewed distribution of Income per Capita\",\n               y = \"\", x = \"\") + \n          scale_y_continuous(limits = c(500,140000), \n                             labels = label_dollar()) +\n          stat_boxplot(geom=\"errorbar\", width=0.5) + \n          theme_minimal() +\n          theme(axis.text = element_blank(), \n                axis.ticks = element_blank(),\n                panel.grid.major = element_blank(),\n                plot.background =\n                  element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\"))\n\nhbox <- (box / h) + \n        plot_layout(heights = c(0.8, 4))\n\nhbox\n\nWarning: Removed 2 rows containing missing values (`geom_bar()`).\n\n\n\n\n\n\ndescribe(df_combined  $incomePerCapita)\n\ndf_combined$incomePerCapita \n       n  missing distinct     Info     Mean      Gmd      .05      .10      .25      .50      .75 \n    1011        0      987        1    27241    21160    923.5   1321.0  14741.0  23559.0  34914.0 \n     .90      .95 \n 53265.0  64212.0 \n\nlowest :    745    747    752    756    763, highest: 119282 122003 122060 124221 130647"
  },
  {
    "objectID": "Takehome Exercise/Takehome Ex 4/1.html#joviality",
    "href": "Takehome Exercise/Takehome Ex 4/1.html#joviality",
    "title": "ISSS608-VAA",
    "section": "3.1: * Joviality *",
    "text": "3.1: * Joviality *\nEach participant has a * joviality * score on a scale of 0 to 1. For the purpose of this study, we assume that the closer the score is to 1 (maximum), the more jovial the participant was recorded at the start of the survey. Joviality will thus be analysed across different demographic and financial variables, to find significant patterns and trends.\n\n3.1.1: Distribution\nThe distribution of joviality scores is first visualised to determine the variation of values across the sample population:\n\n#  | warning: false\n\n#  | fig-width: 8\n\n#mean_jov   <- mean(df_combined  $joviality)\n\n#std_jov   <-\n\nggplot(df_combined, aes(x = joviality)) +\n\ngeom_histogram(bins = 15,\n\ncolor = \"#F8F3E6\") +\n\n#stat_function(fun = dnorm, args = list(mean = mean_jov, sd = std_jov), col=\"#93c7c2\", size = .7)+\n\nscale_x_continuous(breaks = scales::pretty_breaks(n = 10),\n\nlimits = c(0,1)) +\n\ngeom_vline(aes(xintercept = mean(joviality)),\n\ncolour=\"#f53b5d\", linewidth = 0.8, linetype = \"dashed\") +\n\ngeom_vline(aes(xintercept = median(joviality)),\n\ncolour=\"grey40\", linewidth = 0.8, linetype = \"dashed\") +\n\nlabs(x = \"Joviality Score\",\n\ny = NULL) +\n\ntheme(axis.ticks.y = element_blank(),\n\nplot.background = element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\"))\n\nWarning: Removed 2 rows containing missing values (`geom_bar()`).\n\n\n\n\n\nThe mean < span > joviality score is close to the median < span >, suggesting that joviality resembles a normal distribution.\n\n\n3.1.2: * Are there differences in Joviality Scores Across Income and Age Groups? *\nWe seek to find out if specific groups within the population have reported lower or higher joviality scores, and if this difference between factor levels in the sample is significant enough to represent the overall city population.\nA normality assumption test is first conducted across factor levels for joviality score across income and age groups. At a confidence level of 95%, we test the following hypothesis:\n$ $H_0: Joviality is normally distributed across groups $ $\n$ $H_1: Joviality is not normally distributed across groups $ $\n\nIncome Groups *\n\n\nDisributionNormality TestANOVA\n\n\n\n#  | fig-width: 8\n\nggplot(df_combined, aes(x = joviality, fill = incomeGroup)) +\n\ngeom_density(alpha = 0.4) +\n\nlabs(title = \"Distribution of Joviality Score Across Income Groups\") +\n\nannotate(geom = \"text\", x = 0.2, y = 2.4,\n\nlabel = \"High income groups recorded lower joviality\") +\n\nannotate(geom = \"text\", x = 0.8, y = 2.05,\n\nlabel = \"Low income groups recorded higher joviality\") +\n\ntheme(axis.text.y = element_blank(),\n\naxis.title.y = element_blank(),\n\npanel.grid.major = element_blank(),\n\nplot.background = element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\"))\n\n\n\n\n\n\n\n#  | fig-width: 8\n\n#  | fig-height: 5\n\nggplot(df_combined,\n\nmapping = aes(sample = joviality,\n\nfill = incomeGroup))+\n\nstat_qq_band(alpha=0.15) +\n\nstat_qq_line(alpha=0.15) +\n\nstat_qq_point(size=0.5) +\n\nfacet_wrap(  ~ incomeGroup, nrow = 1) +\n\nlabs(title = \"Deviation from normality across Income Groups\",\n\nsubtitle = \"Q-Q plots visually indicate that the data is not normally distributed\",\n\nx = \"\", y = \"\") +\n\ntheme_bw() +\n\ntheme(legend.position = \"none\",\n\naxis.text.y = element_blank(),\n\naxis.text.x = element_blank(),\n\naxis.ticks.y = element_blank(),\n\naxis.ticks.x = element_blank(),\n\npanel.grid.minor = element_blank(),\n\nplot.background = element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\"))\n\n\n\n\n\ndf_combined %>%\n\ngroup_by(incomeGroup) %>%\n\nshapiro_test(joviality) %>%\n\nungroup() %>%\n\nkbl() %>%\n\nkable_styling(full_width = F, bootstrap_options = \"responsive\")\n\n\n\n \n  \n    incomeGroup \n    variable \n    statistic \n    p \n  \n \n\n  \n    low \n    joviality \n    0.9179184 \n    9.10e-06 \n  \n  \n    mid-low \n    joviality \n    0.9467014 \n    0.00e+00 \n  \n  \n    mid-high \n    joviality \n    0.9534245 \n    0.00e+00 \n  \n  \n    high \n    joviality \n    0.9249118 \n    2.37e-05 \n  \n\n\n\n\n\nSince the p-value across each income group is < significance level 0.05, we reject the null hypothesis, concluding that * joviality does not follow a normal distribution across income groups *. To test if there is a significant difference between groups, a non-parametric test will be used in subsequent analysis, with median value as measure of central tendency.\n\n\nA non-parametric Kruskal-Wallis one-way ANOVA test is conducted to determine if there is a significant difference in joviality score between income groups. At a significance level of 0.05, we test the following hypothesis:\n$ $H_0: There is no difference in mu between income groups $ $\n$ $H_0: There is a difference in mu between two or more income groups $ $\nThe p-value is < significance level of 0.05, so we can reject the null hypothesis and conclude that median joviality differs among income groups. In fact, there is a large difference in mean joviality between low income and high income groups, * with participants in low income groups having greater joviality (median = 0.75) than higher income groups (median = 0.23). *\n\n\n\n\nAge Groups *\n\n\nDistributionNormality TestANOVA\n\n\n\n\n\n\ndf_combined %>%\n\ngroup_by(ageGroup) %>%\n\nshapiro_test(joviality) %>%\n\nungroup() %>%\n\nkbl() %>%\n\nkable_styling(full_width = F, bootstrap_options = \"responsive\")\n\n\n\n \n  \n    ageGroup \n    variable \n    statistic \n    p \n  \n \n\n  \n    18-29 \n    joviality \n    0.9502827 \n    1e-07 \n  \n  \n    30-39 \n    joviality \n    0.9384257 \n    0e+00 \n  \n  \n    40-50 \n    joviality \n    0.9526016 \n    2e-07 \n  \n  \n    51-60 \n    joviality \n    0.9519616 \n    6e-07 \n  \n\n\n\n\n\nSince the p-value across each age group is < 0.05, we reject the null hypothesis, concluding that joviality does not follow a normal distribution across age groups either. To test if there is a significant difference between groups, a non-parametric test will be used in subsequent analysis.\n\n\nA non-parametric Kruskal-Wallis one-way ANOVA test is conducted to determine if there is a significant difference in mean joviality score between age groups. At a significance level of 0.05, we test the following hypothesis:\n$ $H_0: There is no difference in mu between age groups $ $\n$ $H_0: There is a difference in mu between two or more age groups $ $\nThe p-value 0.08 is > significant level of 0.05, so we conclude that * there is no significant difference in mean joviality score across age groups. *\n\n\n\nWhile the one-way ANOVA tests reported significant differences in joviality between income groups and not age groups, there are still trends that can be observed when comparing multiple groups and factor levels. This gives more specific insight into demographic patterns, as visualised in the following chart that compares joviality score across both Age and Income groups:\n\n#  | warning: false\n\n  # Calculate mean joviality per tile\n\ngbcols   <- c(\"ageGroup\", \"incomeGroup\")\n\ncal_joviality   <- df_combined %>%\n\ngroup_by(across(all_of(gbcols))) %>%\n\nsummarise(mean_joviality = round(mean(joviality),2), .groups = \"drop\") %>%\n\nungroup()\n\n  # Style tooltip\n\ntooltip_css   <- \"background-color:#3E4254; font-style:bold; color:#F8F3E6;\"\n\n  # Tile Plot\n\ngg_tile <-ggplot(cal_joviality,\n\naes(x = ageGroup, y = incomeGroup)) +\n\ngeom_tile_interactive(aes(fill = mean_joviality,\n\ntooltip = paste(\"Age Group: \", ageGroup, \"  <br>\",\n\n\"Income Group: \", incomeGroup, \"  <br >\",\n\n\"Mean Joviality Score: \", mean_joviality))) +\n\nscale_fill_gradient(low = \"#0a4c6a\",\n\nhigh = \"#F8F3E6\",\n\nspace = \"Lab\",\n\nna.value = \"grey50\",\n\nguide = \"colourbar\",\n\naesthetics = \"fill\") +\n\nlabs(title = \"Joviality across Income and Age Groups\",\n\nx = \"Age Group\",\n\ny = \"Income Group\") +\n\ntheme(legend.position = \"right\",\n\nlegend.direction = \"vertical\",\n\naxis.line.x = element_blank(),\n\npanel.grid.major.y = element_blank()) +\n\n\n\ntheme(plot.background = element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\"))\n\nggiraph::girafe(ggobj = gg_tile,\n\nwidth_svg = 6,\n\nheight_svg = 6  *0.618,\n\nfonts = list(sans = \"Lato Regular\"),\n\noptions = list(opts_tooltip(css = tooltip_css)))\n\n\n\n\n\n\n\nDesign Considerations *\nA heatmap was selected to visualise two categorical variables with tiles filled by the value of"
  },
  {
    "objectID": "Takehome Exercise/Takehome Ex 4/1.html#age",
    "href": "Takehome Exercise/Takehome Ex 4/1.html#age",
    "title": "ISSS608-VAA",
    "section": "3.2 Age:",
    "text": "3.2 Age:\n`{r}\n`\nWhat is the mean amount of transactions in each category across all participants?\n\ncat_amount   <- financial_data_new %>%\n\ngroup_by(category) %>%\n\nsummarise(amount = mean(amount)) %>%\n\nungroup()\n\nggplot(cat_amount, aes(x = amount, y = category)) +\n\ngeom_bar(stat = \"identity\",\n\naes(fill = ifelse(amount   < 0, \"Negative\", \"Positive\"))) +\n\ngeom_text(aes(label = paste0(ifelse(amount   < 0, \"-  $\", \"  $\"), abs(round(amount, 2)))),\n\nvjust = -3, hjust = 0.5) +\n\nscale_fill_manual(name = \"Values\",\n\nvalues = c(\"Positive\" = \"#1696d2\", \"Negative\" = \"salmon\")) +\n\nlabs(x = \" Mean Amount ($)\") +\n\ntheme(axis.title.y = element_blank(),\n\nlegend.position = \"none\",\n\nplot.background = element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\"))\n\n\n\n\n\nggplot(financial_agg, aes(x = incomeGroup,\n\ny = expenseRatio)) +\n\ngeom_boxplot() +\n\nlabs(title = \"Expense Ratio is Higher in Middle Income Groups\",\n\nx = NULL,\n\ny = NULL) +\n\ntheme(text = element_text(size = 12),\n\nplot.background = element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\"))"
  },
  {
    "objectID": "Takehome Exercise/Takehome Ex 4/Take-home_Ex01.html",
    "href": "Takehome Exercise/Takehome Ex 4/Take-home_Ex01.html",
    "title": "Take-home Exercise 1",
    "section": "",
    "text": "Exploring Population Statistics of the City of Engagement \nDesign a user-friendly and interactive solution that helps city managers and planners to explore complex population data in an engaging way and reveal hidden patterns. This project aims to reveal the demographic and financial characteristics of the City of Engagement, using appropriate static and interactive statistical graphics methods in R."
  },
  {
    "objectID": "Takehome Exercise/Takehome Ex 4/Take-home_Ex01.html#installing-r-packages",
    "href": "Takehome Exercise/Takehome Ex 4/Take-home_Ex01.html#installing-r-packages",
    "title": "Take-home Exercise 1",
    "section": "1.1: Installing R packages",
    "text": "1.1: Installing R packages\npacman::p_load() function from the pacman package is used in the following code chunk to install and call the libraries of multiple R packages:\n\npacman::p_load(tidyverse, ggstatsplot, ggridges, plotly, \n               patchwork, scales, paletteer, viridis,\n               ggiraph, ggiraphExtra, gganimate, ggmosaic, \n               gifski, ggpubr, ggdist, ggrain, \n               qqplotr, gt, ggpmisc, \n               transformr, Hmisc, vcd, knitr, \n               kableExtra, DT, rstatix, urbnthemes)"
  },
  {
    "objectID": "Takehome Exercise/Takehome Ex 4/Take-home_Ex01.html#data-sets",
    "href": "Takehome Exercise/Takehome Ex 4/Take-home_Ex01.html#data-sets",
    "title": "Take-home Exercise 1",
    "section": "1.2: Data Sets",
    "text": "1.2: Data Sets\nTwo datasets are provided for the task: Participants.csv and FinancialJournal.csv.\nThese are uploaded as demo_data and financial_data respectively."
  },
  {
    "objectID": "Takehome Exercise/Takehome Ex 4/Take-home_Ex01.html#summary-statistics-of-demo_data",
    "href": "Takehome Exercise/Takehome Ex 4/Take-home_Ex01.html#summary-statistics-of-demo_data",
    "title": "Take-home Exercise 1",
    "section": "1.2.1: Summary Statistics of demo_data",
    "text": "1.2.1: Summary Statistics of demo_data\n\n\ncode block\ndemo_data <- read_csv(\"data/Participants.csv\")\n\n\n\nFirst 5 RowsDataset StructureData Health\n\n\nDisplaying first 5 rows using head():\n\nhead(demo_data,5) %>%\n  kbl() %>%\n  kable_material()\n\n\n\n \n  \n    participantId \n    householdSize \n    haveKids \n    age \n    educationLevel \n    interestGroup \n    joviality \n  \n \n\n  \n    0 \n    3 \n    TRUE \n    36 \n    HighSchoolOrCollege \n    H \n    0.0016267 \n  \n  \n    1 \n    3 \n    TRUE \n    25 \n    HighSchoolOrCollege \n    B \n    0.3280865 \n  \n  \n    2 \n    3 \n    TRUE \n    35 \n    HighSchoolOrCollege \n    A \n    0.3934696 \n  \n  \n    3 \n    3 \n    TRUE \n    21 \n    HighSchoolOrCollege \n    I \n    0.1380634 \n  \n  \n    4 \n    3 \n    TRUE \n    43 \n    Bachelors \n    H \n    0.8573967 \n  \n\n\n\n\n\n\n\nChecking the structure of demo_data using str():\n\nstr(demo_data)\n\nspc_tbl_ [1,011 × 7] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ participantId : num [1:1011] 0 1 2 3 4 5 6 7 8 9 ...\n $ householdSize : num [1:1011] 3 3 3 3 3 3 3 3 3 3 ...\n $ haveKids      : logi [1:1011] TRUE TRUE TRUE TRUE TRUE TRUE ...\n $ age           : num [1:1011] 36 25 35 21 43 32 26 27 20 35 ...\n $ educationLevel: chr [1:1011] \"HighSchoolOrCollege\" \"HighSchoolOrCollege\" \"HighSchoolOrCollege\" \"HighSchoolOrCollege\" ...\n $ interestGroup : chr [1:1011] \"H\" \"B\" \"A\" \"I\" ...\n $ joviality     : num [1:1011] 0.00163 0.32809 0.39347 0.13806 0.8574 ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   participantId = col_double(),\n  ..   householdSize = col_double(),\n  ..   haveKids = col_logical(),\n  ..   age = col_double(),\n  ..   educationLevel = col_character(),\n  ..   interestGroup = col_character(),\n  ..   joviality = col_double()\n  .. )\n - attr(*, \"problems\")=<externalptr> \n\n\nThere are a total of 1011 rows and 7 variables. The output reveals that variables participantId and householdSize have been read as numeric, continuous data types, but should be analysed as nominal data instead.\n\n\nChecking for duplicates:\n\ndemo_data[duplicated(demo_data),]\n\n# A tibble: 0 × 7\n# ℹ 7 variables: participantId <dbl>, householdSize <dbl>, haveKids <lgl>,\n#   age <dbl>, educationLevel <chr>, interestGroup <chr>, joviality <dbl>\n\n\nFrom the output, there are no duplicated rows found in demo_data.\nChecking for missing values:\n\nsum(is.na(demo_data))\n\n[1] 0\n\n\nFrom the output, there are zero missing values across all columns in demo_data.\n\n\n\n   \n Changing Data Types:\n\nparticipantId is classified as <dbl>, numerical continuous data, instead of nominal. This is cast as <chr> class using as.character()\neducationLevel is classified as <chr> categorical data, and consists of four levels, with inherent hierarchy. This variable is cast as factor type on an ordinal scale using the ordered() function\nhouseholdSize and interestGroup are classified as <dbl> and <chr> respectively, but are categorical in nature with different levels. These variables are cast as factors using as.factor()\n\n\n\ncode block\ndemo_data_new <- demo_data %>%\n  # Changing participantId to character \n  mutate(participantId = as.character(demo_data$participantId),\n\n  # Updating educationLevel with ordinal scale\n  educationLevel = ordered(demo_data$educationLevel, levels = c(\"Graduate\", \"Bachelors\", \"HighSchoolOrCollege\", \"Low\")),\n\n  # Casting householdSize and interestGroup as factors\n  householdSize = as.factor(demo_data$householdSize),\n  interestGroup = as.factor(demo_data$interestGroup)\n  )\n\n\n\n\nVisual Summary of demo_data_new:\n\n\ncode block\n# Setting default theme for all plots\n\n\n# Assigning each plot to a variable name to patch together\ndemo_p1 <- ggplot(demo_data_new, aes(x = householdSize)) +\n  geom_bar() +\n  labs(\n    title = \"Household Size\",\n    x = NULL,\n    y = NULL\n  ) +\n  # Set limit to ensure that geom_text annotation is not cut off\n  ylim(0,420\n  ) + \n  geom_text(\n    stat = \"count\",\n    aes(label = after_stat(count)),\n    vjust = -1) #< Set count annotations above bar\n\ndemo_p2 <- ggplot(demo_data_new, aes(x = haveKids)) +\n  geom_bar() +\n  labs(\n    title = \"Households with Children\",\n    x = NULL,\n    y = NULL\n  ) +\n  ylim(0,800\n  ) +\n  geom_text(\n    stat = \"count\",\n    aes(label = after_stat(count)),\n    vjust = -1)\n\ndemo_p3 <- ggplot(demo_data_new, aes(x = age)) +\n  geom_dotplot(\n    binwidth = 1,\n    stackratio = 1.2,\n    stackdir = \"up\",\n    fill = \"#1696d2\", #< Fill colour same as bar charts\n    color = NA,\n    dotsize = 0.6\n  ) +\n  labs(\n    title = \"Age\",\n    x = NULL,\n    y = NULL)\n\ndemo_p4 <- ggplot(demo_data_new, aes(x = educationLevel)) +\n  geom_bar() +\n  labs(\n    title = \"Highest Education\",\n    x = NULL,\n    y = NULL\n  ) +\n  ylim(0,600\n  ) +\n  geom_text(\n    stat = \"count\",\n    aes(label = after_stat(count)),\n    vjust = -1)\n\ndemo_p5 <- ggplot(demo_data_new, aes(x = interestGroup)) +\n  geom_bar() +\n  labs(\n    title = \"Interest Group\",\n    x = NULL,\n    y = NULL\n  ) +\n  ylim(0,150\n  ) +\n  geom_text(\n    stat = \"count\",\n    aes(label = after_stat(count)),\n    vjust = -1)\n\ndemo_jov <- ggplot(\n    demo_data_new, \n    aes(x = joviality)\n  ) +\n  geom_dotplot(\n    stackratio = 1.2,\n    stackdir = \"up\",\n    fill = \"#1696d2\", #< Fill colour same as bar charts\n    color = NA,\n    dotsize = .3\n  ) +\n  labs(\n    title = \"Joviality\",\n    x = NULL,\n    y = NULL\n  ) +\n  theme(\n    axis.text.y = element_blank(), \n    panel.grid.major = element_blank(), \n    plot.background = element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\")\n  )\n\ndemo_jov\n\n\n\n\n\n\n\ncode block\n# Patch all other summary plots together\nhouse_patch <- demo_p1 + demo_p2 #< patch together first so that age plot takes up larger width\ndemo_patch <- ((demo_p3 + house_patch) / (demo_p5 + demo_p4)\n              ) +\n              plot_layout(heights = c(3,2.5)\n              ) + \n              plot_annotation(\n                title = \"Summary Statistics of Demographic Data\")\n\ndemo_patch & \n  theme(\n  # Remove y axis since annotations already show count\n  axis.text.y = element_blank(), \n  # Remove lines in panel background for cleaner design\n  panel.grid.major = element_blank(), \n  # Same colour as webpage\n  plot.background = element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\")\n  ) \n\n\n\n\n\n\nInitial Insights from Summary Statistics\n\nThere seems to be a fairly even distribution of participants across householdSize and interestGroup. However, there is are uneven disributions across joviality score and age, with multimodal peaks in the dotplots.\nThe proportion of participants without children is more than twice that of those without children\nApproximately half of the participants have attained the highest education at high school or college level.\n\nThe distributions and correlations of these variables will be investigated further in subsequent sections, after appropriate data wrangling techniques have been applied."
  },
  {
    "objectID": "Takehome Exercise/Takehome Ex 4/Take-home_Ex01.html#summary-statistics-of-financial_data",
    "href": "Takehome Exercise/Takehome Ex 4/Take-home_Ex01.html#summary-statistics-of-financial_data",
    "title": "Take-home Exercise 1",
    "section": "1.2.2: Summary Statistics of financial_data",
    "text": "1.2.2: Summary Statistics of financial_data\n\n\ncode block\nfinancial_data <- read_csv(\"data/FinancialJournal.csv\")\n\n\n\nAt a GlimpseData Health\n\n\n\nglimpse(financial_data)\n\nRows: 1,513,636\nColumns: 4\n$ participantId <dbl> 0, 0, 0, 1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 6,…\n$ timestamp     <dttm> 2022-03-01, 2022-03-01, 2022-03-01, 2022-03-01, 2022-03…\n$ category      <chr> \"Wage\", \"Shelter\", \"Education\", \"Wage\", \"Shelter\", \"Educ…\n$ amount        <dbl> 2472.50756, -554.98862, -38.00538, 2046.56221, -554.9886…\n\n\nThe dataset captures specific financial transactions by participants, with a single transaction recorded in each row. Participants may have multiple transactions over time.\n\n\nChecking for duplicates:\n\nfinancial_data[duplicated(financial_data),]\n\n# A tibble: 1,113 × 4\n   participantId timestamp           category   amount\n           <dbl> <dttm>              <chr>       <dbl>\n 1             0 2022-03-01 00:00:00 Shelter    -555. \n 2             0 2022-03-01 00:00:00 Education   -38.0\n 3             1 2022-03-01 00:00:00 Shelter    -555. \n 4             1 2022-03-01 00:00:00 Education   -38.0\n 5             2 2022-03-01 00:00:00 Shelter    -557. \n 6             2 2022-03-01 00:00:00 Education   -12.8\n 7             3 2022-03-01 00:00:00 Shelter    -555. \n 8             3 2022-03-01 00:00:00 Education   -38.0\n 9             4 2022-03-01 00:00:00 Shelter   -1556. \n10             4 2022-03-01 00:00:00 Education   -12.8\n# ℹ 1,103 more rows\n\n\nFrom the output, there are 1113 duplicated rows found in financial_data.\nChecking for missing values:\n\nsum(is.na(financial_data))\n\n[1] 0\n\n\nFrom the output, there are zero missing values across all columns in financial_data.\n\n\n\n\n\nData Quality Issues:\n\nduplicated() revealed that there were 1113 duplicated entries in the financial data. These are removed from the dataframe. These will be removed using dplyr::unique() function\nparticipantId is classified as <dbl>, numerical continuous data, instead of nominal. This is cast as <chr> class using as.character()\ncategory is classified as <chr>, but is categorical in nature with six different levels. This is cast as factor type using as.factor()\ntimestamp contains both Date and Time, which is not suitable for analysis. Year-Month is extracted and saved into a separate variable, transDate, and cast as factor (categorical).\namount is reflected as a numeric value with 3 decimal places. This is rounded to 2 d.p. to reflect standard currency structure while maintaing accuracy.\n\nData format is unsuitable for analysis: pivot table with individual columns per category would give a better monthly summary of financial transactions by participant.\n\n\nAltering table format of financial_data:\n\nStep 1: Changing data types:Step 2: Create pivot table\n\n\n\n# Ensuring that duplicates are removed\nfinancial_data <- unique(financial_data)\n\n\nfinancial_data_new <- financial_data %>%\n  # Changing participantId to character \n  mutate(participantId = as.character(financial_data$participantId),\n\n  # Casting category as factor\n  category = as.factor(financial_data$category),\n\n  # Extracting Month-Year from timestamp and casting as factor\n  transDate = as.factor(format(parse_date_time(timestamp, \"YmdHMS\"), \"%Y-%m\")),\n  \n  # Rounding amount to 2 decimal places\n  amount = as.integer(round(amount, digits = 2))) %>%\n  \n  # remove timestamp column\n  select(-timestamp) %>%\n  \n  # Sort by Participant ID\n  arrange(participantId)\n\n\n\n\nfinancial_pivot <- financial_data_new %>%\n                    # Define row groups \n                    group_by(participantId, transDate) %>%\n  \n                    # Sum total amount per category for each month\n                    summarise(\n                      Education = sum(amount[category == \"Education\"]),\n                      Food = sum(amount[category == \"Food\"]),\n                      Recreation = sum(amount[category == \"Recreation\"]),\n                      Shelter = sum(amount[category == \"Shelter\"]),\n                      RentAdj = sum(amount[category == \"RentAdjustment\"]),\n                      Wage = sum(amount[category == \"Wage\"])) %>%\n                    ungroup()\n\n\n\n\n\n\ncode block\nhead(financial_pivot,5) %>%\n  kbl() %>%\n  kable_styling(\n    full_width = F, \n    bootstrap_options = c(\"condensed\", \"responsive\"))\n\n\n\n\n \n  \n    participantId \n    transDate \n    Education \n    Food \n    Recreation \n    Shelter \n    RentAdj \n    Wage \n  \n \n\n  \n    0 \n    2022-03 \n    -38 \n    -259 \n    -335 \n    -554 \n    0 \n    11902 \n  \n  \n    0 \n    2022-04 \n    -38 \n    -255 \n    -213 \n    -554 \n    0 \n    8610 \n  \n  \n    0 \n    2022-05 \n    -38 \n    -257 \n    -368 \n    -554 \n    0 \n    9020 \n  \n  \n    0 \n    2022-06 \n    -38 \n    -249 \n    -446 \n    -554 \n    0 \n    9020 \n  \n  \n    0 \n    2022-07 \n    -38 \n    -262 \n    -1030 \n    -554 \n    0 \n    8610 \n  \n\n\n\n\n\n   \nVisualising Expenditure Trends over Data Time Range:\n\nDesign Considerations\n\nTo visualise the different expenditure trends over time, a line plot was chosen\n\nSeparate lines were used for each expenditure category in order to show trend and amount differences\n\ngeom_point() dots were added to the trend lines to identify points in time, to visualise month-on-month changes\n\n\n Average expenditure per category is calculated from financial_pivot:\n\nUse group_by() to condense transactions by year-month\npivot_longer() to transpose categories back into a single column with factor levels, such that each expenditure category can be represented by a different line.\n\n\n\ncode block\n# Calculating mean amount per category\nmonthly_mean <- financial_pivot %>%\n    group_by(transDate) %>%\n    summarise(\n      num_people = n_distinct(participantId),\n      Education = abs(round((sum(Education)/num_people),2)),\n      Food = abs(round((sum(Food)/num_people),2)),\n      Recreation = abs(round((sum(Recreation)/num_people),2)),\n      Shelter = abs(round((sum(Shelter)/num_people),2)),\n      RentAdj = round((sum(RentAdj)/num_people),2),\n      Wage = round((sum(Wage)/num_people),2)) %>% \n  # change transDate to ymd format to arrange by date in lineplot\n    mutate(\n      transDate = ymd(paste(transDate, \"01\", sep = \"-\"))) %>% \n    ungroup()\n\nmonthly_mean %>%\n  kbl() %>%\n  kable_styling(full_width = F, bootstrap_options = c(\"condensed\", \"responsive\"))\n\n\n\n\n \n  \n    transDate \n    num_people \n    Education \n    Food \n    Recreation \n    Shelter \n    RentAdj \n    Wage \n  \n \n\n  \n    2022-03-01 \n    1011 \n    14.12 \n    307.30 \n    619.17 \n    624.27 \n    52.85 \n    6314.80 \n  \n  \n    2022-04-01 \n    880 \n    12.90 \n    328.17 \n    426.91 \n    635.77 \n    1.62 \n    3923.61 \n  \n  \n    2022-05-01 \n    880 \n    12.90 \n    338.31 \n    368.68 \n    634.11 \n    0.00 \n    4098.12 \n  \n  \n    2022-06-01 \n    880 \n    12.90 \n    327.00 \n    344.98 \n    634.11 \n    0.00 \n    4082.08 \n  \n  \n    2022-07-01 \n    880 \n    12.90 \n    338.49 \n    361.26 \n    634.11 \n    0.00 \n    3942.84 \n  \n  \n    2022-08-01 \n    880 \n    12.90 \n    337.62 \n    336.34 \n    634.11 \n    0.00 \n    4257.32 \n  \n  \n    2022-09-01 \n    880 \n    12.90 \n    326.89 \n    330.82 \n    634.11 \n    0.00 \n    4083.92 \n  \n  \n    2022-10-01 \n    880 \n    12.90 \n    338.35 \n    358.11 \n    634.11 \n    0.00 \n    3940.10 \n  \n  \n    2022-11-01 \n    880 \n    12.90 \n    326.85 \n    315.82 \n    634.11 \n    0.00 \n    4080.11 \n  \n  \n    2022-12-01 \n    880 \n    12.90 \n    337.89 \n    347.01 \n    634.11 \n    0.00 \n    4103.61 \n  \n  \n    2023-01-01 \n    880 \n    12.90 \n    338.06 \n    341.48 \n    634.11 \n    0.00 \n    4098.06 \n  \n  \n    2023-02-01 \n    880 \n    12.90 \n    304.88 \n    297.04 \n    634.11 \n    0.00 \n    3724.34 \n  \n\n\n\n\n\nFrom the table output, there were transactions from all 1011 participants in Mar-2022, but only 880 from Apr-2022 onwards. This suggests that the transactions from those 31 participants could have been skewing the data. financial data from 2022-03 will thus be excluded from datasets for further analysis using filter() function.\n\n\ncode block\n# Removing records from transDate \nfinancial_data_new <- financial_data_new %>%\n                        filter(transDate != \"2022-03\")\n\nfinancial_pivot <- financial_pivot %>%\n                    filter(transDate != \"2022-03\")\n\nmonthly_mean <- monthly_mean %>%\n                  filter(transDate != \"2022-03-01\")\n\n\nVisual Summary of financial data: monthly_mean:\n\n\ncode block\n# Extracting only expenditure on food and recreation\nfood_rec <- monthly_mean %>%\n    select(transDate, Food, Recreation) %>%\n    pivot_longer(\n      cols = !transDate, \n      names_to = \"category\",\n      values_to = \"amount\") %>%\n    mutate(\n      category = as.factor(category))\n  \n# Line plot to show variations in food and recreation\nfood_recplot <- ggplot(food_rec, \n  aes(x = transDate, \n      y= amount, \n      color = category) #< Ensure that each category is color coded\n  ) + \n  geom_line(\n    # Make line thicker\n    linewidth = 1\n  ) + \n  geom_point(\n    aes(\n      x = transDate, \n      y = amount, \n      color = category),\n    size = 1.5\n  ) +\n  scale_color_manual(\n    values = c(\"Food\" = \"#fdbf11\", \n              \"Recreation\" = \"grey10\")\n  ) +\n  scale_x_date(\n    date_labels = \"%Y-%m\", \n    date_breaks = \"1 month\"\n  ) +\n  scale_y_continuous(\n    # Ensuring that units were added to y-axis \n    labels = scales::dollar\n  ) + \n  labs(\n    title = \"Decreasing Trend in Monthly Expenditure on Recreation\",\n    subtitle = \"Variations in expenditure on Food, with sharp decline in Feb 2023\",\n    x = NULL,\n    y = NULL\n  ) +\n  theme(\n    plot.background = element_rect(\n      fill=\"#F8F3E6\",colour=\"#F8F3E6\")\n  )\n\n# Extracting only expenditure on Shelter and Education\nrent_edu <- monthly_mean %>%\n    select(transDate, Shelter, Education) %>%\n    pivot_longer(\n      cols = !transDate, \n      names_to = \"category\",\n      values_to = \"amount\") %>%\n    mutate(\n      category = as.factor(category))\n\n# Faceted line plot to show little variations in Shelter and Education\nrent_eduplot <- ggplot(rent_edu, \n  aes(x = transDate, \n      y= amount, \n      color = category) #< Ensure that each category is color coded\n  ) +\n  geom_line(\n    # Make line thicker\n    linewidth = 1\n  ) + \n  geom_point(\n    aes(\n      x = transDate, \n      y = amount, \n      color = category),\n    size = 1.5\n  ) +\n  annotate(\n    geom = \"text\",\n    # format x-axis value as date to specify coordinates\n    x = as.Date(\"2022-09-01\"),\n    y = 400,\n    label = \"Large gap in monthly expenditure on both categories\"\n  ) +\n  scale_color_manual(\n    values = c(\"Shelter\" = \"salmon\", \n              \"Education\" = \"#1696d2\")\n  ) +\n  scale_x_date(\n    date_labels = \"%Y-%m\", \n    date_breaks = \"1 month\"\n  ) +\n  scale_y_continuous(\n    # Ensuring that units were added to y-axis \n    labels = scales::dollar\n  ) + \n  labs(\n    title = \"Little Variation in Monthly Expenditure on Education and Shelter\",\n    x = NULL,\n    y = NULL\n  ) +\n  theme(\n    plot.background = element_rect(\n      fill=\"#F8F3E6\",colour=\"#F8F3E6\")\n  )\n\n# Patchwork both plots together\nexpatch <- (food_recplot / rent_eduplot) + \n  plot_layout(heights = c(3,2)) #< Allocate more space to top graph \n\nexpatch & theme(plot.background = element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\"))\n\n\n\n\n\n\nInitial Insights from Line Chart and Table\n\nExpenditure on education is the lowest, and has remained constant > probably refers to school fees, which is normally a fixed monthly amount\nExpenditure on recreation and food shows monthly variation, and have decreased from Apr 2022 to Feb 2023\nExpenditure on Shelter is significantly higher that other categories, and also remains constant > probably refers to rent"
  },
  {
    "objectID": "Takehome Exercise/Takehome Ex 4/Take-home_Ex01.html#computing-aggregate-transaction-variables-based-on-financial_data",
    "href": "Takehome Exercise/Takehome Ex 4/Take-home_Ex01.html#computing-aggregate-transaction-variables-based-on-financial_data",
    "title": "Take-home Exercise 1",
    "section": "2.1: Computing Aggregate Transaction Variables based on financial_data",
    "text": "2.1: Computing Aggregate Transaction Variables based on financial_data\n\nVisual Considerations\n\nRaincloud plots are used to capture the density and range of values by expense, with dotplots beneath the half-density plots revealing patterns in consistency\n\nSeparate plots were coded for -ve and +ve transactions, with Food & Recreation and Shelter & Education separated as well. This is due to the wide scale of y-axis values, which made the narrower density plots too condensed for the distribution to be viewed in full.\n\npatchwork package was used to group the plots together in a single figure, using plot_layout(heights) to configure height ratio of the overall patched plots\n\n\n\n\ncode block\n# Filtering Food and Recreation from data\nfr_range <- financial_data_new %>%\n    filter(\n      category %in% c(\"Food\", \"Recreation\")) %>%\n  # Getting Average amount per participant\n    group_by(\n      participantId, category) %>%\n    summarise(\n      num = n(),\n      avgamount = round((sum(amount)/num),2)) %>%\n  ungroup()\n\n# Food and Recreation Plot\nfr <- ggplot(fr_range, \n       aes(1, \n           y = avgamount, \n           fill = category,\n          color = category)\n  ) +\n  # Raincloud Plot\n  geom_rain(\n    alpha = .7,\n    # Adding outline to boxplot\n    boxplot.args = list(\n              color = \"grey20\", outlier.shape = NA),\n    violin.args = list(alpha = .7)\n  ) +\n  # Specifying colors, to match previous graph\n  scale_fill_manual(\n    values = c(\"#fdbf11\",\"grey10\")\n  ) +\n  scale_color_manual(\n    values = c(\"#fdbf11\",\"grey10\")\n  ) +\n  scale_y_continuous(\n    breaks = scales::pretty_breaks(n = 5),\n    labels = scales::dollar\n  ) +\n  labs(\n    title = \"Wider Range of Amount Spent on Recreation Compared to Food\"\n  ) +\n  theme(\n    axis.title.y = element_blank(),\n    axis.title.x = element_blank(),\n    axis.text.y = element_blank(),\n    axis.ticks.y = element_blank(),\n    plot.background = element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\")\n  ) + \n  coord_flip() \n\n# Filtering Education amounts and computing average\nes_range <- financial_data_new %>%\n    filter(\n      category %in% c(\"Education\", \"Shelter\")) %>%\n    group_by(\n      participantId, category) %>%\n    summarise(\n      num = n(),\n      avgamount = round((sum(amount)/num),2)) %>%\n  ungroup()\n\n# Education plot\nes <- ggplot(es_range, \n       aes(1, \n           y = avgamount, \n           fill = category,\n           color = category)\n  ) +\n  geom_rain(\n    alpha = .7,\n    boxplot.args = list(\n              color = \"grey20\", outlier.shape = NA),\n    violin.args = list(alpha = .7)\n  ) +\n  scale_y_continuous(\n    breaks = scales::pretty_breaks(n = 5),\n    labels = scales::dollar\n  ) +\n  scale_fill_manual(\n    values = c(\"#1696d2\",\"salmon\")\n  ) +\n  scale_color_manual(\n    values = c(\"#1696d2\",\"salmon\")\n  ) +\n  labs(\n    title = \"Dot Patterns Reveal Consistent Amounts Spent on Education, \\nwith Wider Variations in Amount Spent on Rent\",\n  ) + \n  theme(\n    axis.title.y = element_blank(),\n    axis.title.x = element_blank(),\n    axis.text.y = element_blank(),\n    axis.ticks.y = element_blank(),\n    plot.background = element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\")\n  ) + \n  coord_flip() \n\n# Filtering out +ve transactions\ninc_range <- financial_data_new %>%\n                filter(category %in% c(\"RentAdj\", \"Wage\")) %>%\n      group_by(\n      participantId, category) %>%\n    summarise(\n      num = n(),\n      avgamount = round((sum(amount)/num),2)) %>%\n  ungroup()\n\ninc <- ggplot(inc_range, \n       aes(1, \n           y = avgamount, \n           fill = category,\n          color = category)\n  ) +\n  geom_rain(\n    adjust = 1/6,\n    alpha = .7,\n    boxplot.args = list(\n              color = \"grey20\", outlier.shape = NA),\n    violin.args = list(alpha = .7)\n  ) +\n  # Specifying colors\n  scale_fill_manual(\n    values = c(\"#98cf90\",\"salmon\")\n  ) +\n  scale_color_manual(\n    values = c(\"#98cf90\",\"salmon\")\n  ) +\n  scale_y_continuous(\n    breaks = scales::pretty_breaks(n = 5),\n    labels = scales::dollar\n  ) +\n  labs(\n    title = \"Right-skewed Distribution of Average Income\"\n  ) +\n  theme(\n    axis.title.y = element_blank(),\n    axis.title.x = element_blank(),\n    axis.text.y = element_blank(),\n    axis.ticks.y = element_blank(),\n    plot.background = element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\")\n  ) + \n  coord_flip() \n\n\nWarning in (function (mapping = NULL, data = NULL, stat = \"identity\", position\n= \"identity\", : Ignoring unknown parameters: `adjust`\n\n\ncode block\n# Patchwork plots\nbottompatch <- es / inc\nmoneypatch <- (fr / bottompatch\n    ) +\n    plot_layout(\n      heights = c(2,3)\n    ) + \n    plot_annotation(\n      title = \"Varying Distributions of Expenditure and Income\"\n    )\n\nmoneypatch & theme(plot.background = element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\"))\n\n\n\n\n\n\nInsights from Raincloud Plots\n\nTransactions are either outflows (-ve value) or inflows (+ve value)\nWage, Shelter and RentAdjustment have a larger range of values compared to Recreation, Food and Education\nWage seems to be made up of ‘clusters’ of points, suggesting a large income gap between higher wage groups and lower wage groups\n\n\n\n\nNew aggregate variables are computed based on this for further analysis:\n\ntotInflow & totOutflow: Sum of cash inflow and outflow per participant\nmonthly_in: Average total cash inflow per month per participant (Income)\nmonthly_out: Average total cash outflow per month per participant (Expenditure)\nmonthlyWage: Average monthly income, per participant\nexpenseRatio: Ratio of outflow (expense) to inflow (income) per participant\nEducation, Food, Recreation, Shelter: Total expenditure by category\n\n\n\ncode block\n# Create new dataframe with transformed variables\nfinancial_agg <- financial_data_new %>%\n                  group_by(participantId) %>% \n                  summarise(numTrans = n_distinct(transDate), #< Count number of distinct months \n                            netAmount = sum(amount), #< Sum net total amount per participantId\n                            monthlyWage = (sum(amount[category == \"Wage\"]))/numTrans, #< Ave monthly income per participantId\n                            \n                            totRentAdj = sum(amount[category == \"RentAdjustment\"]),\n                            \n                            totInflow = sum(amount[category == \"Wage\"]) + \n                                        sum(amount[category == \"RentAdjustment\"]), #< Compute inflow value\n                            totOutflow = sum(abs(amount[category == \"Education\"])) + \n                                         sum(abs(amount[category == \"Food\"])) +\n                                         sum(abs(amount[category == \"Recreation\"])) +\n                                         sum(abs(amount[category== \"Shelter\"])), #< Compute outflow value\n                            expenseRatio = round((totOutflow/totInflow), 2), #< Compute outflow/inflow ratio\n                        #< Monthly Income and Expenditure\n                            monthly_in = round((totInflow/numTrans), 2), \n                            monthly_out = round((totOutflow/numTrans), 2), \n                        #< % of each category contribution to outflow    \n                            Education = sum(abs(amount[category == \"Education\"])), \n                            Food = sum(abs(amount[category == \"Food\"])),\n                            Recreation = sum(abs(amount[category == \"Recreation\"])),\n                            Shelter = sum(abs(amount[category == \"Shelter\"]))\n                            ) %>%\n                  replace(is.na(.),0) %>%\n                  select(-numTrans) %>% #< Drop column numTrans\n                  arrange(as.numeric(participantId)) %>%\n                  ungroup()\n\n\nfinancial_agg:\n\n\ncode block\nhead(financial_agg, 5) %>%\n  kbl() %>%\n  kable_styling(full_width = F, bootstrap_options = c(\"condensed\", \"responsive\"))\n\n\n\n\n \n  \n    participantId \n    netAmount \n    monthlyWage \n    totRentAdj \n    totInflow \n    totOutflow \n    expenseRatio \n    monthly_in \n    monthly_out \n    Education \n    Food \n    Recreation \n    Shelter \n  \n \n\n  \n    0 \n    84404 \n    8870.909 \n    0 \n    97580 \n    13176 \n    0.14 \n    8870.91 \n    1197.82 \n    418 \n    2784 \n    3880 \n    6094 \n  \n  \n    1 \n    71293 \n    7810.727 \n    0 \n    85918 \n    14625 \n    0.17 \n    7810.73 \n    1329.55 \n    418 \n    2746 \n    5367 \n    6094 \n  \n  \n    2 \n    62373 \n    6837.091 \n    0 \n    75208 \n    12835 \n    0.17 \n    6837.09 \n    1166.82 \n    132 \n    3016 \n    3571 \n    6116 \n  \n  \n    3 \n    58979 \n    6599.091 \n    0 \n    72590 \n    13611 \n    0.19 \n    6599.09 \n    1237.36 \n    418 \n    3008 \n    4091 \n    6094 \n  \n  \n    4 \n    75376 \n    8568.000 \n    0 \n    94248 \n    18872 \n    0.20 \n    8568.00 \n    1715.64 \n    132 \n    2925 \n    4793 \n    11022"
  },
  {
    "objectID": "Takehome Exercise/Takehome Ex 4/Take-home_Ex01.html#banding-of-age-and-wage-into-groups",
    "href": "Takehome Exercise/Takehome Ex 4/Take-home_Ex01.html#banding-of-age-and-wage-into-groups",
    "title": "Take-home Exercise 1",
    "section": "2.2: Banding of Age and Wage into Groups",
    "text": "2.2: Banding of Age and Wage into Groups\nAge\nThe range of participants’ ages is rather wide, spanning from 18-60 years old. There are also multiple peaks in the distribution:\n\n\ncode block\n# Computing min and max age to annotate plot\nmin_age <- min(demo_data_new$age)\nmax_age <- max(demo_data_new$age)\n\ndemo_age <-demo_p3 + \n            annotate(geom = \"text\", x = min_age, y = 0.83,\n            label = paste0(\"Youngest:\\n\", min_age)) + #< add text annotation to show age range\n            annotate(geom = \"text\", x = max_age, y = 0.83,\n            label = paste0(\"Oldest:\\n\", max_age)) +\n            theme(axis.text.y = element_blank(), #< remove unnecessary elements from plot\n            panel.grid.major = element_blank(),\n            plot.background = element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\"))\ndemo_age\n\n\n\n\n\n\nThese may be grouped together by percentile, and analysed as age groups instead to give a better overview of different demographics. Each band represents sequential 20th percentiles:\n\nLowest 20th Percentile: 18-26\n20-40th Percentile: 27-35\n40-60th Percentile: 36-44\n60-80th Percentile: 45-52\nTop 20th Percentile: 53-60\n\n\n\n\ncode block\n# Function to bin by 20th Percentile\ncutpct <- function(x) {\n  cut(x, breaks=c(quantile(demo_data_new$age, \n                           probs = seq(0, 1, by = 0.20))), \n      labels=c(\"18-26\",\"27-35\",\"36-44\",\"45-52\",\"53-60\"), \n      include.lowest=TRUE)\n}\n\n# Applying to new column, grouping Age into Age Groups\ndemo_data_new$ageGroup <- sapply(demo_data_new$age, cutpct)\n\n\n# Barchart of ageGroup\ndemo_agegrp<- ggplot(\n  demo_data_new, \n  aes(x = ageGroup)\n  ) +\n  geom_bar() +\n  labs(\n    # Linebreak added to title so it does not get truncated\n    title = \"Participants are evenly\\ndistributed across Age Groups\", \n    x = \"Age Group\",\n    y = NULL\n  ) +\n  geom_text(\n    stat = \"count\",\n    aes(label = after_stat(count)),\n    vjust = -1\n  ) +\n  # Same y-axis limits for both age and wage plots to standardise\n  ylim(0,250) + \n  theme(\n    text = element_text(size = 12),\n    plot.background = element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\")\n  )\n\n\nWage\nFrom the boxplot diagram in section 2.2, there is a large variation in wage range, and a segregation between lower and higher wage bands.\n\n\ncode block\ndescribe(financial_agg$monthlyWage)\n\n\nfinancial_agg$monthlyWage \n       n  missing distinct     Info     Mean      Gmd      .05      .10 \n     880        0      412        1     4030     2249     1731     1924 \n     .25      .50      .75      .90      .95 \n    2467     3429     4803     6675     8486 \n\nlowest :  1709.273  1709.364  1709.455  1710.182  1719.636\nhighest: 14085.273 14344.636 14496.364 17287.455 17309.091\n\n\n\nBased on the Mean and distribution of values across percentiles as shown above, participants are banded according to annual income:\n\nBottom 20th Percentile: Low\n20-40th Percentile: Mid-low\n40-60th Percentile: Mid\n60-80th Percentile: Mid-high\nTop 20th Percentile: High\n\n\n\n\ncode block\n# Function to bin by 20th Percentile\ncutwpct <- function(x) {\n  cut(x, breaks=c(quantile(financial_agg$monthlyWage, \n                           probs = seq(0, 1, by = 0.20))), \n      labels=c(\"Low\",\"Mid-low\",\"Mid\",\"Mid-high\",\"High\"), \n      include.lowest=TRUE)\n}\n\n# Applying to new column, grouping Age into Age Groups\nfinancial_agg$incomeGroup <- sapply(financial_agg$monthlyWage, cutwpct)\n\n# Barchart of incomeGroup\nfin_incgrp<- ggplot(financial_agg, aes(x = incomeGroup)) +\n                geom_bar() +\n                labs(title = \"Number of Citizens\\nby Income Group\", #< Linebreak added to title so it does not get truncated\n                    x = \"Income Group\",\n                    y = NULL) +\n                geom_text(stat = \"count\",\n                          aes(label = after_stat(count)),\n                          vjust = -1) +\n                ylim(0,250) + #< Upper bound of y-axis limit is set so that geom_text annotations are not cut off\n                theme(text = element_text(size = 12),\n                      axis.text.y = element_blank(), #< Shared y-axis when used in patchwork with age chart\n                      plot.background = element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\"))\n\n\nAge and Income Groups\n\n\ncode block\n(demo_agegrp + fin_incgrp) & theme(plot.background = element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\"))"
  },
  {
    "objectID": "Takehome Exercise/Takehome Ex 4/Take-home_Ex01.html#combining-datasets-and-computing-monthly-income-per-capita",
    "href": "Takehome Exercise/Takehome Ex 4/Take-home_Ex01.html#combining-datasets-and-computing-monthly-income-per-capita",
    "title": "Take-home Exercise 1",
    "section": "2.3: Combining Datasets and Computing Monthly Income per Capita",
    "text": "2.3: Combining Datasets and Computing Monthly Income per Capita\nThe dataframes are first combined into df_combined:\n\n\ncode block\n#Inner join as only 880 participants are listed in financial data\n\ndf_combined <- merge(demo_data_new, financial_agg, by = \"participantId\") %>%\n              select(unique(colnames(.))) %>%\n              arrange(as.numeric(participantId)) \n\nDT::datatable(df_combined,\n              class =\"compact\")\n\n\n\n\n\n\n\n   \nThe formula used to determine Monthly Income per Capita for this study is as follows: \\[Monthly\\ Income\\ per\\ Capita = \\frac{Monthly\\ Wage}{Household\\ Size}\\]\n\n\ncode block\n# Compute income per capita and save as new variable\ndf_combined <- df_combined %>%\n              mutate(incomePerCapita = round((monthlyWage/as.integer(householdSize)), 0))\n\n# Calculate min, max, 95th percentile and median values for annotations\nmin_incomePC <- round(min(df_combined$incomePerCapita),0)\nmax_incomePC <- round(max(df_combined$incomePerCapita),0)\nq_incomePC <- round(quantile(df_combined$incomePerCapita, probs = .95),0)\nmedian_incomePC <- round(median(df_combined$incomePerCapita),0)\n\n# Histogram of income per capita\nh <- \n  ggplot(\n    df_combined, \n    aes(x = incomePerCapita)\n  ) +\n  geom_histogram(\n    bins = 25,\n    color = \"#F8F3E6\"\n  ) +\n  scale_x_continuous(\n    breaks = scales::pretty_breaks(n = 5),\n    # Set same limits for both plots to ensure justification\n    limits = c(500,12000), \n    # Label with $ unit\n    labels = label_dollar()\n  ) + \n  geom_vline(\n    aes(xintercept = median_incomePC),\n    colour=\"grey20\", \n    linewidth = 0.7, \n    linetype = \"dashed\"\n  ) +\n  annotate(\n    geom = \"text\", \n    x = 3900, \n    y = 290,\n    label = paste0(\"Median Income per Capita: $\", median_incomePC)\n  ) +\n  labs(x = NULL, y = NULL\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text.y = element_blank(),\n    panel.grid.major = element_blank(),\n    plot.background = element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\")\n  )\n\n#Boxplot of Income per capita\nbox <- \n  ggplot(\n    df_combined, \n    aes(y = incomePerCapita)\n  ) + \n  geom_boxplot(\n    outlier.colour=\"salmon\", \n    outlier.shape=16,\n    outlier.size=1, \n    notch=FALSE\n  ) + \n  coord_flip() + \n    #Annotate with amounts to show range of income on boxplot diagram\n  annotate(\n    geom = \"text\", \n    x = 0.38, \n    y = min_incomePC,\n    label = paste0(\"$\", min_incomePC),\n    color = \"grey20\"\n  ) + \n   annotate(\n    geom = \"text\", \n    x = 0.38, \n    y = q_incomePC,\n    label = paste0(\"$\", q_incomePC),\n    color = \"grey20\"\n  ) +\n  annotate(\n    geom = \"text\", \n    x = 0.38, \n    y = max_incomePC,\n    label = paste0(\"$\", max_incomePC),\n    color = \"salmon\"\n  ) + \n  labs(\n    title = \"Right-skewed distribution of Income per Capita\",\n     y = \"\", \n    x = \"\"\n  ) + \n   scale_y_continuous(\n    limits = c(500,12000), \n    labels = label_dollar()\n  ) +\n  stat_boxplot(\n    geom=\"errorbar\", \n    width=0.5\n  ) + \n  theme_minimal() +\n  theme(\n    axis.text = element_blank(), \n    axis.ticks = element_blank(),\n    panel.grid.major = element_blank(),\n     plot.background = element_rect(\n       fill=\"#F8F3E6\",colour=\"#F8F3E6\")\n  )\n\nhbox <- (box / h) + \n        plot_layout(heights = c(1, 3.5)) #< Scale layout to keep boxplot height shorter\n\nhbox & theme(plot.background = element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\"))\n\n\n\n\n\n\nInsights from Visualisation\n\nThere is a right-skewed distribution of Income per Capita, with median value ($1947) far from the 95th Percentile tail ($5487)\n\nTrail of red points in the boxplot show the presence of outliers and Highest Income per Capita is 4 times that of median: this suggests a large income disparity among City residents\n\nCity Revitalisation Efforts could thus aim to increase affordability of spaces or services to cater to the larger concentration of citizens within or below median income range."
  },
  {
    "objectID": "Takehome Exercise/Takehome Ex 4/Take-home_Ex01.html#joviality",
    "href": "Takehome Exercise/Takehome Ex 4/Take-home_Ex01.html#joviality",
    "title": "Take-home Exercise 1",
    "section": "3.1: Joviality",
    "text": "3.1: Joviality\nEach participant has a joviality score on a scale of 0 to 1. For the purpose of this study, we assume that the closer the score is to 1 (maximum), the more jovial the participant was recorded at the start of the survey. Joviality will thus be analysed across different demographic and financial variables, to find significant patterns and trends. Key portions of the EDA are visualised to aid city revitalisation efforts in determining ways to increase overall joviality of the population.\n\n3.1.1: Distribution\nThe distribution of joviality scores is first visualised to determine the variation of values across the sample population:\n\n\ncode block\nmed_jov <- median(df_combined$joviality)\nmean_jov <- mean(df_combined$joviality)\nstd_jov <- sd(df_combined$joviality)\n\nggplot(\n    df_combined, \n    aes(x = joviality)\n  ) +\n  geom_density(\n    color = \"#1696d2\",\n    adjust = .2,\n    alpha = .6\n  ) +\n  stat_function(\n    fun = dnorm,\n    args = list(mean = mean_jov,\n                sd = std_jov),\n    col = \"grey30\",\n    size = .6\n  ) +\n  geom_vline(\n    aes(xintercept = mean_jov),\n    colour=\"#4d5887\", \n    linewidth = .6, \n    linetype = \"dashed\"\n  ) +\n  annotate(\n    geom = \"text\", \n    x = mean_jov + 0.12, \n    y = 1.5,\n    label = paste0(\"Mean Joviality: \", round((mean_jov),2)),\n    color = \"#4d5887\"\n  ) +\n  geom_vline(\n    aes(xintercept = med_jov),\n    colour = \"#00AFBB\", \n    linewidth = .6, \n    linetype = \"dashed\") +\n  annotate(\n    geom = \"text\", \n    x = med_jov - 0.12, \n    y = 1.5,\n    label = paste0(\"Median Joviality: \", round((med_jov),2)),\n    color = \"#00AFBB\"\n  ) +\n  labs(\n    title = \"Uneven Distribution of Joviality Score across Participants\",\n    subtitle = \"Median joviality score is close to Mean score, but distribution density reveals multiple peaks and troughs\",\n    x = \"Joviality Score\",\n    y = \"Density\"\n  ) +\n  theme(\n    axis.text.y = element_blank(),\n    panel.grid.major = element_blank(),\n    plot.background = element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\")\n  )\n\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n\n\n\n\n\n3.1.2: Are there differences in Joviality Across Income and Age Groups?\nThis study first proposes to find out if specific groups within the population have reported lower or higher joviality scores, and if this difference between factor levels in the sample is significant enough to represent the overall city population.\n\n\n\n\nflowchart LR\nA((Joviality)) -->|differences?| B[Income Groups]\nA -->|differences?| C[Age Groups]\nB -.- C\n\n\n\n\n\n\n\n\n \nA normality assumption test is first conducted across factor levels for joviality score across income and age groups. At a confidence level of 95%, we test the following hypothesis:\n  \\[H_0: Joviality\\ is\\ normally\\ distributed\\ across\\ groups\\]\n\\[H_1: Joviality\\ is\\ not\\ normally\\ distributed\\ across\\ groups\\]\n  Income Groups\n\nDistributionNormality TestANOVA\n\n\n\n\ncode block\nggplot(\n    df_combined, \n    aes(x = joviality, \n        y = incomeGroup,\n        fill = incomeGroup,\n        color = incomeGroup)\n  ) +\n  geom_density_ridges(\n    # Adjust bandwidth to reveal variations \n    bandwidth = .05, \n    alpha = .6\n  ) +\n  labs(\n    title = \"Distribution of Joviality Score Across Income Groups\"\n  ) +\n  annotate(\n    geom = \"text\", \n    x = 0.2, y = 5.9,\n    label = \"High income groups\\nrecorded peaks in lower joviality\"\n  ) +\n  annotate(\n    geom = \"text\", \n    x = 0.8, y = 1.5,\n    label = \"Low income groups\\nrecorded peaks in higher joviality\"\n  ) +\n  theme(\n    legend.position = \"none\",\n    axis.title.y = element_blank(),\n    panel.grid.major = element_blank(),\n    plot.background = element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\")\n  )\n\n\n\n\n\n\n\n\n\ncode block\nggplot(\n    df_combined, \n    mapping = aes(sample = joviality, \n                  fill = incomeGroup)\n  )+\n  stat_qq_band(alpha=0.15) +\n  stat_qq_line(alpha=0.15) +\n  stat_qq_point(size=0.5) + \n  facet_wrap(\n    ~ incomeGroup, \n    nrow = 1 #<nrow used to fit all plots into a line\n  ) + \n  labs(\n    title = \"Deviation from Normality across Income Groups\",\n    subtitle = \"Q-Q plots visually indicate that points diverge from diagonal\",\n    x = \"\", \n    y = \"\"\n  ) +\n  # theme selected as the border and colored title bar makes it easier to differentiate\n  theme_bw() + \n  \n  theme(\n    # legend removed as it was unnecessary\n    legend.position = \"none\", \n    axis.text.y = element_blank(),\n    axis.text.x = element_blank(),\n    panel.grid.minor = element_blank(),\n    plot.background = element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\")\n  )\n\n\n\n\n\n\n\ncode block\ndf_combined %>%\n      group_by(incomeGroup) %>%\n      shapiro_test(joviality) %>%\n      ungroup() %>%\n      kbl() %>%\n      kable_styling(full_width = F, bootstrap_options = \"responsive\")\n\n\n\n\n \n  \n    incomeGroup \n    variable \n    statistic \n    p \n  \n \n\n  \n    Low \n    joviality \n    0.9275730 \n    0.0000001 \n  \n  \n    Mid-low \n    joviality \n    0.9575466 \n    0.0000450 \n  \n  \n    Mid \n    joviality \n    0.9391820 \n    0.0000008 \n  \n  \n    Mid-high \n    joviality \n    0.9654749 \n    0.0002385 \n  \n  \n    High \n    joviality \n    0.9224990 \n    0.0000000 \n  \n\n\n\n\n\nSince the p-value across mid-low and high income groups is < significance level 0.05, we reject the null hypothesis, concluding that joviality does not follow a normal distribution across all income groups. To test if there is a significant difference between groups, a non-parametric test will be used in subsequent analysis, with median value as measure of central tendency.\n\n\nA non-parametric Kruskal-Wallis one-way ANOVA test is conducted to determine if there is a significant difference in joviality score between income groups. At a significance level of 0.05, we test the following hypothesis:\n\\[H_0: There\\ is\\ no\\ difference\\ in\\ \\mu\\ between\\ income\\ groups\\] \\[H_0: There\\ is\\ a\\ difference\\ in\\ \\mu\\ between\\ two\\ or\\ more\\ income\\ groups\\]\n\n\ncode block\nset.seed(1234)\nggbetweenstats(data = df_combined,\n               x = incomeGroup,\n               y = joviality,\n               type = \"np\",\n               mean.ci = TRUE, \n              pairwise.comparisons = TRUE, \n              pairwise.display = \"s\",\n              p.adjust.method = \"fdr\",\n              messages = FALSE\n              ) +\n  theme_classic() +\n  theme(legend.position = \"none\",\n        plot.background = element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\"))\n\n\n\n\n\nThe p-value is < significance level of 0.05, so we can reject the null hypothesis and conclude that median joviality differs among income groups. In fact, there is a large difference in mean joviality between low income and high income groups, with participants in low income groups having significantly greater joviality (median = 0.69) than those in the high income group (median = 0.27).\n\n\n\n  Age Groups\n\nDistributionNormality TestANOVA\n\n\n\n\ncode block\nggplot(\n    df_combined, \n    aes(x = joviality, \n        y = ageGroup,\n        fill = ageGroup,\n        color = ageGroup)\n  ) +\n  geom_density_ridges(\n    bandwidth = .05, \n    alpha = .6\n  ) +\n  scale_x_continuous(\n    breaks = scales::pretty_breaks(n = 5)\n  ) +\n  labs(\n    title = \"Distribution of Joviality Score Across Age Groups\",\n    subtitle = \"Variation of joviality across all age groups -- suggests possible influence of multiple factors\"\n  ) +\n  theme(\n    legend.position = \"none\",\n    axis.title.y = element_blank(),\n    panel.grid.major = element_blank(),\n    plot.background = element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\")\n  )\n\n\n\n\n\n\n\n\n\ncode block\nggplot(df_combined, \n       mapping = aes(sample = joviality, \n                     fill = ageGroup))+\n      stat_qq_band(alpha=0.15) +\n      stat_qq_line(alpha=0.15) +\n      stat_qq_point(size=0.5) + \n      facet_wrap(~ ageGroup, nrow = 1) + #< nrow used to fit all plots into a line\n      labs(title = \"Deviation from normality across Age Groups\",\n           subtitle = \"Q-Q plots visually indicate that points diverge from diagonal at tail ends\",\n           x = \"\", y = \"\") +\n      theme_bw() + #< theme selected as the border and colored title bar makes it easier to differentiate\n      theme(legend.position = \"none\", #< legend removed as it was unnecessary\n            axis.text.y = element_blank(),\n            axis.text.x = element_blank(),\n            axis.ticks.y = element_blank(),\n            axis.ticks.x = element_blank(),\n            panel.grid.minor = element_blank(),\n            plot.background = element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\"))\n\n\n\n\n\n\n\ncode block\ndf_combined %>%\n  group_by(ageGroup) %>%\n  shapiro_test(joviality) %>%\n  ungroup() %>%\n  kbl() %>%\n  kable_styling(full_width = F, bootstrap_options = \"responsive\")\n\n\n\n\n \n  \n    ageGroup \n    variable \n    statistic \n    p \n  \n \n\n  \n    18-26 \n    joviality \n    0.9528571 \n    1.11e-05 \n  \n  \n    27-35 \n    joviality \n    0.9409988 \n    5.00e-07 \n  \n  \n    36-44 \n    joviality \n    0.9425735 \n    9.00e-07 \n  \n  \n    45-52 \n    joviality \n    0.9554757 \n    5.20e-05 \n  \n  \n    53-60 \n    joviality \n    0.9453997 \n    5.40e-06 \n  \n\n\n\n\n\nSince the p-value across most age groups is < 0.05, we reject the null hypothesis, concluding that joviality does not follow a normal distribution across age groups either. To test if there is a significant difference between groups, a non-parametric test will be used in subsequent analysis.\n\n\nA non-parametric Kruskal-Wallis one-way ANOVA test is conducted to determine if there is a significant difference in mean joviality score between age groups. At a significance level of 0.05, we test the following hypothesis:\n\\[H_0: There\\ is\\ no\\ difference\\ in\\ \\mu\\ between\\ age\\ groups\\] \\[H_0: There\\ is\\ a\\ difference\\ in\\ \\mu\\ between\\ two\\ or\\ more\\ age\\ groups\\]\n\n\ncode block\nset.seed(1234)\nggbetweenstats(data = df_combined,\n               x = ageGroup,\n               y = joviality,\n               type = \"np\",\n               mean.ci = TRUE, \n              pairwise.comparisons = TRUE, \n              pairwise.display = \"s\",\n              p.adjust.method = \"fdr\",\n              messages = FALSE\n              ) +\n  theme_classic() +\n  theme(legend.position = \"none\",\n        plot.background = element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\"))\n\n\n\n\n\nThe p-value (0.17) is > significant level of 0.05, so we conclude that there is no significant difference in mean joviality score across age groups.\n\n\n\n\nVisual Considerations\n\nDensity ridges were used to compare across groups to reveal ‘peaks’ between high and low income groups at opposite ends of the joviality spectrum. As there were multiple variations in the distribution of Income and Age Groups, bandwidth argument from geom_density_ridges() was used to alter the bandwidth such that the density estimation was less smoothed out. This enabled the visualisation of the variations present in joviality across the groups.\nTransparency for each density plot was toggled to show overlapping layers. color argument was added to Age Group plot as transparency value was increased due to the multiple overlaps. This enabled clearer visualisation of each group without obscuring.\nAnnotations were added to emphasize on insights from analysis of density\nQ-Q plots were used to reveal deviations from normality for each group. facet_wrap() was used to show the distribution of each group side-by-side for clarity\nkable styling of tables were used to display p-value statistics below each plot.\n\n\nHow are Age and Income Groups Related?\n\n\ncode block\nggSpine(\n    df_combined,\n    aes(x = ageGroup, \n    fill = incomeGroup),\n    addlabel = TRUE,\n    interactive = TRUE\n  )\n\n\nWarning: The `guide` argument in `scale_*()` cannot be `FALSE`. This was deprecated in\nggplot2 3.3.4.\nℹ Please use \"none\" instead.\nℹ The deprecated feature was likely used in the ggiraphExtra package.\n  Please report the issue to the authors.\n\n\n\n\n\n\nTo determine if there is an association between both groups, a chi-square test of association is conducted at 95% confidence level.\n\\[H_0: There\\ is\\ no\\ association\\ between\\ income\\ and\\ age\\ groups\\] \\[H_1: There\\ is\\ an\\ association\\ between\\ income\\ and\\ age\\ groups\\]\n\n\ncode block\nset.seed(1234)\n  ggbarstats(\n    df_combined,\n    x = ageGroup, \n    y = incomeGroup,\n    bf.message = FALSE\n  ) +\n  theme(\n    plot.background = element_rect(\n      fill=\"#F8F3E6\",colour=\"#F8F3E6\")\n  )\n\n\n\n\n\nSince p-value (0.76) is > significance level of 0.05, we conclude that there is no significant association between Income Group and Education Level.\n\n\n3.1.3 Joviality Across Both Income and Age\nThe one-way ANOVA tests reported significant differences in joviality between income groups but not between age groups. There was also no reported association between income and age groups. However, there are still trends that can be observed when comparing multiple groups and different factor levels. This could give more specific insight into demographic patterns, as visualised in the following chart that compares joviality score across both Age and Income groups:\n\nDesign Considerations\n\nA heatmap was selected to visualise the density of joviality by two different categorical variables.\nGradient fill could show the variation in joviality across both categories, with “lighter” gradients representing “happier” or higher joviality scores. This variation was made more obvious with a diverging yellow-blue palette.\nThe plot was made interactive, such that the user could access specific information per tile, without cluttering the plot with figures or annotations.\nSubtitle was added to highlight most important insight from the analysis\nIdeally, I would have changed the font output to match the rest of my visualisations – this proved tricky due to the interactive layer, which had different parameters.\n\n\n\n\ncode block\n# Calculate mean joviality per tile\ngbcols <- c(\"ageGroup\", \"incomeGroup\")\n\ncal_joviality <- df_combined %>% \n  group_by(across(all_of(gbcols))) %>% \n  summarise(mean_joviality = round(mean(joviality),2), .groups = \"drop\") %>%\n  ungroup()\n\n# Style tooltip\ntooltip_css <- \"background-color:#3E4254; font-style:bold; color:#F8F3E6;\" \n\n# Tile Plot\ngg_tile <-\n  ggplot(\n    cal_joviality,\n    aes(x = ageGroup, \n        y = incomeGroup)\n  ) +\n  geom_tile_interactive(\n    aes(fill = mean_joviality,\n        tooltip = paste(\"Age Group: \", ageGroup, \"<br>\",\n                        \"Income Group: \", incomeGroup, \"<br>\",\n                        \"Mean Joviality Score: \", mean_joviality))\n  ) + \n  scale_fill_gradient(\n    low = \"#0a4c6a\",\n    high = \"#fdd870\",\n    space = \"Lab\",\n    na.value = \"grey50\",\n    guide = \"colourbar\",\n    aesthetics = \"fill\"\n  ) +  \n labs(\n   title = \"Joviality across Income and Age Groups\",\n    subtitle = \"Younger People from lower Income Groups had the highest joviality scores\",\n    x = \"Age Group\",\n    y = \"Income Group\"\n  ) +\n  theme(\n    legend.position = \"right\",\n    legend.direction = \"vertical\",\n    axis.line.x = element_blank(),\n    panel.grid.major.y = element_blank(),\n    text = element_text(family = \"Lato Regular\")\n  ) +\n  \n  theme(\n    plot.background = element_rect(\n      fill=\"#F8F3E6\",colour=\"#F8F3E6\")\n  )\n\nggiraph::girafe(ggobj = gg_tile,\n                width_svg = 6,\n                height_svg = 6*0.618,\n                fonts = list(sans = \"Lato Regular\"),\n                options = list(opts_tooltip(css = tooltip_css)))                   \n\n\n\n\n\n\n   \n\nInsights from Visualisations\n\nInterestingly, participants from lower income brackets reported much higher joviality scores than those in the highest income group, with age group 30-39 having the highest mean joviality. This is suggestive of social segregation within the city based on income.\nAcross all age bands in the highest income group, joviality scores were lower than median score of 0.44\nParticipants from higher income groups in the 51-60 age group reported lowest mean joviality score of 0.21\n\nTo cater to the wide range of income groups and age groups, city revitalisation efforts could focus on investing in developing community hubs that could foster a more inclusive environment. This could promote greater social interaction between diverse groups of citizens that may lead to a better sense of community."
  },
  {
    "objectID": "Takehome Exercise/Takehome Ex 4/Take-home_Ex01.html#what-makes-these-groups-more-or-less-jovial",
    "href": "Takehome Exercise/Takehome Ex 4/Take-home_Ex01.html#what-makes-these-groups-more-or-less-jovial",
    "title": "Take-home Exercise 1",
    "section": "3.2 What makes these groups more or less jovial?",
    "text": "3.2 What makes these groups more or less jovial?\nTo address this gap in joviality scores, there was a need to investigate if there are associations between high and low income groups and other categorical variables such as education level, interest group, household size, as well as expenses. These differences could also cast some insight into the wide variation in joviality scores.\n\n\n\n\nflowchart LR\nA((Joviality)) --> B[Income Groups]\nA --> C[Age Groups]\nB -.- C\nB -->|association?| D[Education]\nB -->|association?| E[Interest Groups]\nB -->|association?| F[Household Size]\nB --> G[Children]\nF -.- G\n\n\n\n\n\n\n\n\n\n3.2.1: Tests of Association\nTo determine if there are significant associations between income group, education level, interest group and household size, we conduct a chi-square test of association. At a significance level of 0.05:\n\\[H_0: There\\ is\\ no\\ association\\ between\\ groups\\] \\[H_1: There\\ is\\ an\\ association\\ between\\ groups\\]\n\nOverviewEducationInterest GroupsHousehold SizeChildren\n\n\nA Summary of results from Chi-Square Tests of Association:\n\n\n\n\n\n\n\n\n\n\nSignificant Association?\nEducation\nInterest Groups\nHousehold Size\nChildren\n\n\n\n\nIncome Group\nYes\nNo\nYes\nYes\n\n\np-value\n4.15e-44\n0.42\n2.18e-07\n4.20e-04\n\n\n\n\n\n\n\ncode block\n# As we want to compare only high and low groups, filter out into new df\ndf_highlow <- df_combined %>%\n  filter(incomeGroup %in% c(\"low\", \"high\"))\n\nset.seed(1234)\ntest_edu <- ggbarstats(df_highlow,\n                        x = educationLevel, y = incomeGroup,\n                        bf.message = FALSE) +\n            labs(title = \"Higher Income Groups are Significantly More Highly Educated\",\n                 x = \"Income Group\") +\n            theme(plot.background = element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\"))\n\ntest_edu          \n\n\nWarning: Removed 1 rows containing missing values (`geom_text()`).\n\n\n\n\n\nSince p-value is < significance level of 0.05, we reject the null hypothesis and conclude that there is an association between Income Group and Education Level.\n\n\n\n\ncode block\nset.seed(1234)\ntest_interest <- ggbarstats(df_highlow,\n                            x = interestGroup, y = incomeGroup,\n                            bf.message = FALSE) +\n            labs(title = \"No Significant Association Between Income and Interest\",\n                 x = \"Income Group\") +\n            theme(plot.background = element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\"))\ntest_interest\n\n\nWarning: Removed 1 rows containing missing values (`geom_text()`).\n\n\n\n\n\nSince p-value is > significance level of 0.05, we conclude that there is no dependent association between Income Group and Education Level.\n\n\n\n\ncode block\nset.seed(1234)\ntest_hhsize <- ggbarstats(df_highlow,\n                          x = householdSize, y = incomeGroup,\n                          bf.message = FALSE) +\n            labs(title = \"Significantly Higher Proportion of Singles in Lower Income Groups\",\n                 x = \"Income Group\") +\n            theme(plot.background = element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\"))\ntest_hhsize\n\n\nWarning: Removed 1 rows containing missing values (`geom_text()`).\n\n\n\n\n\nSince p-value is < significance level of 0.05, we reject the null hypothesis and conclude that there is an association between Income Group and Household Size.\n\n\n\n\ncode block\nset.seed(1234)\ntest_kids <- ggbarstats(df_highlow,\n                          x = haveKids, y = incomeGroup, \n                        bf.message = FALSE)+\n            labs(title = \"Lower Proportion of Children in Households with Lower Income\",\n                 x = \"Income Group\") +\n            theme(plot.background = element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\"))\ntest_kids\n\n\nWarning: Removed 1 rows containing missing values (`geom_text()`).\n\n\n\n\n\nSince p-value is < significance level of 0.05, we reject the null hypothesis and conclude that there is an association between Income Group and whether the household includes Children.\n\n\n\n\n\n3.2.2: Comparing Joviality across Income Groups and Education Level\nFrom the chi-square Tests of Association conducted above, income and education level are significantly associated. This relationship is visualised in an interactive boxplot grid:\n   \n\nDesign Considerations\n\nAn interactive boxplot grid using ggplotly() enables the user to filter by income group, which is useful to compare across education levels and age groups\nTo find out if education level is indicative of age (i.e. older participants have higher qualifications) or if there are patterns related to both categorical groups, facet_grid() was used to segregate the plots by age group as well\nY-axis breaks were limited to n=3, to prevent over-cluttering. Light grid lines in the panel background were kept such that axis text could be read across the grid.\nX-axis title, text and ticks were removed as there are only two distinct groups, which are labelled in the legend and colour coded across the graph. These unnecessary elements were removed to present a cleaner overall visual.\n\n\n#| fig-height: 8 #| fig-width: 8\nedu2 <- ggplot(df_highlow, aes(x = incomeGroup, y = joviality, fill = incomeGroup)) + #< Different colors for income groups for greater differentiation geom_boxplot() + facet_grid(ageGroup~educationLevel) + theme_bw() + #< Use this theme as the border makes each plot clearly defined scale_y_continuous(breaks = scales::pretty_breaks(n=3)) + theme(panel.spacing = unit(1, ‘lines’), #< Add panel spacing so that plots are not too clustered axis.text.x = element_blank(), axis.ticks.x = element_blank(), axis.title.x = element_blank(), panel.background = element_rect(fill=“#F8F3E6”,colour=“#F8F3E6”), plot.background = element_rect(fill=“#F8F3E6”,colour=“#F8F3E6”))"
  },
  {
    "objectID": "Takehome Exercise/Takehome Ex 4/Take-home_Ex01.html#data-limitations",
    "href": "Takehome Exercise/Takehome Ex 4/Take-home_Ex01.html#data-limitations",
    "title": "Take-home Exercise 1",
    "section": "4.1 Data Limitations",
    "text": "4.1 Data Limitations\nDespite the discovery of various insights from the datasets, there are a few caveats that the user should be aware of:\n\nSampling Bias: It cannot be accurately determined if the sample data is representative of the entire City population. As there is no geographic data included, the sample may be biased towards certain areas within the city. There was also a much higher proportion of households without children, and participants with lower educational qualifications surveyed. The sample thus may not accurately reflect the broader population.\n\nIncomplete Data: Financial data was not representative of all survey participants (covered in Section 1.2.2)\nResponse Bias: As data was collected through a survey, the dataset may rely on self-reported statistics that may be partially influenced by a variety of factors. This may limit the accuracy of data collected, especially regarding financial transactions.\n\nTime-based Limitations: As joviality score was recorded only at the start of the survey, financial statements were taken over the course of the year. Any potential changes in joviality were not recorded, which could lead to different insights. Changes in personal circumstances could also affect joviality score, and may have occurred in the course of the data collection process.\nCorrelation is not Causation: While the data exploration and visualisations have given some interesting insights and highlighted some correlations between variables affecting joviality, it is unclear if these factors directly cause changes in joviality. Several rounds of surveys could be conducted to collect a more complete data set, or findings from this initial survey could be tested against a separate sample for comparison."
  },
  {
    "objectID": "Takehome Exercise/Takehome Ex 4/Take-home_Ex01.html#a-visual-summary",
    "href": "Takehome Exercise/Takehome Ex 4/Take-home_Ex01.html#a-visual-summary",
    "title": "Take-home Exercise 1",
    "section": "4.2 A Visual Summary",
    "text": "4.2 A Visual Summary\n\n\n\n\nflowchart LR\nA((Joviality)) --> B[Income Groups] --- E[Age Group]\nB -.-|fa:fa-circle-up joviality| C(High Income)\nB -.- D(fa:fa-face-smile Low Income)\nE -.- F(fa:fa-face-smile Younger) ===|fa:fa-circle-up joviality| D\nE -.-|fa:fa-circle-up joviality| G(Older)\nA ---> H[Expenses] -.-> I[Expense ratio] -.- D\nH -.- J(fa:fa-up-long Recreation)\nH -.-|fa:fa-circle-up joviality| K(fa:fa-up-long Shelter)\nA --> L[Household Size] -.- M(fa:fa-face-smile Single)\nL -.-|fa:fa-circle-up joviality| N(2-3) --- O[Have Kids] -.- K\nN -.- J\nA ---> P[Education] -.- Q(fa:fa-face-smile Higher Edu) -.- D\nP -.-|fa:fa-circle-up joviality| R(Lower Edu)\nB ----> S((fa:fa-tree-city Plans))\nE ----> S\nH ----> S\nL ----> S\nP ----> S\n\n\n\n\n\n\n\n\nAn overarching theme (urbnthemes) was used to ensure standardised colors and chart styles throughout the study. In general, density plots, dotplots in various configurations, as well as histograms were chosen to visualise the underlying undulations in distribution of variables. Interactive elements were also deployed to enable filtering through the data to uncover trends and differences. Insights from each visualisation have been added after each visual, or added as titles/subtitles in the charts themselves."
  },
  {
    "objectID": "Takehome Exercise/Takehome Ex 1/Take-home_Ex01/Takehome1.html#householdsize",
    "href": "Takehome Exercise/Takehome Ex 1/Take-home_Ex01/Takehome1.html#householdsize",
    "title": "ISSS608-VAA",
    "section": "householdSize",
    "text": "householdSize\n\n\n\n\n\n\n\n\n\n\n\n\nTip\n\n\n\nThe code creates a bar plot (geom_bar) for the householdSize column using ggplot2. The bars are filled with #69b3a2 color and have black outlines. The plot is given axis labels, a title, and a minimal theme. The plot is then converted to an interactive plotly object"
  },
  {
    "objectID": "Takehome Exercise/Takehome Ex 1/Take-home_Ex01/Takehome1.html#visualization",
    "href": "Takehome Exercise/Takehome Ex 1/Take-home_Ex01/Takehome1.html#visualization",
    "title": "Take-home Exercise 1",
    "section": "2. Visualization",
    "text": "2. Visualization\n\n2.1 Comparing householdSize with Age-groups\n\nHouseholdsize VS Age_groupCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\n\nThe above plot uses the columns householdsize and age_group, and understanding the relationship between them by comparing the heights of the bars within each age group, we can observe the relative proportions of different household sizes. For example, for age_group 40-50yrs has more number of residents of household size 1 .\nBelow is small summary of the code\n\nThe count_table is created by counting the occurrences of each combination of age_group and householdSize in the resident_financial dataframe.\nCustom colors are defined using the scale_fill_manual function, providing a vector of color codes (custom_colors) to be used for filling the bars in the plot.\nThe plot is created using ggplot with count_table as the data. The geom_col function is used to create a bar plot with dodged bars for each age_group, with the householdSize determining the fill color.\nAdditional customizations are applied, such as setting the x-axis label, y-axis label, plot title, and theme.\nThe ggplot plot is then converted to an interactive plot using ggplotly, which enables interactive features such as hover tooltips and zooming.\nVarious customizations are applied to the interactive plot, including customizing the hover label appearance, legend labels, and axis labels and tick fonts.\nFinally, the interactive plot is displayed.\n\n\n\n\n\n\n\n# Calculating count for each combination of age_group and householdSize\ncount_table <- resident_financial %>%\n  count(age_group, householdSize)\n\n# Using custom colors\ncustom_colors <- c(\"#E69F00\", \"#56B4E9\", \"#009E73\", \"#F0E442\", \"#0072B2\")\n\n# Plotting the columns\np <- ggplot(count_table, aes(x = age_group, y = n, fill = householdSize)) +\n  geom_col(position = \"dodge\", color = \"white\") +\n  scale_fill_manual(values = custom_colors) +\n  labs(x = \"Age Group\", y = \"Count\", fill = \"Household Size\") +\n  ggtitle(\"Distribution of Household Size within Age Groups\") +\n  theme_minimal() +\n  theme(plot.title = element_text(size = 16, face = \"bold\"))\n\n# Converting ggplot to interactive plot using ggplotly\nplotly_plot <- ggplotly(p)\n\n# Using tooltip labels\nplotly_plot <- plotly_plot %>% \n  layout(hoverlabel = list(bgcolor = \"white\",\n                           font = list(color = \"black\",\n                                       family = \"Arial, sans-serif\"),\n                           align = \"auto\",\n                           namelength = -1,\n                           bordercolor = \"black\"))\n\n# Customizing legend labels\nplotly_plot <- plotly_plot %>% \n  layout(legend = list(\n    title = list(text = \"Household Size\"),\n    font = list(family = \"Arial, sans-serif\", size = 12),\n    bgcolor = \"white\",\n    bordercolor = \"black\",\n    borderwidth = 1\n  ))\n\n# Customizing axis labels and tick font\nplotly_plot <- plotly_plot %>% \n  layout(xaxis = list(title = \"Age Group\", tickfont = list(family = \"Arial, sans-serif\", size = 12)),\n         yaxis = list(title = \"Count of unique resident\", tickfont = list(family = \"Arial, sans-serif\", size = 12)))\n\n# Displaying the interactive plot\nplotly_plot\n\n\n\n\n\n\n2.2 Comparing Education with Age using Boxplot\n\nEducation VS AgeCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nThe code chunk plot a boxplot comparing the age distribution across different education levels. Each box represents the median and quartiles of age for each education level. The fill color represents the education level. The plot provides a visual summary of the age distribution and potential differences between education levels.\n\n\n\n\n\n# Boxplot of Educationlevel and Age\nplotly_plot <- ggplotly(\n  ggplot(data = resident_financial, aes(x = educationLevel, y = age, fill = educationLevel)) + \n    ggtitle(\"Boxplot of Educationlevel VS  Age\") + \n    labs(x = \"Education\", y = \"Age\") +\n    geom_boxplot(alpha = 0.7, col = 'black') + \n    scale_y_continuous(breaks=seq(0 , max(resident_financial[,\"age\"]), 5))\n)\n\n# Customizing the interactive plot\nplotly_plot <- plotly_plot %>%\n  layout(\n    hoverlabel = list(bgcolor = \"white\", font = list(family = \"Arial\", size = 12, color = \"black\")),\n    legend = list(font = list(family = \"Arial\", size = 12, color = \"black\")),\n    xaxis = list(title = \"Race\", tickfont = list(family = \"Arial\", size = 12, color = \"black\")),\n    yaxis = list(title = \"Age\", tickfont = list(family = \"Arial\", size = 12, color = \"black\")),\n    plot_bgcolor = \"white\"\n  )\n\n# Display the interactive plot\nplotly_plot\n\n\n\n\n\n\n2.3 Count of unique participants for each combination of education and haveKids\n\nEducationLevel Vs haveKidsCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nThe code chunk makes a stacked bar chart that visually represents the count of unique participants based on their education level and whether they have kids or not.The n_distinct function is then applied to the participantId column to calculate the count of unique participants for each group.The x-axis represents the education levels, the y-axis represents the number of participants, and the fill color indicates whether the participants have kids or not. The chart is faceted by the haveKids variable, allowing for easy comparison between the two groups.By examining the chart, we can identify patterns and trends in participant distribution. For example, 355 participants doesnt have kids who are having education level HighSchoolorCollege , likewise 170 participants have kids who are doing the same edcutionlevel.\n\n\n\n\n\n# Count of unique participants for each combination of educationLevel and haveKids\nparticipant_count <- resident_financial %>%\n  group_by(educationLevel, haveKids) %>%\n  summarise(count = n_distinct(participantId), .groups = \"keep\")\n\n# Creating the stacked bar chart\nbarplot_chart <- ggplot(data = participant_count, aes(x = educationLevel, y = count, fill = haveKids)) +\n  ggtitle(\"Count of Unique Participants by Education Level and Have Kids\") +\n  labs(x = \"Education Level\", y = \"Number of Participants\") +\n  geom_bar(stat = \"identity\", alpha = 0.7, col = 'black') +\n  facet_grid(. ~ haveKids) +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\nplotly_chart <- ggplotly(barplot_chart)\nplotly_chart\n\n\n\n\n\n\n2.4 Analysis on EducationLevel and Totalwage\n\nCreate Sum_wages table that will have id, EducationLevel, total wage\n\n\nSum_wagesCheck\n\n\n\nsum_wages <- resident_financial %>%\n  group_by(participantId, educationLevel) %>%\n  summarise(total_wages = sum(Wage)) %>%\n  ungroup()\n\n\n\n\n# Display the data table\nDT::datatable(sum_wages, class= \"compact\", filter='top')\n\n\n\n\n\n\n\n\n\n\nViolin Plot- EducationLevel VS TotalWage\n\n\nViolinCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nThe violin plot shows the spread and density of total wages for each education level category. The width of the violins represents the density, with wider areas indicating higher frequency of data points. The violins are grouped by education level, allowing for easy comparison of wage distributions between different education levels. Overall, the interactive violin plot provides a clear visualization of the distribution of total wages across education levels. It helps identify patterns, trends, and potential differences in wages based on education level. Further analysis can be performed to explore the relationships between education level, total wages, and other relevant variables.\n\n\n\n\n\n# Violin plot between EducationLevel and Totalwage\nviolin_plot <- ggplot(sum_wages, aes(x = educationLevel, y = total_wages, fill = educationLevel)) +\n  geom_violin(scale = \"width\", trim = FALSE) +\n  scale_fill_discrete() +\n  labs(title = \"Total Wages Distribution by Education Level\",\n       x = \"Education Level\",\n       y = \"Total Wages\") +\n  theme_minimal()\n\n# Converting the ggplot object to an interactive plotly object and displaying it\ninteractive_plot <- ggplotly(violin_plot)\n\ninteractive_plot\n\n\n\n\n\nAnova test between EducationLevel and TotalWages\n\n\nAnovaCode\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\n\nThe code chunk conducts a non-parametric analysis of variance (ANOVA) test to examine the relationship between education level (independent variable) and total wages (dependent variable).\nThe ANOVA test assesses whether there are statistically significant differences in the mean total wages across different education levels. The p-value is a measure of the strength of evidence against the null hypothesis of no difference in means. In this case, since the p-value is below the significance level of 0.05, we can conclude that there is strong evidence to reject the null hypothesis.\nOverall, the data analysis indicates that education level has a significant effect on total wages.\n\n\n\n\n\n\nset.seed(1234)\n\nggbetweenstats(data = sum_wages,\n               x = educationLevel,\n               y = total_wages,\n               type = \"np\",\n               mean.ci = TRUE,\n               pairwise.comparisons = TRUE,\n               pairwise.display = \"s\",\n               p.adjust.method = \"fdr\",\n               messages = FALSE\n) +\n  theme_minimal() +\n  theme(legend.position = \"none\",\n        plot.title = element_text(size = 14, face = \"bold\", hjust = 0.5),\n        axis.title.x = element_text(size = 12),\n        axis.title.y = element_text(size = 12),\n        axis.text.x = element_text(size = 10),\n        axis.text.y = element_text(size = 10),\n        strip.text = element_text(size = 12),\n        panel.grid.major = element_line(color = \"lightgray\"),\n        panel.grid.minor = element_blank()\n      \n)\n\n\n\n\n\n\n2.5 Age Group vs Joviality\n\nJoviality vs Age_groupCode\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nThe x axis represents the joviality values, while the y axis represents the age groups. The fill and color aesthetics are set to age_group, resulting in the ridgelines being filled and colored based on the different age groups. The density ridgeline plot is created using the geom_density_ridges function, with a specified bandwidth of 0.05 and an alpha value of 0.6 to control the transparency of the ridgelines. The x-axis scale is adjusted using scale_x_continuous to show tick marks with evenly spaced values.From the plot, it seems that Joviality and age_group has not that much in common to analyze.\n\n\n\n\n\n# Density ridge plot between Joviality and age_group\nggplot(resident_financial, aes(x = joviality, y = age_group,fill = age_group,color = age_group)) +\ngeom_density_ridges(bandwidth = .05, alpha = .6) +\nscale_x_continuous( breaks = scales::pretty_breaks(n = 5)) +\nlabs(title = \" Joviality values Across Age Groups\",\n) +\ntheme(legend.position = \"none\",axis.title.y = element_blank(),panel.grid.major = element_blank(),plot.background = element_rect(fill = \"#e763fa\", color = \"#C7BAA7\"),\n  plot.title = element_text(size = 14, face = \"bold\", color = \"#333333\"),  \n) +\ntheme_minimal() -> plot\n# Displaying the plot\nplot\n\n\n\n\n\nAnova test for Jovality vs Age_group\n\n\nAnova testCode\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\n\nThe p-value of 0.08 suggests that there is no significant evidence to reject the null hypothesis that there is no difference in Joviality across different age groups. This may indicates that there might be a trend or some degree of association between Joviality and age_group, but it does not reach the level of statistical significance.\nTherefore, based on this analysis, we do not have sufficient evidence to conclude that there is a significant relationship between Joviality and age_group. Further investigations or a larger sample size might be necessary to explore the potential relationship between these variables in more detail.\n\n\n\n\n\n\nset.seed(1234)\n\nggbetweenstats(data = resident_new,\n               x = age_group,\n               y = joviality,\n               type = \"np\",\n               mean.ci = TRUE,\n               pairwise.comparisons = TRUE,\n               pairwise.display = \"s\",\n               p.adjust.method = \"fdr\",\n               messages = FALSE\n) +\n  theme_minimal() +\n  theme(legend.position = \"none\",\n        plot.title = element_text(size = 14, face = \"bold\", hjust = 0.5),\n        axis.title.x = element_text(size = 12),\n        axis.title.y = element_text(size = 12),\n        axis.text.x = element_text(size = 10),\n        axis.text.y = element_text(size = 10),\n        strip.text = element_text(size = 12),\n        panel.grid.major = element_line(color = \"lightgray\"),\n        panel.grid.minor = element_blank()\n      \n)\n\n\n\n\n\n\n2.6 Relationship of HeatMap on various Coulmns\n\n# Calculate correlation matrix\ncor_matrix <- cor(resident_financial[, c(\"age\", \"joviality\", \"Education\", \"Food\", \"Recreation\", \"Shelter\", \"Wage\", \"RentAdjustment\")])\n\n# Print correlation matrix\nprint(cor_matrix)\n\n                       age   joviality Education       Food Recreation Shelter\nage             1.00000000 -0.07043452        NA  0.0364880         NA      NA\njoviality      -0.07043452  1.00000000        NA -0.4864067         NA      NA\nEducation               NA          NA         1         NA         NA      NA\nFood            0.03648800 -0.48640671        NA  1.0000000         NA      NA\nRecreation              NA          NA        NA         NA          1      NA\nShelter                 NA          NA        NA         NA         NA       1\nWage           -0.02698547 -0.28216492        NA  0.1325984         NA      NA\nRentAdjustment          NA          NA        NA         NA         NA      NA\n                      Wage RentAdjustment\nage            -0.02698547             NA\njoviality      -0.28216492             NA\nEducation               NA             NA\nFood            0.13259837             NA\nRecreation              NA             NA\nShelter                 NA             NA\nWage            1.00000000             NA\nRentAdjustment          NA              1\n\n\n\nHeat MapCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\n\nBased on the correlation analysis conducted, no significant correlations were observed between these variables- Rent Adjustment, Shelter, Recreation, and Education and any of the other variables in the dataset. Therefore, in order to provide a comprehensive overview of the correlations, I have decided not to plot these variables in the correlation heatmap.\nIt is important to note that the lack of observed correlations does not necessarily imply that these variables are unrelated to the others. Other types of relationships or non-linear associations might exist, which could be explored further through additional analysis or modelling techniques.\nFor the variables that were included in the correlation plot, the following correlations were identified:\nAge and Joviality:\n\nThere is a weak negative correlation between age and joviality (-0.070), indicating that as age increases, joviality tends to decrease slightly.\n\nAge and Food:\n\n-There is a weak positive correlation between age and food (0.036), suggesting that as age increases, food consumption tends to increase slightly. - Joviality and Food:\n-   There is a moderate negative correlation between joviality and food (-0.486), indicating that as joviality increases, food consumption tends to decrease.\n\nFood and Wage:\n\nThere is a weak positive correlation between food and wage (0.133), suggesting that as food consumption increases, wage tends to increase slightly. These correlations provide insights into the relationships between these variables and can guide further analysis and decision-making within our project.\n\n\n\n\n\n\n\n# Calculate correlation matrix on realted columns\ncor_matrix <- cor(resident_financial[, c(\"age\", \"joviality\", \"Food\", \"Wage\")])\n\n# Reshaping the correlation matrix to long format\ncor_matrix_long <- melt(cor_matrix)\n\n# Creating a heatmap\nheatmap_plot <- ggplot(data = cor_matrix_long, aes(x = Var2, y = Var1, fill = value)) +\n  geom_tile(color = \"white\", size = 0.2) +\n  scale_fill_gradient(low = \"#4D79FF\", high = \"#FF4D4D\") +\n  labs(x = \"\", y = \"\", title = \"Correlation Matrix\", fill = \"Correlation\") +\n  theme_minimal() +\n  theme(plot.title = element_text(size = 12),\n        axis.text.x = element_text(size = 12, angle = 90, vjust = 0.5, hjust = 1,face = \"bold\"),\n        axis.text = element_text(size = 12,face = \"bold\"),\n        legend.text = element_text(size = 12),\n        legend.title = element_text(size = 12))\n\n\n# Converting ggplot object to plotly object\nplotly_obj <- ggplotly(heatmap_plot) %>%\n  layout(\n    title = \"Correlation Matrix\",\n    hovermode = \"closest\",\n    xaxis = list(tickfont = list(size = 10)),\n    yaxis = list(tickfont = list(size = 10)),\n    legend = list(font = list(10)),\n    margin = list(l = 80, r = 80, t = 80, b = 80),\n    hoverlabel = list(bgcolor = \"#FFF\", font = list(size = 10))\n  )\n\n# Display the heatmap\nplotly_obj\n\n\n\n\n\n\n2.7 Relationship between EducationLevel and TotalAmount\n\nCalculating Total Amount for each ParticipantID\n\n\nTotal AmountDataTable\n\n\n\ntotal_amount <- resident_financial %>%\n  group_by(participantId, educationLevel) %>%\n  summarise(totalAmount = sum(Education + Shelter + Food + Wage + Recreation, na.rm = TRUE) - sum(RentAdjustment, na.rm = TRUE),\n            .groups = \"drop\")\n\n\n\n\nDT::datatable(total_amount, class= \"compact\", filter='top')\n\n\n\n\n\n\n\n\n\n\nDensity Plot between EducationLevel and TotalAmount\n\n\nDensity PlotCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\n\nThe density plot provides insights into the distribution of total savings among different education levels. The x-axis represents the total amount of savings, while the y-axis represents the density of participants at each savings level.\nFrom the plot, it can be observed that individuals with a bachelor’s degree have a higher concentration of savings compared to other education levels. The density curve for the bachelor’s education level peaks at a higher savings amount, indicating that a significant proportion of participants with a bachelor’s degree have accumulated more savings.\nOn the other hand, participants with lower education levels, such as high school or below, exhibit a lower density of savings. The density curve for these education levels shows a peak at lower savings amounts, suggesting that a majority of participants with lower education levels have savings below 50000.\nThis analysis suggests a positive correlation between education level and savings, with higher education levels generally associated with higher savings. It highlights the potential financial benefits of pursuing higher education, as individuals with higher education levels tend to accumulate more savings over time.\n\n\n\n\n\n\n# Creating the Density Plot\nplot <- ggplot(total_amount, aes(x = totalAmount, fill = educationLevel)) +\n  geom_density(alpha = 0.4) +\n  labs(title = \"Salary Distribution by Education Level\") +\n  scale_x_continuous(\n    breaks = seq(25000, 200000, 25000),  # Setting the range\n    limits = c(25000, 200000)\n  ) +\n  ylab(\"Density\") +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 14, face = \"bold\"),\n    axis.title.x = element_text(size = 12),\n    axis.title.y = element_text(size = 12),\n    axis.text.x = element_text(size = 10),\n    axis.text.y = element_text(size = 10),\n    legend.position = \"right\"\n  )\n# Plotting the interactive density plot\nplotly_chart <- ggplotly(plot)\n\nplotly_chart"
  },
  {
    "objectID": "Takehome Exercise/Takehome Ex 1/Take-home_Ex01/Takehome1.html#anova",
    "href": "Takehome Exercise/Takehome Ex 1/Take-home_Ex01/Takehome1.html#anova",
    "title": "Take-home Exercise 1",
    "section": "Anova",
    "text": "Anova\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\n\nThe code chunk conducts a non-parametric analysis of variance (ANOVA) test to examine the relationship between education level (independent variable) and total wages (dependent variable).\nThe ANOVA test assesses whether there are statistically significant differences in the mean total wages across different education levels. The p-value is a measure of the strength of evidence against the null hypothesis of no difference in means. In this case, since the p-value is below the significance level of 0.05, we can conclude that there is strong evidence to reject the null hypothesis.\nOverall, the data analysis indicates that education level has a significant effect on total wages."
  },
  {
    "objectID": "Takehome Exercise/Takehome Ex 1/Take-home_Ex01/Takehome1.html#code-9",
    "href": "Takehome Exercise/Takehome Ex 1/Take-home_Ex01/Takehome1.html#code-9",
    "title": "Take-home Exercise 1",
    "section": "Code",
    "text": "Code\n\nset.seed(1234)\n\nggbetweenstats(data = sum_wages,\n               x = educationLevel,\n               y = total_wages,\n               type = \"np\",\n               mean.ci = TRUE,\n               pairwise.comparisons = TRUE,\n               pairwise.display = \"s\",\n               p.adjust.method = \"fdr\",\n               messages = FALSE\n) +\n  theme_minimal() +\n  theme(legend.position = \"none\",\n        plot.title = element_text(size = 14, face = \"bold\", hjust = 0.5),\n        axis.title.x = element_text(size = 12),\n        axis.title.y = element_text(size = 12),\n        axis.text.x = element_text(size = 10),\n        axis.text.y = element_text(size = 10),\n        strip.text = element_text(size = 12),\n        panel.grid.major = element_line(color = \"lightgray\"),\n        panel.grid.minor = element_blank()\n      \n)\n\n:::\n\n2.5 Age Group vs Joviality\n\nJoviality vs Age_groupCode\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nThe x axis represents the joviality values, while the y axis represents the age groups. The fill and color aesthetics are set to age_group, resulting in the ridgelines being filled and colored based on the different age groups. The density ridgeline plot is created using the geom_density_ridges function, with a specified bandwidth of 0.05 and an alpha value of 0.6 to control the transparency of the ridgelines. The x-axis scale is adjusted using scale_x_continuous to show tick marks with evenly spaced values.From the plot, it seems that Joviality and age_group has not that much in common to analyze.\n\n\n\n\n\n# Density ridge plot between Joviality and age_group\nggplot(resident_financial, aes(x = joviality, y = age_group,fill = age_group,color = age_group)) +\ngeom_density_ridges(bandwidth = .05, alpha = .6) +\nscale_x_continuous( breaks = scales::pretty_breaks(n = 5)) +\nlabs(title = \" Joviality values Across Age Groups\",\n) +\ntheme(legend.position = \"none\",axis.title.y = element_blank(),panel.grid.major = element_blank(),plot.background = element_rect(fill = \"#e763fa\", color = \"#C7BAA7\"),\n  plot.title = element_text(size = 14, face = \"bold\", color = \"#333333\"),  \n) +\ntheme_minimal() -> plot\n# Displaying the plot\nplot\n\n\n\n\n\nAnova test for Jovality vs Age_group ::: panel-tabset"
  },
  {
    "objectID": "Takehome Exercise/Takehome Ex 1/Take-home_Ex01/Takehome1.html#anova-test",
    "href": "Takehome Exercise/Takehome Ex 1/Take-home_Ex01/Takehome1.html#anova-test",
    "title": "Take-home Exercise 1",
    "section": "Anova test",
    "text": "Anova test\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\n\nThe p-value of 0.08 suggests that there is no significant evidence to reject the null hypothesis that there is no difference in Joviality across different age groups. This may indicates that there might be a trend or some degree of association between Joviality and age_group, but it does not reach the level of statistical significance.\nTherefore, based on this analysis, we do not have sufficient evidence to conclude that there is a significant relationship between Joviality and age_group. Further investigations or a larger sample size might be necessary to explore the potential relationship between these variables in more detail."
  },
  {
    "objectID": "Takehome Exercise/Takehome Ex 1/Take-home_Ex01/Takehome1.html#code-11",
    "href": "Takehome Exercise/Takehome Ex 1/Take-home_Ex01/Takehome1.html#code-11",
    "title": "Take-home Exercise 1",
    "section": "Code",
    "text": "Code\n\nset.seed(1234)\n\nggbetweenstats(data = resident_new,\n               x = age_group,\n               y = joviality,\n               type = \"np\",\n               mean.ci = TRUE,\n               pairwise.comparisons = TRUE,\n               pairwise.display = \"s\",\n               p.adjust.method = \"fdr\",\n               messages = FALSE\n) +\n  theme_minimal() +\n  theme(legend.position = \"none\",\n        plot.title = element_text(size = 14, face = \"bold\", hjust = 0.5),\n        axis.title.x = element_text(size = 12),\n        axis.title.y = element_text(size = 12),\n        axis.text.x = element_text(size = 10),\n        axis.text.y = element_text(size = 10),\n        strip.text = element_text(size = 12),\n        panel.grid.major = element_line(color = \"lightgray\"),\n        panel.grid.minor = element_blank()\n      \n)\n\n:::"
  },
  {
    "objectID": "Takehome Exercise/Takehome Ex 1/Take-home_Ex01/Takehome1.html#limitations-and-recommendations",
    "href": "Takehome Exercise/Takehome Ex 1/Take-home_Ex01/Takehome1.html#limitations-and-recommendations",
    "title": "Take-home Exercise 1",
    "section": "3. Limitations and Recommendations",
    "text": "3. Limitations and Recommendations\n\nLimitations:\n\n\n\n\n\n\n\nNote\n\n\n\n\nLimited variables: The analysis focuses on a specific set of variables and may not capture the full complexity of the relationship between household size and age group. Other relevant variables that could influence the relationship may not have been considered.\nData quality: The analysis assumes that the data used for the plot is accurate and representative. Any data errors, missing values, or biases in the data could impact the validity of the conclusions drawn.\nGeneralization: The findings and conclusions based on the analysis may not be generalizable to a larger population or different contexts. The analysis is specific to the dataset and participants included, and the results may not hold true for other populations or settings.\n\n\n\n\nRecommendations:\n\n\n\n\n\n\n\nNote\n\n\n\n\nInclude additional variables: To gain a more comprehensive understanding of the relationship between household size and age group, it is recommended to consider other relevant variables such as income, occupation, or geographic location. These variables can provide additional insights and help uncover underlying factors influencing the relationship.\nStatistical tests: While visualizations provide initial insights, it is advisable to conduct statistical tests to determine the significance of relationships. Hypothesis testing, regression analysis, or other appropriate statistical methods can provide more robust evidence and quantify the strength of relationships.\nData validation: It is important to ensure the accuracy and quality of the data used for analysis. Conducting data validation checks, addressing missing values, and verifying the representativeness of the dataset can enhance the reliability of the findings.\nConsider diverse samples: To improve generalizability, it is recommended to include a diverse sample of participants from different demographics, socioeconomic backgrounds, and geographical locations. This can help capture variations and identify potential interactions between variables.\nLongitudinal analysis: Analyzing data over time can provide insights into trends and changes in the relationship between household size and age group. Longitudinal analysis can help identify patterns and determine the stability of relationships over time.\nInterpretation caution: When interpreting the findings, it is important to consider the limitations of the analysis and acknowledge potential confounding variables or alternative explanations. Drawing cautious and nuanced conclusions can prevent over generalization and ensure a more accurate understanding of the relationship between household size and age group."
  },
  {
    "objectID": "Takehome Exercise/Takehome Ex 1/Take-home_Ex01/Takehome1.html#appendix",
    "href": "Takehome Exercise/Takehome Ex 1/Take-home_Ex01/Takehome1.html#appendix",
    "title": "Take-home Exercise 1",
    "section": "Appendix",
    "text": "Appendix\n\nParticipants Table:\n\n\n\n\n\n\n\nTip\n\n\n\n\nThe Participants table contains information about the participants involved in the study. It provides details such as participant IDs, household size, presence of children, age, education level, primary interest group, and joviality level.\n\nparticipantId (nominal): This column represents the unique ID assigned to each participant. It serves as a unique identifier for each individual.\nhouseholdSize (integer): This column indicates the number of people in the participant’s household. The values can be 1, 2, or 3, representing different household sizes.\nhaveKids (boolean): This column specifies whether there are children living in the participant’s household. The values can be True or False, indicating the presence or absence of children, respectively.\nage (integer): This column records the age of each participant in years at the start of the study. It provides information about the age distribution of the participants.\neducationLevel (string factor): This column represents the participant’s education level. It is categorized into four levels: “Low,” “HighSchoolOrCollege,” “Bachelors,” and “Graduate.” It captures the educational background of the participants.\ninterestGroup (char): This column denotes the participant’s stated primary interest group. It is represented by a single character, ranging from “A” to “J.” Each character corresponds to a specific interest group to which the participant belongs.\njoviality (float): This column contains a numeric value ranging from 0 to 1, indicating the participant’s overall happiness level at the start of the study. It provides an insight into the emotional well-being of the participants.\n\n\n\n\n\nFinancial Journal Table:\n\n\n\n\n\n\n\nTip\n\n\n\n\nThe Financial Journal table contains transactional details of participants’ expenses. It records information such as participant IDs, timestamps, expense categories, and transaction amounts.\n\nparticipantId (integer): This column serves as a unique ID corresponding to the participant affected by the financial transaction. It helps establish a link between the participants and their financial records.\ntimestamp (datetime): This column records the time when the check-in for the expense was logged. It provides a temporal reference for each financial transaction.\ncategory (string factor): This column describes the expense category associated with each transaction. It is categorized into several categories: “Education,” “Food,” “Recreation,” “RentAdjustment,” “Shelter,” and “Wage.” It classifies the type of expense incurred by the participants.\namount (double): This column represents the amount of the transaction for each financial entry. It captures the numerical value of the expense incurred by the participants.\n\n\n\n\nThese two tables, Participants and Financial Journal, provide crucial information about the participants’ demographic details, and financial transactions."
  }
]