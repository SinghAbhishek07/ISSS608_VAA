[
  {
    "objectID": "Takehome Exercise/Takehome Ex 2/Takehome2.html",
    "href": "Takehome Exercise/Takehome Ex 2/Takehome2.html",
    "title": " ¶ TakeHome-2 ¶ ",
    "section": "",
    "text": "This assignment focuses on the collaboration between FishEye International and the country of Oceanus to combat illegal, unreported, and unregulated (IUU) fishing. FishEye has received import/export data from Oceanus’ marine and fishing industries to identify companies engaged in illegal activities. However, due to incomplete data, FishEye has transformed the trade records into a knowledge graph. The objective is to leverage visual analytics techniques to unveil temporal patterns within the knowledge graph, allowing FishEye to identify entities involved in IUU fishing and understand business relationships. This analysis aims to provide a detailed understanding of patterns for entities and their activities over time."
  },
  {
    "objectID": "Takehome Exercise/Takehome Ex 2/Takehome2.html#objective",
    "href": "Takehome Exercise/Takehome Ex 2/Takehome2.html#objective",
    "title": " ¶ TakeHome-2 ¶ ",
    "section": "Objective",
    "text": "Objective\nThe objective of this analysis is to utilize visual analytics techniques to identify temporal patterns for individual entities and between entities in the knowledge graph derived from Oceanus’ trade records. By examining these patterns, FishEye aims to:\n\nUncover Illegal Fishing Entities: Identify companies that engage in IUU fishing practices by tracking their activities over time. This will help FishEye pinpoint entities involved in illegal fishing operations and prioritize enforcement efforts.\nDetect Business Relationship Patterns: By analyzing temporal patterns, FishEye can identify recurring links, collaborations, or changes in business relationships that might indicate illegal activities or attempts to evade detection.\nMonitor Company Behavior: Track the behavior of suspicious entities that may shut down and reemerge under different names. By visualizing temporal patterns, FishEye can compare the activities of companies over time, enabling them to identify potential reoccurrences of illegal fishing practices.\nProtect Marine Species: Use the findings to develop targeted strategies to mitigate the impact of IUU fishing on marine species. Understanding the patterns of illegal activities will help FishEye take proactive measures to protect vulnerable marine species and ecosystems."
  },
  {
    "objectID": "Takehome Exercise/Takehome Ex 2/Takehome2.html#my-task",
    "href": "Takehome Exercise/Takehome Ex 2/Takehome2.html#my-task",
    "title": " ¶ TakeHome-2 ¶ ",
    "section": "My TASK",
    "text": "My TASK\nUse visual analytics to identify temporal patterns for individual entities and between entities in the knowledge graph FishEye created from trade records. Categorize the types of business relationship patterns you find. Limit your response to 600 words and 6 images."
  },
  {
    "objectID": "Takehome Exercise/Takehome Ex 2/Takehome2.html#data-preparation",
    "href": "Takehome Exercise/Takehome Ex 2/Takehome2.html#data-preparation",
    "title": " ¶ TakeHome-2 ¶ ",
    "section": "1. Data Preparation",
    "text": "1. Data Preparation\n\n1.1 Install R packages and import dataset\n\n\nA Glimpse into the Code\npacman::p_load(jsonlite, igraph, tidygraph, ggraph,\n               visNetwork, lubridate, clock,\n               tidyverse, graphlayouts,knitr,plotly, \n               ggthemes,hrbrthemes,treemap,patchwork, ggiraph,\n               ggstatsplot, summarytools)\n\n\n\n\n\n\n\n\nImportant\n\n\n\n\n\nThe code chunk uses pacman::p_load() to check if packages are installed. If they are, they will be launched into R. The packages used are\n\njsonlite: It is used for working with JSON data in R, providing functions to parse JSON and convert it to data frames.\nigraph : It offers a wide range of graph algorithms and visualization capabilities\ntidygraph: An interface for manipulating and analyzing graphs using the principles of tidy data\nggraph: It allows for creating aesthetically pleasing and customizable graph visualizations.\nvisNetwork: It provides functions to create and customize interactive network plots\nlubridate: It is a package for working with dates and times in R.\nclock: It is a package for working with time zones, providing functions to convert between different time zones and perform various time-related calculations.\nggiraph: used for interactive features such as tooltips, zooming, and panning. It is particularly useful for creating interactive web-based visualizations.\nhrbrthemes: It provides additional themes and styling options\ntreemap: This package offers functions to create treemaps\nplotly: Used for creating interactive web-based graphs.\nggstatsplot: Used for creating graphics with details from statistical tests.\ngraphlayouts: provides various graph layout algorithms for arranging the nodes and edges of a graph in a visually appealing manner.\nknitr: Used for dynamic report generation\npacthwork: Used to combine plots\nggdist: Used for visualising distribution and uncertainty\nggthemes: Provide additional themes for ggplot2\ntidyverse: A collection of core packages designed for data science, used extensively for data preparation and wrangling.\nrstatix: used for data manipulation, summarization, and group-wise comparisons\nHmisc : used to compute descriptive statistics for a variable in a dataset\nDT : DataTables that create interactive table on html page.\nsummarytools- used for creating summary statistics and tables for data exploration and reporting\nkableExtra- is used for creating tables in various output formats, such as HTML, PDF, or Word documents.\nggplot2- provides a flexible and layered approach to create a wide variety of high-quality static and interactive plots.\nsummarytools- used for creating summary statistics and tables for data exploration and reporting\nAll packages can be found within CRAN.\n\npacman::p_load() function from the pacman package is used in the following code chunk to install and call the libraries of multiple R packages:\n\n\n\n\n\n1.2 Importing data sets\n\nCodeData dictionary\n\n\n\n\nA Glimpse into the Code\nmc2 <- fromJSON(\"data/mc2_challenge_graph.json\")\n\n\n\n\nA Glimpse into the Code\nglimpse(mc2)\n\n\nList of 5\n $ directed  : logi TRUE\n $ multigraph: logi TRUE\n $ graph     : Named list()\n $ nodes     :'data.frame': 34576 obs. of  4 variables:\n  ..$ shpcountry: chr [1:34576] \"Polarinda\" NA \"Oceanus\" NA ...\n  ..$ rcvcountry: chr [1:34576] \"Oceanus\" NA \"Oceanus\" NA ...\n  ..$ dataset   : chr [1:34576] \"MC2\" \"MC2\" \"MC2\" \"MC2\" ...\n  ..$ id        : chr [1:34576] \"AquaDelight Inc and Son's\" \"BaringoAmerica Marine Ges.m.b.H.\" \"Yu gan  Sea spray GmbH Industrial\" \"FlounderLeska Marine BV\" ...\n $ links     :'data.frame': 5464378 obs. of  9 variables:\n  ..$ arrivaldate     : chr [1:5464378] \"2034-02-12\" \"2034-03-13\" \"2028-02-07\" \"2028-02-23\" ...\n  ..$ hscode          : chr [1:5464378] \"630630\" \"630630\" \"470710\" \"470710\" ...\n  ..$ valueofgoods_omu: num [1:5464378] 141015 141015 NA NA NA ...\n  ..$ volumeteu       : num [1:5464378] 0 0 0 0 0 0 0 0 0 0 ...\n  ..$ weightkg        : int [1:5464378] 4780 6125 10855 11250 11165 11290 9000 19490 6865 19065 ...\n  ..$ dataset         : chr [1:5464378] \"MC2\" \"MC2\" \"MC2\" \"MC2\" ...\n  ..$ source          : chr [1:5464378] \"AquaDelight Inc and Son's\" \"AquaDelight Inc and Son's\" \"AquaDelight Inc and Son's\" \"AquaDelight Inc and Son's\" ...\n  ..$ target          : chr [1:5464378] \"BaringoAmerica Marine Ges.m.b.H.\" \"BaringoAmerica Marine Ges.m.b.H.\" \"-15045\" \"-15045\" ...\n  ..$ valueofgoodsusd : num [1:5464378] NA NA NA NA NA ...\n\n\n\n\nThe dataset consists of a graph in JSON format with 34,552 nodes and 5,464,092 directed edges. The node attributes include the company name, shipping country, receiving country. The edge attributes provide information such as the source and target company names, arrival date, HS code, value of goods in OMU and USD, volume in TEU, weight in kilograms, dataset identifier, and type.\nNODE\n\nid: Name of the company that originated (or received) the shipment\nshpcountry: Country the company most often associated with when shipping\nrcvcountry: Country the company most often associated with when receiving\n\nEDGE\n\nsource: Name of the company that originated the shipment\ntarget: Name of the company that received the shipment\narrivaldate: Date the shipment arrived at port in YYYY-MM-DD format\nhscode: Harmonized System code for the shipment\nvalueofgoods_omu: Customs-declared value of the total shipment in Oceanus Monetary Units (OMU)\nvolumeteu: The volume of the shipment in ‘Twenty-foot equivalent units’\nweightkg: The weight of the shipment in kilograms (if known)\nvalueofgoodsusd: valueofgoods_omu in USD\n\n\n\n\n\n1.2.1 Spliting data into NODEs and EDGEs\nExtract nodes\n\nExtractionSummary StatiticsData Health\n\n\n\n\nA Glimpse into the Code\nMC2_Nodes <- as_tibble(mc2$nodes) %>%\n  select(id, shpcountry, rcvcountry)\nkable(head(MC2_Nodes))\n\n\n\n\n\nid\nshpcountry\nrcvcountry\n\n\n\n\nAquaDelight Inc and Son’s\nPolarinda\nOceanus\n\n\nBaringoAmerica Marine Ges.m.b.H.\nNA\nNA\n\n\nYu gan Sea spray GmbH Industrial\nOceanus\nOceanus\n\n\nFlounderLeska Marine BV\nNA\nNA\n\n\nOlas del Mar Worldwide\nOceanus\nOceanus\n\n\nFrench Crab S.p.A. Worldwide\nKondanovia\nUtoporiana\n\n\n\n\n\n\n\nA Glimpse into the Code\nstr(MC2_Nodes)\n\n\ntibble [34,576 × 3] (S3: tbl_df/tbl/data.frame)\n $ id        : chr [1:34576] \"AquaDelight Inc and Son's\" \"BaringoAmerica Marine Ges.m.b.H.\" \"Yu gan  Sea spray GmbH Industrial\" \"FlounderLeska Marine BV\" ...\n $ shpcountry: chr [1:34576] \"Polarinda\" NA \"Oceanus\" NA ...\n $ rcvcountry: chr [1:34576] \"Oceanus\" NA \"Oceanus\" NA ...\n\n\n\n\n\n\nA Glimpse into the Code\nHmisc::describe(MC2_Nodes)\n\n\nMC2_Nodes \n\n 3  Variables      34576  Observations\n--------------------------------------------------------------------------------\nid \n       n  missing distinct \n   34576        0    34576 \n\nlowest : -1                                      -10                                     -100                                    -1000                                   -10000                                 \nhighest: zūn yú N.V. Transportation              zūn yú Plc Holdings                     zūn yú Submarine Incorporated Logistics ОАО Ltd. Liability Co                   ОАО S.A. de C.V.                       \n--------------------------------------------------------------------------------\nshpcountry \n       n  missing distinct \n   12217    22359      154 \n\nlowest : -22004      -22005      -22007       Francora   Afarivaria \nhighest: Zaloria     Zambalantis Zambarka    Zawalinda   Zimawand   \n--------------------------------------------------------------------------------\nrcvcountry \n       n  missing distinct \n   31667     2909      113 \n\nlowest : -22005      -22014      -22015      Afarisburg  Alverossia \nhighest: Vientoro    Yggdrasonia Zaloria     Zawalinda   Zimawand   \n--------------------------------------------------------------------------------\n\n\n\n\nChecking Missing Values:\n\n\nA Glimpse into the Code\ncolSums(is.na(MC2_Nodes))\n\n\n        id shpcountry rcvcountry \n         0      22359       2909 \n\n\nshpcountry has 22359 missing values, andrcvcountry has 2909 missing values. To do better analysis, all NA values are replaced by “NULL VALUES”.\n\n\nA Glimpse into the Code\n# Assigning NULL VALUES\nMC2_Nodes <- MC2_Nodes %>%\n  replace(is.na(MC2_Nodes), \"NULL VALUES\")\n\n\nChecking Duplicates\n\n\nA Glimpse into the Code\nany(duplicated(MC2_Nodes))\n\n\n[1] FALSE\n\n\nNo Duplicate values here\n\n\n\nExtract edges\n\nExtractionSummary StatiticsData Health\n\n\n\n\nA Glimpse into the Code\nMC2_Edges <- as_tibble(mc2$links) %>%\n  mutate(ArrivalDate = ymd(arrivaldate)) %>%\n  mutate(Year = year(ArrivalDate)) %>%\n  select(source, target, ArrivalDate, Year, hscode,  valueofgoods_omu, \n         volumeteu, weightkg, valueofgoodsusd) %>% \n  distinct()\nkable(head(MC2_Edges))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nsource\ntarget\nArrivalDate\nYear\nhscode\nvalueofgoods_omu\nvolumeteu\nweightkg\nvalueofgoodsusd\n\n\n\n\nAquaDelight Inc and Son’s\nBaringoAmerica Marine Ges.m.b.H.\n2034-02-12\n2034\n630630\n141015\n0\n4780\nNA\n\n\nAquaDelight Inc and Son’s\nBaringoAmerica Marine Ges.m.b.H.\n2034-03-13\n2034\n630630\n141015\n0\n6125\nNA\n\n\nAquaDelight Inc and Son’s\n-15045\n2028-02-07\n2028\n470710\nNA\n0\n10855\nNA\n\n\nAquaDelight Inc and Son’s\n-15045\n2028-02-23\n2028\n470710\nNA\n0\n11250\nNA\n\n\nAquaDelight Inc and Son’s\n-15045\n2028-09-11\n2028\n470710\nNA\n0\n11165\nNA\n\n\nAquaDelight Inc and Son’s\n-15045\n2028-10-09\n2028\n470710\nNA\n0\n11290\nNA\n\n\n\n\n\n\n\nA Glimpse into the Code\nstr(MC2_Edges)\n\n\ntibble [5,309,087 × 9] (S3: tbl_df/tbl/data.frame)\n $ source          : chr [1:5309087] \"AquaDelight Inc and Son's\" \"AquaDelight Inc and Son's\" \"AquaDelight Inc and Son's\" \"AquaDelight Inc and Son's\" ...\n $ target          : chr [1:5309087] \"BaringoAmerica Marine Ges.m.b.H.\" \"BaringoAmerica Marine Ges.m.b.H.\" \"-15045\" \"-15045\" ...\n $ ArrivalDate     : Date[1:5309087], format: \"2034-02-12\" \"2034-03-13\" ...\n $ Year            : num [1:5309087] 2034 2034 2028 2028 2028 ...\n $ hscode          : chr [1:5309087] \"630630\" \"630630\" \"470710\" \"470710\" ...\n $ valueofgoods_omu: num [1:5309087] 141015 141015 NA NA NA ...\n $ volumeteu       : num [1:5309087] 0 0 0 0 0 0 0 0 0 0 ...\n $ weightkg        : int [1:5309087] 4780 6125 10855 11250 11165 11290 9000 19490 6865 19065 ...\n $ valueofgoodsusd : num [1:5309087] NA NA NA NA NA ...\n\n\n\n\n\n\n\n\nTip\n\n\n\n\nmutate() is used two times to create two derived fields.\nymd() of lubridate package is used to covert arrivaldate field from character data type into date data type.\nyear() of lubridate package is used to convert the values in ArrivalDate field into year values.\nselect() is used not only to select the field needed but also to re-organise the sequent of the fields\n\n\n\n\n\n\n\nA Glimpse into the Code\nHmisc::describe(MC2_Edges)\n\n\nMC2_Edges \n\n 9  Variables      5309087  Observations\n--------------------------------------------------------------------------------\nsource \n       n  missing distinct \n 5309087        0    12217 \n\nlowest : -1                                      -10                                     -11                                     -1143                                   -12                                    \nhighest: zūn yú N.V. Transportation              zūn yú Plc Holdings                     zūn yú Submarine Incorporated Logistics ОАО Ltd. Liability Co                   ОАО S.A. de C.V.                       \n--------------------------------------------------------------------------------\ntarget \n       n  missing distinct \n 5309087        0    31691 \n\nlowest : -100                                    -1000                                   -10000                                  -10001                                  -10002                                 \nhighest: zūn yú N.V. Transportation              zūn yú Plc Holdings                     zūn yú Submarine Incorporated Logistics ОАО Ltd. Liability Co                   ОАО S.A. de C.V.                       \n--------------------------------------------------------------------------------\nArrivalDate \n         n    missing   distinct       Info       Mean        Gmd        .05 \n   5309087          0       2556          1 2031-06-04      841.3 2028-05-18 \n       .10        .25        .50        .75        .90        .95 \n2028-09-16 2029-09-17 2031-05-07 2033-02-26 2034-03-21 2034-08-05 \n\nlowest : 2028-01-01 2028-01-02 2028-01-03 2028-01-04 2028-01-05\nhighest: 2034-12-26 2034-12-27 2034-12-28 2034-12-29 2034-12-30\n--------------------------------------------------------------------------------\nYear \n       n  missing distinct     Info     Mean      Gmd \n 5309087        0        7    0.979     2031    2.261 \n\nlowest : 2028 2029 2030 2031 2032, highest: 2030 2031 2032 2033 2034\n                                                           \nValue        2028   2029   2030   2031   2032   2033   2034\nFrequency  757875 810685 831459 744698 723384 752809 688177\nProportion  0.143  0.153  0.157  0.140  0.136  0.142  0.130\n--------------------------------------------------------------------------------\nhscode \n       n  missing distinct \n 5309087        0     4761 \n\nlowest : 100119 100191 100199 100210 100290, highest: 970300 970400 970500 970600 999999\n--------------------------------------------------------------------------------\nvalueofgoods_omu \n       n  missing distinct     Info     Mean      Gmd      .05      .10 \n     281  5308806      264        1  1665142  2494994    47545    63625 \n     .25      .50      .75      .90      .95 \n  148130   504485  1202560  3040240  6776195 \n\nlowest :     1100     4200     5705     5800    11010\nhighest: 19624925 20546105 22936140 27928330 44744530\n--------------------------------------------------------------------------------\nvolumeteu \n       n  missing distinct     Info     Mean      Gmd      .05      .10 \n 4811006   498081      129    0.411    1.509    2.715        0        0 \n     .25      .50      .75      .90      .95 \n       0        0        0        5       10 \n\nlowest :    0    5   10   15   20, highest:  895  920  990 1110 1215\n--------------------------------------------------------------------------------\nweightkg \n       n  missing distinct     Info     Mean      Gmd      .05      .10 \n 5309087        0    91532        1    38161    62208       90      400 \n     .25      .50      .75      .90      .95 \n    3115    10660    19845    32180    60345 \n\nlowest :         0         5        10        15        20\nhighest: 388112230 424448920 435781520 493559110 495492485\n--------------------------------------------------------------------------------\nvalueofgoodsusd \n       n  missing distinct     Info     Mean      Gmd      .05      .10 \n 2422832  2886255   129037        1   873608  1638260     1200     5505 \n     .25      .50      .75      .90      .95 \n   27420    72805   159045   287245   506185 \n\nlowest :            0            5           10           15           20\nhighest:  27304923345  34889737360 105076265245 223673947970 225833730200\n\n0 (2422645, 1), 2e+09 (69, 0), 4e+09 (58, 0), 6e+09 (35, 0), 8e+09 (2, 0),\n1e+10 (11, 0), 1.2e+10 (2, 0), 1.4e+10 (2, 0), 1.8e+10 (2, 0), 2.2e+10 (1, 0),\n2.8e+10 (1, 0), 3.4e+10 (1, 0), 1.06e+11 (1, 0), 2.24e+11 (1, 0), 2.26e+11 (1,\n0)\n\nFor the frequency table, variable is rounded to the nearest 2e+09\n--------------------------------------------------------------------------------\n\n\n\n\nChecking Missing Values:\n\n\nA Glimpse into the Code\ncolSums(is.na(MC2_Edges))\n\n\n          source           target      ArrivalDate             Year \n               0                0                0                0 \n          hscode valueofgoods_omu        volumeteu         weightkg \n               0          5308806           498081                0 \n valueofgoodsusd \n         2886255 \n\n\nvalueofgoods_omu has too many missing values and there it will be removed. While on other missing values we can check for more details.\n\n\nA Glimpse into the Code\nMC2_Edges <- MC2_Edges %>% select(-valueofgoods_omu)\n\nglimpse(MC2_Edges)\n\n\nRows: 5,309,087\nColumns: 8\n$ source          <chr> \"AquaDelight Inc and Son's\", \"AquaDelight Inc and Son'…\n$ target          <chr> \"BaringoAmerica Marine Ges.m.b.H.\", \"BaringoAmerica Ma…\n$ ArrivalDate     <date> 2034-02-12, 2034-03-13, 2028-02-07, 2028-02-23, 2028-…\n$ Year            <dbl> 2034, 2034, 2028, 2028, 2028, 2028, 2028, 2028, 2028, …\n$ hscode          <chr> \"630630\", \"630630\", \"470710\", \"470710\", \"470710\", \"470…\n$ volumeteu       <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ weightkg        <int> 4780, 6125, 10855, 11250, 11165, 11290, 9000, 19490, 6…\n$ valueofgoodsusd <dbl> NA, NA, NA, NA, NA, NA, 87110, 188140, NA, 221110, 586…\n\n\n\n\n\n\n\n\n1.3 Data Wrangling\n\n1.3.1 HsCode related to Fishing\nPreparing for the Edges\nOn first observation it can be seen how many unqiue HsCode available and what all we can use related to fishing. There are 4761 Unique Hscode.\n\n\nA Glimpse into the Code\nhscode <- MC2_Edges %>% \n  group_by( hscode) %>% \n   summarise(Weight = n(), .groups = \"drop\")\n\nglimpse(arrange(hscode, desc(Weight)))\n\n\nRows: 4,761\nColumns: 2\n$ hscode <chr> \"306170\", \"950300\", \"870899\", \"611020\", \"940360\", \"304620\", \"16…\n$ Weight <int> 156204, 123262, 108353, 90772, 89764, 87340, 81858, 66209, 6213…\n\n\nAfter understanding the Singapore Trade Classification and Connect2India, it has been discovered that there is a limited range of codes associated with fishing. These codes encompass numbers ranging from 2301-2530, 1603 to 1605, and 30000 to 390000.\n\n\nA Glimpse into the Code\nMC2_Edges$hscode <- as.integer(MC2_Edges$hscode)\n\nEdge1 <- MC2_Edges %>% filter(between(hscode, 160300, 160599))\nEdge2 <- MC2_Edges %>% filter(between(hscode, 230100, 253099))\nEdge3 <- MC2_Edges %>% filter(between(hscode, 300000, 390000))\n\nMC2_Edges <- rbind(Edge1, Edge2, Edge3) %>%\n  distinct()\n\n\n\n\n\n\n\n\nTip\n\n\n\n\nhscode is converted from chr to int format.\nDuplicate records are removed, if any.\n\n\n\n\nCreating a new Aggregated Edge Table that will have source, target, hscode,Year\n\n\n\nA Glimpse into the Code\nMC2_Edges_Aggregated <- MC2_Edges %>%\n  group_by(source, target, hscode, Year) %>%\n    summarise(weights = n(), .groups = \"drop\") %>%\n  filter(source!=target) %>%\n  filter(weights > 1) %>%\n  ungroup() \n\n\n\n\n\n\n\n\nTip\n\n\n\n\ngroup_by() is used to aggregate values by source, target, hscode, Year.\nsummarise() and n() are used to count the aggregated records.\nfilter() is then used to perform two selections\n\nto select all records whereby source are not equal to target, and\nto select all records whereby the values of their weights field are greater than 1\n\n\n\n\nPreparing for the Nodes - Creating a fresh data table for the nodes in MC2 by utilizing the source and target information from the MC2_edges_aggregated data table. The objective is to guarantee that all the source and target values are incorporated as nodes in the new data table.\n\n\nA Glimpse into the Code\nid1 <- MC2_Edges_Aggregated %>%\n  select(source) %>%\n  rename(id = source)\nid2 <- MC2_Edges_Aggregated %>%\n  select(target) %>%\n  rename(id = target)\nMC2_nodes_extracted <- rbind(id1, id2) %>%\n  distinct()\n\n\n\n\nA Glimpse into the Code\nMC2_combined <- tbl_graph(nodes = MC2_nodes_extracted,\n                       edges = MC2_Edges_Aggregated,\n                       directed = TRUE)\n\n\n\n\nA Glimpse into the Code\nMC2_combined\n\n\n# A tbl_graph: 11888 nodes and 90919 edges\n#\n# A directed multigraph with 148 components\n#\n# A tibble: 11,888 × 1\n  id                                          \n  <chr>                                       \n1 \" Direct Herring Company Transit\"           \n2 \" Direct LLC Marine biology\"                \n3 \" Direct Limited Liability Company Shipping\"\n4 \" Direct S.A. de C.V.\"                      \n5 \" Direct Shark Oyj Marine sanctuary\"        \n6 \"-15\"                                       \n# ℹ 11,882 more rows\n#\n# A tibble: 90,919 × 5\n   from    to hscode  Year weights\n  <int> <int>  <int> <dbl>   <int>\n1     1  7899 307590  2029       2\n2     1  7899 307590  2030       3\n3     1   140 307590  2030       2\n# ℹ 90,916 more rows\n\n\nThe dataframe ‘MC2_combined’ has 11888 nodes and 90919 edges. It is a directed graph with 148 components.\n\n\n1.3.2 Years Wise Fishing\nPreparing for the Edges\nChecking the Unique number of years\n\n\nA Glimpse into the Code\nsort(unique(MC2_Edges$Year))\n\n\n[1] 2028 2029 2030 2031 2032 2033 2034\n\n\n\n2028202920302031203220332034All\n\n\n\n160300-160599230100, 253099300000-390000\n\n\n\n\nA Glimpse into the Code\nAgg_2028_Edges1 <- Edge1 %>%\n  filter(Year == \"2028\") %>%\n  group_by(source, target, hscode, Year) %>%\n    summarise(weights = n(), .groups = \"drop\") %>%\n  filter(source!=target) %>%\n  filter(weights > 1) %>%\n  ungroup()\n\n\n\n\n\n\nA Glimpse into the Code\nAgg_2028_Edges2 <- Edge2 %>%\n  filter(Year == \"2028\") %>%\n  group_by(source, target, hscode, Year) %>%\n    summarise(weights = n(), .groups = \"drop\") %>%\n  filter(source!=target) %>%\n  filter(weights > 1) %>%\n  ungroup()\n\n\n\n\n\n\nA Glimpse into the Code\nAgg_2028_Edges3 <- Edge3 %>%\n  filter(Year == \"2028\") %>%\n  group_by(source, target, hscode, Year) %>%\n    summarise(weights = n(), .groups = \"drop\") %>%\n  filter(source!=target) %>%\n  filter(weights > 1) %>%\n  ungroup()\n\n\n\n\n\n\n\n\n160300-160599230100, 253099300000-390000\n\n\n\n\nA Glimpse into the Code\nAgg_2029_Edges1 <- Edge1 %>%\n  filter(Year == \"2029\") %>%\n  group_by(source, target, hscode, Year) %>%\n    summarise(weights = n(), .groups = \"drop\") %>%\n  filter(source!=target) %>%\n  filter(weights > 1) %>%\n  ungroup()\n\n\n\n\n\n\nA Glimpse into the Code\nAgg_2029_Edges2 <- Edge2 %>%\n  filter(Year == \"2029\") %>%\n  group_by(source, target, hscode, Year) %>%\n    summarise(weights = n(), .groups = \"drop\") %>%\n  filter(source!=target) %>%\n  filter(weights > 1) %>%\n  ungroup()\n\n\n\n\n\n\nA Glimpse into the Code\nAgg_2029_Edges3 <- Edge3 %>%\n  filter(Year == \"2029\") %>%\n  group_by(source, target, hscode, Year) %>%\n    summarise(weights = n(), .groups = \"drop\") %>%\n  filter(source!=target) %>%\n  filter(weights > 1) %>%\n  ungroup()\n\n\n\n\n\n\n\n\n160300-160599230100, 253099300000-390000\n\n\n\n\nA Glimpse into the Code\nAgg_2030_Edges1 <- Edge1 %>%\n  filter(Year == \"2030\") %>%\n  group_by(source, target, hscode, Year) %>%\n    summarise(weights = n(), .groups = \"drop\") %>%\n  filter(source!=target) %>%\n  filter(weights > 1) %>%\n  ungroup()\n\n\n\n\n\n\nA Glimpse into the Code\nAgg_2030_Edges2 <- Edge2 %>%\n  filter(Year == \"2030\") %>%\n  group_by(source, target, hscode, Year) %>%\n    summarise(weights = n(), .groups = \"drop\") %>%\n  filter(source!=target) %>%\n  filter(weights > 1) %>%\n  ungroup()\n\n\n\n\n\n\nA Glimpse into the Code\nAgg_2030_Edges3 <- Edge3 %>%\n  filter(Year == \"2030\") %>%\n  group_by(source, target, hscode, Year) %>%\n    summarise(weights = n(), .groups = \"drop\") %>%\n  filter(source!=target) %>%\n  filter(weights > 1) %>%\n  ungroup()\n\n\n\n\n\n\n\n\n160300-160599230100, 253099300000-390000\n\n\n\n\nA Glimpse into the Code\nAgg_2031_Edges1 <- Edge1 %>%\n  filter(Year == \"2031\") %>%\n  group_by(source, target, hscode, Year) %>%\n    summarise(weights = n(), .groups = \"drop\") %>%\n  filter(source!=target) %>%\n  filter(weights > 1) %>%\n  ungroup()\n\n\n\n\n\n\nA Glimpse into the Code\nAgg_2031_Edges2 <- Edge2 %>%\n  filter(Year == \"2031\") %>%\n  group_by(source, target, hscode, Year) %>%\n    summarise(weights = n(), .groups = \"drop\") %>%\n  filter(source!=target) %>%\n  filter(weights > 1) %>%\n  ungroup()\n\n\n\n\n\n\nA Glimpse into the Code\nAgg_2031_Edges3 <- Edge3 %>%\n  filter(Year == \"2031\") %>%\n  group_by(source, target, hscode, Year) %>%\n    summarise(weights = n(), .groups = \"drop\") %>%\n  filter(source!=target) %>%\n  filter(weights > 1) %>%\n  ungroup()\n\n\n\n\n\n\n\n\n160300-160599230100, 253099300000-390000\n\n\n\n\nA Glimpse into the Code\nAgg_2032_Edges1 <- Edge1 %>%\n  filter(Year == \"2032\") %>%\n  group_by(source, target, hscode, Year) %>%\n    summarise(weights = n(), .groups = \"drop\") %>%\n  filter(source!=target) %>%\n  filter(weights > 1) %>%\n  ungroup()\n\n\n\n\n\n\nA Glimpse into the Code\nAgg_2032_Edges2 <- Edge2 %>%\n  filter(Year == \"2032\") %>%\n  group_by(source, target, hscode, Year) %>%\n    summarise(weights = n(), .groups = \"drop\") %>%\n  filter(source!=target) %>%\n  filter(weights > 1) %>%\n  ungroup()\n\n\n\n\n\n\nA Glimpse into the Code\nAgg_2032_Edges3 <- Edge3 %>%\n  filter(Year == \"2032\") %>%\n  group_by(source, target, hscode, Year) %>%\n    summarise(weights = n(), .groups = \"drop\") %>%\n  filter(source!=target) %>%\n  filter(weights > 1) %>%\n  ungroup()\n\n\n\n\n\n\n\n\n160300-160599230100, 253099300000-390000\n\n\n\n\nA Glimpse into the Code\nAgg_2033_Edges1 <- Edge1 %>%\n  filter(Year == \"2033\") %>%\n  group_by(source, target, hscode, Year) %>%\n    summarise(weights = n(), .groups = \"drop\") %>%\n  filter(source!=target) %>%\n  filter(weights > 1) %>%\n  ungroup()\n\n\n\n\n\n\nA Glimpse into the Code\nAgg_2033_Edges2 <- Edge2 %>%\n  filter(Year == \"2033\") %>%\n  group_by(source, target, hscode, Year) %>%\n    summarise(weights = n(), .groups = \"drop\") %>%\n  filter(source!=target) %>%\n  filter(weights > 1) %>%\n  ungroup()\n\n\n\n\n\n\nA Glimpse into the Code\nAgg_2033_Edges3 <- Edge3 %>%\n  filter(Year == \"2033\") %>%\n  group_by(source, target, hscode, Year) %>%\n    summarise(weights = n(), .groups = \"drop\") %>%\n  filter(source!=target) %>%\n  filter(weights > 1) %>%\n  ungroup()\n\n\n\n\n\n\n\n\n160300-160599230100, 253099300000-390000\n\n\n\n\nA Glimpse into the Code\nAgg_2034_Edges1 <- Edge1 %>%\n  filter(Year == \"2034\") %>%\n  group_by(source, target, hscode, Year) %>%\n    summarise(weights = n(), .groups = \"drop\") %>%\n  filter(source!=target) %>%\n  filter(weights > 1) %>%\n  ungroup()\n\n\n\n\n\n\nA Glimpse into the Code\nAgg_2034_Edges2 <- Edge2 %>%\n  filter(Year == \"2034\") %>%\n  group_by(source, target, hscode, Year) %>%\n    summarise(weights = n(), .groups = \"drop\") %>%\n  filter(source!=target) %>%\n  filter(weights > 1) %>%\n  ungroup()\n\n\n\n\n\n\nA Glimpse into the Code\nAgg_2034_Edges3 <- Edge3 %>%\n  filter(Year == \"2034\") %>%\n  group_by(source, target, hscode, Year) %>%\n    summarise(weights = n(), .groups = \"drop\") %>%\n  filter(source!=target) %>%\n  filter(weights > 1) %>%\n  ungroup()\n\n\n\n\n\n\n\n\n160300-160599230100, 253099300000-390000\n\n\n\n\nA Glimpse into the Code\nCombinedEdges1 <- rbind(Agg_2028_Edges1, \n                        Agg_2029_Edges1, \n                        Agg_2030_Edges1,\n                        Agg_2031_Edges1,\n                        Agg_2032_Edges1,\n                        Agg_2033_Edges1,\n                        Agg_2034_Edges1)\n\n\n\n\n\n\nA Glimpse into the Code\nCombinedEdges2 <- rbind(Agg_2028_Edges2, \n                        Agg_2029_Edges2, \n                        Agg_2030_Edges2,\n                        Agg_2031_Edges2,\n                        Agg_2032_Edges2,\n                        Agg_2033_Edges2,\n                        Agg_2034_Edges2)\n\n\n\n\n\n\nA Glimpse into the Code\nCombinedEdges3 <- rbind(Agg_2028_Edges3, \n                        Agg_2029_Edges3, \n                        Agg_2030_Edges3,\n                        Agg_2031_Edges3,\n                        Agg_2032_Edges3,\n                        Agg_2033_Edges3,\n                        Agg_2034_Edges3)\n\n\n\n\n\n\n\n\nPreparing for the Nodes\n\nCreating a fresh data table for the nodes in MC2 by utilizing the source and target information from the MC2_edges_aggregated data table. The objective is to guarantee that all the source and target values are incorporated as nodes in the new data table.\n\n\n2028202920302031203220332034ALL\n\n\n\n160300-160599230100, 253099300000-390000\n\n\n\n\nA Glimpse into the Code\nid1 <- Agg_2028_Edges1 %>%\n  select(source) %>%\n  rename(id = source)\nid2 <- Agg_2028_Edges1 %>%\n  select(target) %>%\n  rename(id = target)\nAgg_2028_Nodes1 <- rbind(id1, id2) %>%\n  distinct()\n\n\n\n\n\n\nA Glimpse into the Code\nid1 <- Agg_2028_Edges2 %>%\n  select(source) %>%\n  rename(id = source)\nid2 <- Agg_2028_Edges2 %>%\n  select(target) %>%\n  rename(id = target)\nAgg_2028_Nodes2 <- rbind(id1, id2) %>%\n  distinct()\n\n\n\n\n\n\nA Glimpse into the Code\nid1 <- Agg_2028_Edges3 %>%\n  select(source) %>%\n  rename(id = source)\nid2 <- Agg_2028_Edges3 %>%\n  select(target) %>%\n  rename(id = target)\nAgg_2028_Nodes3 <- rbind(id1, id2) %>%\n  distinct()\n\n\n\n\n\n\n\n\n160300-160599230100, 253099300000-390000\n\n\n\n\nA Glimpse into the Code\nid1 <- Agg_2029_Edges1 %>%\n  select(source) %>%\n  rename(id = source)\nid2 <- Agg_2029_Edges1 %>%\n  select(target) %>%\n  rename(id = target)\nAgg_2029_Nodes1 <- rbind(id1, id2) %>%\n  distinct()\n\n\n\n\n\n\nA Glimpse into the Code\nid1 <- Agg_2029_Edges2 %>%\n  select(source) %>%\n  rename(id = source)\nid2 <- Agg_2029_Edges2 %>%\n  select(target) %>%\n  rename(id = target)\nAgg_2029_Nodes2 <- rbind(id1, id2) %>%\n  distinct()\n\n\n\n\n\n\nA Glimpse into the Code\nid1 <- Agg_2029_Edges3 %>%\n  select(source) %>%\n  rename(id = source)\nid2 <- Agg_2029_Edges3 %>%\n  select(target) %>%\n  rename(id = target)\nAgg_2029_Nodes3 <- rbind(id1, id2) %>%\n  distinct()\n\n\n\n\n\n\n\n\n160300-160599230100, 253099300000-390000\n\n\n\n\nA Glimpse into the Code\nid1 <- Agg_2030_Edges1 %>%\n  select(source) %>%\n  rename(id = source)\nid2 <- Agg_2030_Edges1 %>%\n  select(target) %>%\n  rename(id = target)\nAgg_2030_Nodes1 <- rbind(id1, id2) %>%\n  distinct()\n\n\n\n\n\n\nA Glimpse into the Code\nid1 <- Agg_2030_Edges2 %>%\n  select(source) %>%\n  rename(id = source)\nid2 <- Agg_2030_Edges2 %>%\n  select(target) %>%\n  rename(id = target)\nAgg_2030_Nodes2 <- rbind(id1, id2) %>%\n  distinct()\n\n\n\n\n\n\nA Glimpse into the Code\nid1 <- Agg_2030_Edges3 %>%\n  select(source) %>%\n  rename(id = source)\nid2 <- Agg_2030_Edges3 %>%\n  select(target) %>%\n  rename(id = target)\nAgg_2030_Nodes3 <- rbind(id1, id2) %>%\n  distinct()\n\n\n\n\n\n\n\n\n160300-160599230100, 253099300000-390000\n\n\n\n\nA Glimpse into the Code\nid1 <- Agg_2031_Edges1 %>%\n  select(source) %>%\n  rename(id = source)\nid2 <- Agg_2031_Edges1 %>%\n  select(target) %>%\n  rename(id = target)\nAgg_2031_Nodes1 <- rbind(id1, id2) %>%\n  distinct()\n\n\n\n\n\n\nA Glimpse into the Code\nid1 <- Agg_2031_Edges2 %>%\n  select(source) %>%\n  rename(id = source)\nid2 <- Agg_2031_Edges2 %>%\n  select(target) %>%\n  rename(id = target)\nAgg_2031_Nodes2 <- rbind(id1, id2) %>%\n  distinct()\n\n\n\n\n\n\nA Glimpse into the Code\nid1 <- Agg_2031_Edges3 %>%\n  select(source) %>%\n  rename(id = source)\nid2 <- Agg_2031_Edges3 %>%\n  select(target) %>%\n  rename(id = target)\nAgg_2031_Nodes3 <- rbind(id1, id2) %>%\n  distinct()\n\n\n\n\n\n\n\n\n160300-160599230100, 253099300000-390000\n\n\n\n\nA Glimpse into the Code\nid1 <- Agg_2032_Edges1 %>%\n  select(source) %>%\n  rename(id = source)\nid2 <- Agg_2032_Edges1 %>%\n  select(target) %>%\n  rename(id = target)\nAgg_2032_Nodes1 <- rbind(id1, id2) %>%\n  distinct()\n\n\n\n\n\n\nA Glimpse into the Code\nid1 <- Agg_2032_Edges2 %>%\n  select(source) %>%\n  rename(id = source)\nid2 <- Agg_2032_Edges2 %>%\n  select(target) %>%\n  rename(id = target)\nAgg_2032_Nodes2 <- rbind(id1, id2) %>%\n  distinct()\n\n\n\n\n\n\nA Glimpse into the Code\nid1 <- Agg_2032_Edges3 %>%\n  select(source) %>%\n  rename(id = source)\nid2 <- Agg_2032_Edges3 %>%\n  select(target) %>%\n  rename(id = target)\nAgg_2032_Nodes3 <- rbind(id1, id2) %>%\n  distinct()\n\n\n\n\n\n\n\n\n160300-160599230100, 253099300000-390000\n\n\n\n\nA Glimpse into the Code\nid1 <- Agg_2033_Edges1 %>%\n  select(source) %>%\n  rename(id = source)\nid2 <- Agg_2033_Edges1 %>%\n  select(target) %>%\n  rename(id = target)\nAgg_2033_Nodes1 <- rbind(id1, id2) %>%\n  distinct()\n\n\n\n\n\n\nA Glimpse into the Code\nid1 <- Agg_2033_Edges2 %>%\n  select(source) %>%\n  rename(id = source)\nid2 <- Agg_2033_Edges2 %>%\n  select(target) %>%\n  rename(id = target)\nAgg_2033_Nodes2 <- rbind(id1, id2) %>%\n  distinct()\n\n\n\n\n\n\nA Glimpse into the Code\nid1 <- Agg_2033_Edges3 %>%\n  select(source) %>%\n  rename(id = source)\nid2 <- Agg_2033_Edges3 %>%\n  select(target) %>%\n  rename(id = target)\nAgg_2033_Nodes3 <- rbind(id1, id2) %>%\n  distinct()\n\n\n\n\n\n\n\n\n160300-160599230100, 253099300000-390000\n\n\n\n\nA Glimpse into the Code\nid1 <- Agg_2034_Edges1 %>%\n  select(source) %>%\n  rename(id = source)\nid2 <- Agg_2034_Edges1 %>%\n  select(target) %>%\n  rename(id = target)\nAgg_2034_Nodes1 <- rbind(id1, id2) %>%\n  distinct()\n\n\n\n\n\n\nA Glimpse into the Code\nid1 <- Agg_2034_Edges2 %>%\n  select(source) %>%\n  rename(id = source)\nid2 <- Agg_2034_Edges2 %>%\n  select(target) %>%\n  rename(id = target)\nAgg_2034_Nodes2 <- rbind(id1, id2) %>%\n  distinct()\n\n\n\n\n\n\nA Glimpse into the Code\nid1 <- Agg_2034_Edges3 %>%\n  select(source) %>%\n  rename(id = source)\nid2 <- Agg_2034_Edges3 %>%\n  select(target) %>%\n  rename(id = target)\nAgg_2034_Nodes3 <- rbind(id1, id2) %>%\n  distinct()\n\n\n\n\n\n\n\n\n160300-160599230100, 253099300000-390000\n\n\n\n\nA Glimpse into the Code\nCombinedNodes1 <- rbind(Agg_2028_Nodes1,\n                        Agg_2029_Nodes1,\n                        Agg_2030_Nodes1,\n                        Agg_2031_Nodes1,\n                        Agg_2032_Nodes1,\n                        Agg_2033_Nodes1,\n                        Agg_2034_Nodes1)\n\n\n\n\n\n\nA Glimpse into the Code\nCombinedNodes2 <- rbind(Agg_2028_Nodes2,\n                        Agg_2029_Nodes2,\n                        Agg_2030_Nodes2,\n                        Agg_2031_Nodes2,\n                        Agg_2032_Nodes2,\n                        Agg_2033_Nodes2,\n                        Agg_2034_Nodes2)\n\n\n\n\n\n\nA Glimpse into the Code\nCombinedNodes3 <- rbind(Agg_2028_Nodes3,\n                        Agg_2029_Nodes3,\n                        Agg_2030_Nodes3,\n                        Agg_2031_Nodes3,\n                        Agg_2032_Nodes3,\n                        Agg_2033_Nodes3,\n                        Agg_2034_Nodes3)\n\n\n\n\n\n\n\n\nBuild the Tidygraph data model\n\n2028202920302031203220332034ALL\n\n\n\n\nA Glimpse into the Code\n# 160300-160599\nGraph2028_1 <- tbl_graph(nodes = Agg_2028_Nodes1,\n                       edges = Agg_2028_Edges1,\n                       directed = TRUE) \n\n\n# 230100, 253099\nGraph2028_2 <- tbl_graph(nodes = Agg_2028_Nodes2,\n                       edges = Agg_2028_Edges2,\n                       directed = TRUE) \n\n# 300000-390000\nGraph2028_3 <- tbl_graph(nodes = Agg_2028_Nodes3,\n                       edges = Agg_2028_Edges3,\n                       directed = TRUE) \n\n\n\n\n\n\nA Glimpse into the Code\n# 160300-160599\nGraph2029_1 <- tbl_graph(nodes = Agg_2029_Nodes1,\n                       edges = Agg_2029_Edges1,\n                       directed = TRUE) \n\n\n# 230100, 253099\nGraph2029_2 <- tbl_graph(nodes = Agg_2029_Nodes2,\n                       edges = Agg_2029_Edges2,\n                       directed = TRUE) \n\n# 300000-390000\nGraph2029_3 <- tbl_graph(nodes = Agg_2029_Nodes3,\n                       edges = Agg_2029_Edges3,\n                       directed = TRUE) \n\n\n\n\n\n\nA Glimpse into the Code\n# 160300-160599\nGraph2030_1 <- tbl_graph(nodes = Agg_2030_Nodes1,\n                       edges = Agg_2030_Edges1,\n                       directed = TRUE) \n\n\n# 230100, 253099\nGraph2030_2 <- tbl_graph(nodes = Agg_2030_Nodes2,\n                       edges = Agg_2030_Edges2,\n                       directed = TRUE) \n\n# 300000-390000\nGraph2030_3 <- tbl_graph(nodes = Agg_2030_Nodes3,\n                       edges = Agg_2030_Edges3,\n                       directed = TRUE) \n\n\n\n\n\n\nA Glimpse into the Code\n# 160300-160599\nGraph2031_1 <- tbl_graph(nodes = Agg_2031_Nodes1,\n                       edges = Agg_2031_Edges1,\n                       directed = TRUE) \n\n\n# 230100, 253099\nGraph2031_2 <- tbl_graph(nodes = Agg_2031_Nodes2,\n                       edges = Agg_2031_Edges2,\n                       directed = TRUE) \n\n# 300000-390000\nGraph2031_3 <- tbl_graph(nodes = Agg_2031_Nodes3,\n                       edges = Agg_2031_Edges3,\n                       directed = TRUE) \n\n\n\n\n\n\nA Glimpse into the Code\n# 160300-160599\nGraph2032_1 <- tbl_graph(nodes = Agg_2032_Nodes1,\n                       edges = Agg_2032_Edges1,\n                       directed = TRUE) \n\n\n# 230100, 253099\nGraph2032_2 <- tbl_graph(nodes = Agg_2032_Nodes2,\n                       edges = Agg_2032_Edges2,\n                       directed = TRUE) \n\n# 300000-390000\nGraph2032_3 <- tbl_graph(nodes = Agg_2032_Nodes3,\n                       edges = Agg_2032_Edges3,\n                       directed = TRUE) \n\n\n\n\n\n\nA Glimpse into the Code\n# 160300-160599\nGraph2033_1 <- tbl_graph(nodes = Agg_2033_Nodes1,\n                       edges = Agg_2033_Edges1,\n                       directed = TRUE) \n\n\n# 230100, 253099\nGraph2033_2 <- tbl_graph(nodes = Agg_2033_Nodes2,\n                       edges = Agg_2033_Edges2,\n                       directed = TRUE) \n\n# 300000-390000\nGraph2033_3 <- tbl_graph(nodes = Agg_2033_Nodes3,\n                       edges = Agg_2033_Edges3,\n                       directed = TRUE) \n\n\n\n\n\n\nA Glimpse into the Code\n# 160300-160599\nGraph2034_1 <- tbl_graph(nodes = Agg_2034_Nodes1,\n                       edges = Agg_2034_Edges1,\n                       directed = TRUE) \n\n\n# 230100, 253099\nGraph2034_2 <- tbl_graph(nodes = Agg_2034_Nodes2,\n                       edges = Agg_2034_Edges2,\n                       directed = TRUE) \n\n# 300000-390000\nGraph2034_3 <- tbl_graph(nodes = Agg_2034_Nodes3,\n                       edges = Agg_2034_Edges3,\n                       directed = TRUE) \n\n\n\n\n\n\nA Glimpse into the Code\n# 160300-160599\nGraph_All1 <- tbl_graph(nodes = CombinedNodes1,\n                       edges = CombinedEdges1,\n                       directed = TRUE) \n\n\n# 230100, 253099\nGraph_All2 <- tbl_graph(nodes = CombinedNodes2,\n                       edges = CombinedEdges2,\n                       directed = TRUE) \n\n# 300000-390000\nGraph_All3 <- tbl_graph(nodes = CombinedNodes3,\n                       edges = CombinedEdges3,\n                       directed = TRUE) \n\n\n\n\n\n\n2028202920302031203220332034All\n\n\n\n160300-160599230100, 253099\n\n\n\n\nA Glimpse into the Code\nGraph2028_1\n\n\n# A tbl_graph: 1507 nodes and 2396 edges\n#\n# A directed acyclic multigraph with 112 components\n#\n# A tibble: 1,507 × 1\n  id                         \n  <chr>                      \n1 1 Ltd. Liability Co        \n2 1 Ltd. Liability Co Cargo  \n3 2 Limited Liability Company\n4 3 Seabass Sp Logistics     \n5 4 GmbH & Co. KG Logistics  \n6 4 S.A. de C.V. Coral Reef  \n# ℹ 1,501 more rows\n#\n# A tibble: 2,396 × 5\n   from    to hscode  Year weights\n  <int> <int>  <int> <dbl>   <int>\n1     1   930 160510  2028       4\n2     2   931 160510  2028       2\n3     2   932 160521  2028       4\n# ℹ 2,393 more rows\n\n\nThe dataframe ‘Graph2028_1’ has 1507 nodes and 2396 edges. It is a directed graph with 112 components.\n\n\n\n\nA Glimpse into the Code\nGraph2028_2\n\n\n# A tbl_graph: 309 nodes and 274 edges\n#\n# A directed acyclic multigraph with 58 components\n#\n# A tibble: 309 × 1\n  id                                                \n  <chr>                                             \n1 Adriatic Squid Sagl -                             \n2 Agua Limited Liability Company Transit            \n3 Ancla Azul Limited Liability Company              \n4 Ancla del Este SE                                 \n5 Andhra Pradesh   Limited Liability Company Tilapia\n6 Aqua Ventures Marine life ОАО Export              \n# ℹ 303 more rows\n#\n# A tibble: 274 × 5\n   from    to hscode  Year weights\n  <int> <int>  <int> <dbl>   <int>\n1     1   137 250700  2028       2\n2     2   138 230910  2028       2\n3     3   139 230120  2028       3\n# ℹ 271 more rows\n\n\nThe dataframe ‘Graph2028_2’ has 309 nodes and 274 edges. It is a directed graph with 58 components. ### 300000-390000\n\n\nA Glimpse into the Code\nGraph2028_3\n\n\n# A tbl_graph: 4081 nodes and 9908 edges\n#\n# A directed acyclic multigraph with 166 components\n#\n# A tibble: 4,081 × 1\n  id                                  \n  <chr>                               \n1 \" Direct Herring Company Transit\"   \n2 \" Direct S.A. de C.V.\"              \n3 \" Direct Shark Oyj Marine sanctuary\"\n4 \"-59\"                               \n5 \"1 AS Marine sanctuary\"             \n6 \"1 Ltd. Liability Co Cargo\"         \n# ℹ 4,075 more rows\n#\n# A tibble: 9,908 × 5\n   from    to hscode  Year weights\n  <int> <int>  <int> <dbl>   <int>\n1     1  2593 304710  2028       2\n2     1  2593 306170  2028       5\n3     1  2594 306170  2028       3\n# ℹ 9,905 more rows\n\n\nThe dataframe ‘Graph2028_1’ has 4081 nodes and 9908 edges. It is a directed graph with 166 components.\n\n\n\n\n\n\n160300-160599230100, 253099300000-390000\n\n\n\n\nA Glimpse into the Code\nGraph2029_1\n\n\n# A tbl_graph: 1617 nodes and 2691 edges\n#\n# A directed multigraph with 117 components\n#\n# A tibble: 1,617 × 1\n  id                                          \n  <chr>                                       \n1 \" Direct Limited Liability Company Shipping\"\n2 \" Direct Shark Oyj Marine sanctuary\"        \n3 \"-54\"                                       \n4 \"2 Ltd. Liability Co\"                       \n5 \"3 Logistics Tom yum\"                       \n6 \"4 GmbH & Co. KG Logistics\"                 \n# ℹ 1,611 more rows\n#\n# A tibble: 2,691 × 5\n   from    to hscode  Year weights\n  <int> <int>  <int> <dbl>   <int>\n1     1   927 160414  2029       2\n2     2    62 160414  2029       2\n3     2   979 160414  2029       6\n# ℹ 2,688 more rows\n\n\n\n\n\n\nA Glimpse into the Code\nGraph2029_2\n\n\n# A tbl_graph: 317 nodes and 315 edges\n#\n# A directed acyclic multigraph with 50 components\n#\n# A tibble: 317 × 1\n  id                                                  \n  <chr>                                               \n1 \" Direct Shark Oyj Marine sanctuary\"                \n2 \"5 Seagull A/S Marine ecology\"                      \n3 \"Amerigo S.A. de C.V.\"                              \n4 \"Ancla Azul Limited Liability Company\"              \n5 \"Ancla del Este SE\"                                 \n6 \"Andhra Pradesh   Limited Liability Company Tilapia\"\n# ℹ 311 more rows\n#\n# A tibble: 315 × 5\n   from    to hscode  Year weights\n  <int> <int>  <int> <dbl>   <int>\n1     1   142 230910  2029       2\n2     2    26 230400  2029       3\n3     2    26 230990  2029       2\n# ℹ 312 more rows\n\n\n\n\n\n\nA Glimpse into the Code\nGraph2029_3\n\n\n# A tbl_graph: 4098 nodes and 10373 edges\n#\n# A directed acyclic multigraph with 139 components\n#\n# A tibble: 4,098 × 1\n  id                               \n  <chr>                            \n1 \" Direct Herring Company Transit\"\n2 \"-15\"                            \n3 \"-46\"                            \n4 \"-49\"                            \n5 \"1 AS Marine sanctuary\"          \n6 \"1 Ltd. Liability Co Cargo\"      \n# ℹ 4,092 more rows\n#\n# A tibble: 10,373 × 5\n   from    to hscode  Year weights\n  <int> <int>  <int> <dbl>   <int>\n1     1  2582 307590  2029       2\n2     1  2583 306170  2029       2\n3     1  2584 307590  2029       2\n# ℹ 10,370 more rows\n\n\n\n\n\n\n\n\n160300-160599230100, 253099300000-390000\n\n\n\n\nA Glimpse into the Code\nGraph2030_1\n\n\n# A tbl_graph: 1558 nodes and 2566 edges\n#\n# A directed acyclic multigraph with 97 components\n#\n# A tibble: 1,558 × 1\n  id                                          \n  <chr>                                       \n1 \" Direct Limited Liability Company Shipping\"\n2 \"1 Limited Liability Company Transport\"     \n3 \"1 Oyj Marine conservation\"                 \n4 \"3 Logistics Tom yum\"                       \n5 \"4 Limited Liability Company Marine ecology\"\n6 \"4 S.A. de C.V. Coral Reef\"                 \n# ℹ 1,552 more rows\n#\n# A tibble: 2,566 × 5\n   from    to hscode  Year weights\n  <int> <int>  <int> <dbl>   <int>\n1     1   974 160414  2030       3\n2     2   792 160414  2030      12\n3     2   975 160414  2030       2\n# ℹ 2,563 more rows\n\n\n\n\n\n\nA Glimpse into the Code\nGraph2030_2\n\n\n# A tbl_graph: 364 nodes and 348 edges\n#\n# A directed acyclic multigraph with 69 components\n#\n# A tibble: 364 × 1\n  id                                        \n  <chr>                                     \n1 1 Ltd. Liability Co                       \n2 4 Limited Liability Company Marine ecology\n3 5 Seagull A/S Marine ecology              \n4 Amerigo S.A. de C.V.                      \n5 Ancla Azul Limited Liability Company      \n6 Ancla Marina AG Marine conservation       \n# ℹ 358 more rows\n#\n# A tibble: 348 × 5\n   from    to hscode  Year weights\n  <int> <int>  <int> <dbl>   <int>\n1     1   165 252321  2030       2\n2     2   166 250100  2030       2\n3     3    34 230400  2030       6\n# ℹ 345 more rows\n\n\n\n\n\n\nA Glimpse into the Code\nGraph2030_3\n\n\n# A tbl_graph: 4143 nodes and 10109 edges\n#\n# A directed multigraph with 137 components\n#\n# A tibble: 4,143 × 1\n  id                                          \n  <chr>                                       \n1 \" Direct Herring Company Transit\"           \n2 \" Direct Limited Liability Company Shipping\"\n3 \" Direct S.A. de C.V.\"                      \n4 \"1 AS Marine sanctuary\"                     \n5 \"1 Ltd. Liability Co Cargo\"                 \n6 \"2 Limited Liability Company\"               \n# ℹ 4,137 more rows\n#\n# A tibble: 10,109 × 5\n   from    to hscode  Year weights\n  <int> <int>  <int> <dbl>   <int>\n1     1  2604 307590  2030       3\n2     1  2605 307590  2030       2\n3     1   747 306170  2030       2\n# ℹ 10,106 more rows\n\n\n\n\n\n\n\n\n160300-160599230100, 253099300000-390000\n\n\n\n\nA Glimpse into the Code\nGraph2031_1\n\n\n# A tbl_graph: 1536 nodes and 2498 edges\n#\n# A directed acyclic multigraph with 94 components\n#\n# A tibble: 1,536 × 1\n  id                                   \n  <chr>                                \n1 1 Limited Liability Company Transport\n2 2 Ltd. Liability Co                  \n3 4 S.A. de C.V.                       \n4 4 S.A. de C.V. Coral Reef            \n5 6 Chart Ges.m.b.H. Export            \n6 9 Marine biology Ltd Family          \n# ℹ 1,530 more rows\n#\n# A tibble: 2,498 × 5\n   from    to hscode  Year weights\n  <int> <int>  <int> <dbl>   <int>\n1     1   954 160414  2031       2\n2     1   791 160414  2031      21\n3     2   955 160510  2031       6\n# ℹ 2,495 more rows\n\n\n\n\n\n\nA Glimpse into the Code\nGraph2031_2\n\n\n# A tbl_graph: 330 nodes and 314 edges\n#\n# A directed acyclic multigraph with 64 components\n#\n# A tibble: 330 × 1\n  id                                     \n  <chr>                                  \n1 \"5 Seagull A/S Marine ecology\"         \n2 \"Adriatic Catch Bonito Ltd Consultants\"\n3 \"Adriatic Tuna Corp Navigation\"        \n4 \"Adriatic Tuna LC Carriers\"            \n5 \"Ancla Azul Limited Liability Company\" \n6 \"Ancla del Este Sp Fish \"              \n# ℹ 324 more rows\n#\n# A tibble: 314 × 5\n   from    to hscode  Year weights\n  <int> <int>  <int> <dbl>   <int>\n1     1    28 230400  2031      30\n2     1    28 230990  2031       3\n3     2    32 230910  2031       2\n# ℹ 311 more rows\n\n\n\n\n\n\nA Glimpse into the Code\nGraph2031_3\n\n\n# A tbl_graph: 4027 nodes and 10033 edges\n#\n# A directed acyclic multigraph with 157 components\n#\n# A tibble: 4,027 × 1\n  id                                          \n  <chr>                                       \n1 \" Direct Herring Company Transit\"           \n2 \" Direct Limited Liability Company Shipping\"\n3 \" Direct S.A. de C.V.\"                      \n4 \" Direct Shark Oyj Marine sanctuary\"        \n5 \"1 AS Marine sanctuary\"                     \n6 \"1 Ltd. Liability Co Cargo\"                 \n# ℹ 4,021 more rows\n#\n# A tibble: 10,033 × 5\n   from    to hscode  Year weights\n  <int> <int>  <int> <dbl>   <int>\n1     1  2613 307590  2031       2\n2     1  2614 307590  2031       2\n3     1   731 306170  2031      12\n# ℹ 10,030 more rows\n\n\n\n\n\n\n\n\n160300-160599230100, 253099300000-390000\n\n\n\n\nA Glimpse into the Code\nGraph2032_1\n\n\n# A tbl_graph: 1610 nodes and 2628 edges\n#\n# A directed acyclic multigraph with 114 components\n#\n# A tibble: 1,610 × 1\n  id                                     \n  <chr>                                  \n1 \" Direct Herring Company Transit\"      \n2 \"1 Limited Liability Company Transport\"\n3 \"1 Ltd. Liability Co\"                  \n4 \"2 S.A. de C.V.\"                       \n5 \"2 Wharf S.A. de C.V. Delivery\"        \n6 \"3 Starfish CJSC Transport\"            \n# ℹ 1,604 more rows\n#\n# A tibble: 2,628 × 5\n   from    to hscode  Year weights\n  <int> <int>  <int> <dbl>   <int>\n1     1  1018 160529  2032       4\n2     2   832 160414  2032      16\n3     3  1019 160414  2032       2\n# ℹ 2,625 more rows\n\n\n\n\n\n\nA Glimpse into the Code\nGraph2032_2\n\n\n# A tbl_graph: 323 nodes and 293 edges\n#\n# A directed acyclic multigraph with 64 components\n#\n# A tibble: 323 × 1\n  id                                   \n  <chr>                                \n1 5 Seagull A/S Marine ecology         \n2 Adriatic Catch Bonito Ltd Consultants\n3 Adriatic Tuna Corp Navigation        \n4 Amerigo S.A. de C.V.                 \n5 Ancla Azul Limited Liability Company \n6 Arena del Mar AB                     \n# ℹ 317 more rows\n#\n# A tibble: 293 × 5\n   from    to hscode  Year weights\n  <int> <int>  <int> <dbl>   <int>\n1     1    26 230400  2032      83\n2     1    26 230990  2032       3\n3     2   151 230910  2032       3\n# ℹ 290 more rows\n\n\n\n\n\n\nA Glimpse into the Code\nGraph2032_3\n\n\n# A tbl_graph: 4026 nodes and 9870 edges\n#\n# A directed acyclic multigraph with 146 components\n#\n# A tibble: 4,026 × 1\n  id                                          \n  <chr>                                       \n1 \" Direct Herring Company Transit\"           \n2 \" Direct Limited Liability Company Shipping\"\n3 \" Direct S.A. de C.V.\"                      \n4 \"-15\"                                       \n5 \"-28\"                                       \n6 \"-41\"                                       \n# ℹ 4,020 more rows\n#\n# A tibble: 9,870 × 5\n   from    to hscode  Year weights\n  <int> <int>  <int> <dbl>   <int>\n1     1  2605 306170  2032       2\n2     2  2606 330430  2032       3\n3     3  2607 330730  2032       2\n# ℹ 9,867 more rows\n\n\n\n\n\n\n\n\n160300-160599230100, 253099300000-390000\n\n\n\n\nA Glimpse into the Code\nGraph2033_1\n\n\n# A tbl_graph: 1542 nodes and 2578 edges\n#\n# A directed acyclic multigraph with 102 components\n#\n# A tibble: 1,542 × 1\n  id                                   \n  <chr>                                \n1 1 Limited Liability Company Transport\n2 1 Ltd. Liability Co                  \n3 2 Wharf S.A. de C.V. Delivery        \n4 7 Ltd. Liability Co Express          \n5 9 Limited Liability Company Brothers \n6 9 Marine biology Ltd Family          \n# ℹ 1,536 more rows\n#\n# A tibble: 2,578 × 5\n   from    to hscode  Year weights\n  <int> <int>  <int> <dbl>   <int>\n1     1   783 160414  2033      54\n2     2   959 160414  2033       2\n3     3   960 160414  2033       8\n# ℹ 2,575 more rows\n\n\n\n\n\n\nA Glimpse into the Code\nGraph2033_2\n\n\n# A tbl_graph: 308 nodes and 292 edges\n#\n# A directed acyclic multigraph with 66 components\n#\n# A tibble: 308 × 1\n  id                                                  \n  <chr>                                               \n1 \"5 Seagull A/S Marine ecology\"                      \n2 \"Amerigo S.A. de C.V.\"                              \n3 \"Ancla Azul Limited Liability Company\"              \n4 \"Ancla del Este Sp Fish \"                           \n5 \"Andhra Pradesh   Limited Liability Company Tilapia\"\n6 \"Angrapa Compass AB Solutions\"                      \n# ℹ 302 more rows\n#\n# A tibble: 292 × 5\n   from    to hscode  Year weights\n  <int> <int>  <int> <dbl>   <int>\n1     1    25 230400  2033      10\n2     2   146 252620  2033       2\n3     2   147 230320  2033       7\n# ℹ 289 more rows\n\n\n\n\n\n\nA Glimpse into the Code\nGraph2033_3\n\n\n# A tbl_graph: 4035 nodes and 10497 edges\n#\n# A directed acyclic multigraph with 149 components\n#\n# A tibble: 4,035 × 1\n  id                               \n  <chr>                            \n1 \" Direct Herring Company Transit\"\n2 \" Direct LLC Marine biology\"     \n3 \" Direct S.A. de C.V.\"           \n4 \"-15\"                            \n5 \"1 AS Marine sanctuary\"          \n6 \"1 Ltd. Liability Co Cargo\"      \n# ℹ 4,029 more rows\n#\n# A tibble: 10,497 × 5\n   from    to hscode  Year weights\n  <int> <int>  <int> <dbl>   <int>\n1     1  2585 306170  2033       2\n2     2  1170 303630  2033       2\n3     3  2586 330730  2033      10\n# ℹ 10,494 more rows\n\n\n\n\n\n\n\n\n160300-160599230100, 253099300000-390000\n\n\n\n\nA Glimpse into the Code\nGraph2034_1\n\n\n# A tbl_graph: 1521 nodes and 2580 edges\n#\n# A directed acyclic multigraph with 107 components\n#\n# A tibble: 1,521 × 1\n  id                                   \n  <chr>                                \n1 -214                                 \n2 -4                                   \n3 1 Limited Liability Company Transport\n4 2 Wharf S.A. de C.V. Delivery        \n5 7 Ltd. Liability Co Express          \n6 9 Limited Liability Company Brothers \n# ℹ 1,515 more rows\n#\n# A tibble: 2,580 × 5\n   from    to hscode  Year weights\n  <int> <int>  <int> <dbl>   <int>\n1     1   986 160419  2034       2\n2     2   987 160510  2034       3\n3     3   822 160414  2034      28\n# ℹ 2,577 more rows\n\n\n\n\n\n\nA Glimpse into the Code\nGraph2034_2\n\n\n# A tbl_graph: 335 nodes and 345 edges\n#\n# A directed acyclic multigraph with 48 components\n#\n# A tibble: 335 × 1\n  id                                                \n  <chr>                                             \n1 8 Tidal Company Line                              \n2 Ancla Azul Limited Liability Company              \n3 Andhra Pradesh   Limited Liability Company Tilapia\n4 Angrapa Compass AB Solutions                      \n5 Angrapa Ltd. Liability Co Export                  \n6 Aqua Anchor Sagl Marine sanctuary                 \n# ℹ 329 more rows\n#\n# A tibble: 345 × 5\n   from    to hscode  Year weights\n  <int> <int>  <int> <dbl>   <int>\n1     1   152 230990  2034       2\n2     2   153 230990  2034       2\n3     3   154 252520  2034       2\n# ℹ 342 more rows\n\n\n\n\n\n\nA Glimpse into the Code\nGraph2034_3\n\n\n# A tbl_graph: 4051 nodes and 10011 edges\n#\n# A directed acyclic multigraph with 176 components\n#\n# A tibble: 4,051 × 1\n  id                                          \n  <chr>                                       \n1 \" Direct Limited Liability Company Shipping\"\n2 \" Direct S.A. de C.V.\"                      \n3 \"-1515\"                                     \n4 \"1 AS Marine sanctuary\"                     \n5 \"1 Limited Liability Company\"               \n6 \"1 Ltd. Liability Co Cargo\"                 \n# ℹ 4,045 more rows\n#\n# A tibble: 10,011 × 5\n   from    to hscode  Year weights\n  <int> <int>  <int> <dbl>   <int>\n1     1  2602 330499  2034       4\n2     2  2513 330730  2034       3\n3     3  2603 301110  2034       4\n# ℹ 10,008 more rows\n\n\n\n\n\n\n\n\n160300-160599230100, 253099300000-390000\n\n\n\n\nA Glimpse into the Code\nGraph_All1\n\n\n# A tbl_graph: 10891 nodes and 17937 edges\n#\n# A directed multigraph with 6568 components\n#\n# A tibble: 10,891 × 1\n  id                         \n  <chr>                      \n1 1 Ltd. Liability Co        \n2 1 Ltd. Liability Co Cargo  \n3 2 Limited Liability Company\n4 3 Seabass Sp Logistics     \n5 4 GmbH & Co. KG Logistics  \n6 4 S.A. de C.V. Coral Reef  \n# ℹ 10,885 more rows\n#\n# A tibble: 17,937 × 5\n   from    to hscode  Year weights\n  <int> <int>  <int> <dbl>   <int>\n1     1   930 160510  2028       4\n2     2   931 160510  2028       2\n3     2   932 160521  2028       4\n# ℹ 17,934 more rows\n\n\n\n\n\n\nA Glimpse into the Code\nGraph_All2\n\n\n# A tbl_graph: 2286 nodes and 2181 edges\n#\n# A directed multigraph with 1378 components\n#\n# A tibble: 2,286 × 1\n  id                                                \n  <chr>                                             \n1 Adriatic Squid Sagl -                             \n2 Agua Limited Liability Company Transit            \n3 Ancla Azul Limited Liability Company              \n4 Ancla del Este SE                                 \n5 Andhra Pradesh   Limited Liability Company Tilapia\n6 Aqua Ventures Marine life ОАО Export              \n# ℹ 2,280 more rows\n#\n# A tibble: 2,181 × 5\n   from    to hscode  Year weights\n  <int> <int>  <int> <dbl>   <int>\n1     1   137 250700  2028       2\n2     2   138 230910  2028       2\n3     3   139 230120  2028       3\n# ℹ 2,178 more rows\n\n\n\n\n\n\nA Glimpse into the Code\nGraph_All2\n\n\n# A tbl_graph: 2286 nodes and 2181 edges\n#\n# A directed multigraph with 1378 components\n#\n# A tibble: 2,286 × 1\n  id                                                \n  <chr>                                             \n1 Adriatic Squid Sagl -                             \n2 Agua Limited Liability Company Transit            \n3 Ancla Azul Limited Liability Company              \n4 Ancla del Este SE                                 \n5 Andhra Pradesh   Limited Liability Company Tilapia\n6 Aqua Ventures Marine life ОАО Export              \n# ℹ 2,280 more rows\n#\n# A tibble: 2,181 × 5\n   from    to hscode  Year weights\n  <int> <int>  <int> <dbl>   <int>\n1     1   137 250700  2028       2\n2     2   138 230910  2028       2\n3     3   139 230120  2028       3\n# ℹ 2,178 more rows"
  },
  {
    "objectID": "Takehome Exercise/Takehome Ex 2/Takehome2.html#visualization",
    "href": "Takehome Exercise/Takehome Ex 2/Takehome2.html#visualization",
    "title": " ¶ TakeHome-2 ¶ ",
    "section": "2. Visualization",
    "text": "2. Visualization\n\n2.1 Relationship Between Company_Shipment and Year\nEvaluating the yearly shipment weights of the top 100 companies is crucial for discerning shipping patterns. We will probe into the average weight per kilogram each year and study the interplay among the source, weight, and year. This exploration will be facilitated through the utilization of heatmaps and network graphs. Such an analysis will allow us to gain deeper insights into the shipping trends and dynamics.\n\nEdgeNode\n\n\n\n\nA Glimpse into the Code\nTop100_Edge <- MC2_Edges_Aggregated %>% \n  arrange(desc(weights)) %>%\n  head(100)\nkable(head(Top100_Edge))\n\n\n\n\n\n\n\n\n\n\n\n\nsource\ntarget\nhscode\nYear\nweights\n\n\n\n\nnián yú Ltd. Corporation\nNiger Bend Limited Liability Company Marine ecology\n304620\n2031\n3471\n\n\nnián yú Ltd. Corporation\nNiger Bend Limited Liability Company Marine ecology\n304620\n2030\n2979\n\n\nnián yú Ltd. Corporation\nCosta de la Felicidad Shipping\n304620\n2029\n2797\n\n\nSea Breezes S.A. de C.V. Freight\nCaracola del Sol Services\n304620\n2031\n2708\n\n\nnián yú Ltd. Corporation\nCosta de la Felicidad Shipping\n304620\n2028\n2473\n\n\nnián yú Ltd. Corporation\nNiger Bend Limited Liability Company Marine ecology\n304620\n2032\n2215\n\n\n\n\n\n\n\n\n\nA Glimpse into the Code\nid1 <- Top100_Edge %>%\n  select(source) %>%\n  rename(id = source)\nid2 <- Top100_Edge %>%\n  select(target) %>%\n  rename(id = target)\nTop100_Node <- rbind(id1, id2) %>%\n  distinct()\n\n\n\n\n\n\n\nA Glimpse into the Code\nshipment <- Top100_Edge %>%\n         select(Year, weights) %>%\n         group_by(Year) %>%\n         summarise(count=n(),weightkg = sum(weights),kg_per_ship=weightkg/count)\n\np1 <- ggplot(data=shipment, \n            aes(x = Year,\n                y = kg_per_ship)) +\n  geom_bar(stat = \"identity\") +\n  xlab(\"Year\") +\n  ylab(\"Average per Kg\")\n\nggplotly(p1)\n\n\n\n\n\n\nA Glimpse into the Code\n# HeatMap \nheatmap_data <- Top100_Edge %>%\n  group_by(source, Year) %>%\n  summarise(count = n(), .groups = 'drop')\n\nggplot(heatmap_data, aes(x = Year, y = source, fill = count)) +\n  geom_tile() +\n  scale_fill_gradient(low = \"white\", high = \"blue\") +\n  labs(x = \"Year\", y = \"Source\", fill = \"Count of Weights\", \n       title = \"Heatmap of Weights Count by Source and Year\")\n\n\n\n\n\nA Glimpse into the Code\n# Network Graph\n\nGraph_Top100 <- tbl_graph(nodes = Top100_Node, edges = Top100_Edge, directed = TRUE)\nggraph(Graph_Top100, layout = \"fr\") + \n  geom_edge_fan(aes(width = weights, colour = factor(Year)), \n                 alpha=0.7, arrow = arrow(length = unit(5, 'mm'))) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(size = 3) + \n  theme_graph() +\n  geom_node_label(aes(label = id), size = 5.5, repel = TRUE, nudge_y = 0.1) +\n  \n  labs(\n    title = \"Network of Top 100 Companies by Weight\")\n\n\n\n\n\nIn this analysis, we visualized a network graph using the MC2 dataset where nodes represent different sources/targets, and the edges between them represent the shipment weights, with the edge thickness indicating the magnitude of weights. The color of the edges denotes different years.\nOur network graph, particularly focusing on the weights, shows the flow of shipments from various sources to targets. The top three sources to targets with the highest shipment weights are as follows:\nNián yú Ltd. Corporation to Niger Bend Limited Liability Company Marine ecology with shipment weights of 3471 and 2979 in years 2031 and 2030, respectively.\nNián yú Ltd. Corporation to Costa de la Felicidad Shipping with shipment weights of 2797 and 2473 in years 2029 and 2028, respectively.\nSea Breezes S.A. de C.V. Freight to Caracola del Sol Services with a shipment weight of 2708 in the year 2031.\nThese insights are critical in understanding the dynamics of shipment weights from different sources to targets over the years.\n\n\n2.2 Degree Centrality (In, Out and Total)\n\n\n\n\n\n\nNote\n\n\n\n\n\n    **In-Degree Centrality:** For each node representing a shipping company , the in-degree centrality measures the number of incoming connections from other nodes. If this network represents the transfer of illegal goods (like illegally caught fish), a high in-degree centrality could suggest that a company is a major receiver of illegal goods. For example, a shipping company with high in-degree centrality might be a significant destination for illegal fish products.\n\n    **Out-Degree Centrality:**  For each node, the out-degree centrality measures the number of outgoing connections to other nodes. In the illegal fishing, a high out-degree centrality could indicate that a company or vessel is a major distributor or source of illegal goods. For instance, a fishing vessel with high out-degree centrality could be a significant source of illegal fishing activities, spreading its illicit catch to many different companies or locations.\n\nTotal Degree Centrality (All Degree Centrality): This measures the total number of connections for each node, both incoming and outgoing. A node with high total degree centrality could be involved in both receiving and distributing illegal goods. This indicate that a shipping company or a fishing vessel plays a central role in the illegal fishing network, both obtaining and dispatching illegal catch.\n\n\n\n\n2028202920302031203220332034ALL\n\n\n\n160300-160599230100, 253099300000-390000\n\n\n\n\nA Glimpse into the Code\n# Calculate degree centrality for nodes\nDC_2028_1_in <- degree(Graph2028_1, mode = \"in\")\nDC_2028_1_out <- degree(Graph2028_1, mode = \"out\")\nDC_2028_1_all <- degree(Graph2028_1, mode = \"all\")\n\n# Add degree centrality to the nodes data of the graph\nGraph2028_1$nodes$DC_2028_1_in <- DC_2028_1_in\nGraph2028_1$nodes$DC_2028_1_out <- DC_2028_1_out\nGraph2028_1$nodes$DC_2028_1_all <- DC_2028_1_all\n\n# Creating a graph plot with node size proportional to degree centrality\nplot_list <- list()\nplot_list[[\"In Degree Centrality\"]] <- ggraph(Graph2028_1, layout = \"fr\") + \n  geom_edge_link(alpha = 0.5) +\n  geom_node_point(aes(size = DC_2028_1_in, color = DC_2028_1_in)) +\n  scale_color_gradient(low = \"blue\", high = \"red\") +\n  theme_graph() +\n  labs(title = \"In Degree Centrality Network for 2028\")\n\nplot_list[[\"Out Degree Centrality\"]] <- ggraph(Graph2028_1, layout = \"fr\") + \n  geom_edge_link(alpha = 0.5) +\n  geom_node_point(aes(size = DC_2028_1_out, color = DC_2028_1_out)) +\n  scale_color_gradient(low = \"blue\", high = \"red\") +\n  theme_graph() +\n  labs(title = \"Out Degree Centrality Network for 2028\")\n\nplot_list[[\"All Degree Centrality\"]] <- ggraph(Graph2028_1, layout = \"fr\") + \n  geom_edge_link(alpha = 0.5) +\n  geom_node_point(aes(size = DC_2028_1_all, color = DC_2028_1_all)) +\n  scale_color_gradient(low = \"blue\", high = \"red\") +\n  theme_graph() +\n  labs(title = \"All Degree Centrality Network for 2028\")\n\nplot_list\n\n\n$`In Degree Centrality`\n\n\n\n\n\n\n$`Out Degree Centrality`\n\n\n\n\n\n\n$`All Degree Centrality`\n\n\n\n\n\n\n\n\n\n\n\nTip\n\n\n\n\n\nHere’s a summary of what each section of the code does:\n\nCalculate Degree Centrality: The degree() function from the igraph package calculates degree centrality for all nodes in the graph. The mode argument specifies whether to calculate in-degree centrality (mode = “in”), out-degree centrality (mode = “out”), or total degree centrality (mode = “all”).\nAdd Degree Centrality to Node Data: The calculated degree centrality values are added to the node attribute data of Graph2028_1.\nCreate Graph Plots: The ggraph package is used to create plots of the graph, with node size proportional to degree centrality. The geom_edge_link() function adds the edges (connections) between nodes to the plot. The geom_node_point() function adds the nodes to the plot, with the size and color of each node determined by its degree centrality. The scale_color_gradient() function sets the color gradient for the nodes based on their degree centrality values, with lower values in blue and higher values in red. The labs() function sets the title for each plot.\nCreate List of Plots: A list of the three plots is created for easy access and comparison.\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\n\n\nThe type of goods traded is designated by the Harmonized System (HS) codes, which for the scope of this analysis, falls within the range 160300-160599. This HS code range corresponds to various kinds of prepared or preserved fish, crustaceans, and mollusks.\nIn this analysis, we leverage Degree Centrality, a key measure in network analysis, to identify the most significant nodes (companies) in the network and patterns of transactions in the fishing industry. Degree Centrality is computed in three forms:\n\nIn-Degree Centrality: It measures the number of incoming connections to a node. In this Analysis, a higher In-Degree Centrality indicates that a particular fishing company receives a considerable amount of prepared or preserved seafood. The visual representation uses node sizes to mirror this measure with five levels: 0, 50,100,150,200, where a larger size signifies higher In-Degree Centrality.\nOut-Degree Centrality: This quantifies the number of outgoing connections from a node. In our case, a higher Out-Degree Centrality suggests a company is a prominent sender or supplier of prepared or preserved seafood. The node sizes, varying across four levels: 0, 10,20,30, visually signify this measure, with larger sizes indicating higher Out-Degree Centrality.\nTotal Degree Centrality: This metric, the sum of In-Degree and Out-Degree, provides an overall indication of a node’s connectivity within the network, irrespective of the direction of the edge. A high Total Degree Centrality signifies a company engaged in a significant volume of transactions, both in receiving and dispatching seafood. Nodes are visually depicted with varying sizes based on their Total Degree Centrality across four levels: 50,100,150,200.\n\nIn this we calculate these three forms of Degree Centrality for each node (fishing company) for the year 2028, incorporating this information into the network. The resulting visualization aids in understanding the distribution of these centrality measures across the network.\nThe colors in the visualization represent the Degree Centrality values, shifting from blue (lower centrality) to red (higher centrality). This color-coding provides an effective way to visually identify highly connected nodes in the network, which might serve as critical transaction hubs within the network.\n\n\n\n\n\n\n\nA Glimpse into the Code\n# Calculate degree centrality for nodes\nDC_2028_2_in <- degree(Graph2028_2, mode = \"in\")\nDC_2028_2_out <- degree(Graph2028_2, mode = \"out\")\nDC_2028_2_all <- degree(Graph2028_2, mode = \"all\")\n\n# Add degree centrality to the nodes data of the graph\nGraph2028_2$nodes$DC_2028_2_in <- DC_2028_2_in\nGraph2028_2$nodes$DC_2028_2_out <- DC_2028_2_out\nGraph2028_2$nodes$DC_2028_2_all <- DC_2028_2_all\n\n# Creating a graph plot with node size proportional to degree centrality\nplot_list <- list()\nplot_list[[\"In Degree Centrality\"]] <- ggraph(Graph2028_2, layout = \"fr\") + \n  geom_edge_link(alpha = 0.5) +\n  geom_node_point(aes(size = DC_2028_2_in, color = DC_2028_2_in)) +\n  scale_color_gradient(low = \"blue\", high = \"red\") +\n  theme_graph() +\n  labs(title = \"In Degree Centrality Network for 2028\")\n\nplot_list[[\"Out Degree Centrality\"]] <- ggraph(Graph2028_2, layout = \"fr\") + \n  geom_edge_link(alpha = 0.5) +\n  geom_node_point(aes(size = DC_2028_2_out, color = DC_2028_2_out)) +\n  scale_color_gradient(low = \"blue\", high = \"red\") +\n  theme_graph() +\n  labs(title = \"Out Degree Centrality Network for 2028\")\n\nplot_list[[\"All Degree Centrality\"]] <- ggraph(Graph2028_2, layout = \"fr\") + \n  geom_edge_link(alpha = 0.5) +\n  geom_node_point(aes(size = DC_2028_2_all, color = DC_2028_2_all)) +\n  scale_color_gradient(low = \"blue\", high = \"red\") +\n  theme_graph() +\n  labs(title = \"All Degree Centrality Network for 2028\")\n\nplot_list\n\n\n$`In Degree Centrality`\n\n\n\n\n\n\n$`Out Degree Centrality`\n\n\n\n\n\n\n$`All Degree Centrality`\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\n\n\nThe edges between the nodes represent transactions involving specific goods categories, identified by Harmonized System (HS) codes 230100 and 253099 for this analysis. HS Code 230100 refers to flours, meals,fish and pellets of meat or meat offal.\nDegree Centrality is computed in three different forms:\n\nIn-Degree Centrality: Higher In-Degree Centrality indicates that a company receives substantial amounts of the specific goods. For this analysis, the node sizes in the visual representation indicate In-Degree Centrality with five different levels: 0, 5, 10, 15, 20. A larger node size signifies higher In-Degree Centrality.\nOut-Degree Centrality: Higher Out-Degree Centrality indicates that a company is a significant sender or supplier of the specific goods. Node sizes in the visual representation range over five levels: 0, 2.5, 5.0, 7.5, 10. A larger node size indicates higher Out-Degree Centrality.\nTotal Degree Centrality: It provides an overall indication of a node’s connectivity within the network, irrespective of the direction of the edge. A high Total Degree Centrality indicates a company with a significant volume of transactions, both in receiving and sending goods. Nodes sizes in the visual representation represent the Total Degree Centrality and range over four levels: 5, 10, 15, 20.\n\n\n\n\n\n\n\n\nA Glimpse into the Code\n# Calculate degree centrality for nodes\nDC_2028_3_in <- degree(Graph2028_3, mode = \"in\")\nDC_2028_3_out <- degree(Graph2028_3, mode = \"out\")\nDC_2028_3_all <- degree(Graph2028_3, mode = \"all\")\n\n# Add degree centrality to the nodes data of the graph\nGraph2028_3$nodes$DC_2028_3_in <- DC_2028_3_in\nGraph2028_3$nodes$DC_2028_3_out <- DC_2028_3_out\nGraph2028_3$nodes$DC_2028_3_all <- DC_2028_3_all\n\n# Creating a graph plot with node size proportional to degree centrality\nplot_list <- list()\nplot_list[[\"In Degree Centrality\"]] <- ggraph(Graph2028_3, layout = \"fr\") + \n  geom_edge_link(alpha = 0.5) +\n  geom_node_point(aes(size = DC_2028_3_in, color = DC_2028_3_in)) +\n  scale_color_gradient(low = \"blue\", high = \"red\") +\n  theme_graph() +\n  labs(title = \"In Degree Centrality Network for 2028\")\n\nplot_list[[\"Out Degree Centrality\"]] <- ggraph(Graph2028_3, layout = \"fr\") + \n  geom_edge_link(alpha = 0.5) +\n  geom_node_point(aes(size = DC_2028_3_out, color = DC_2028_3_out)) +\n  scale_color_gradient(low = \"blue\", high = \"red\") +\n  theme_graph() +\n  labs(title = \"Out Degree Centrality Network for 2028\")\n\nplot_list[[\"All Degree Centrality\"]] <- ggraph(Graph2028_3, layout = \"fr\") + \n  geom_edge_link(alpha = 0.3) +\n  geom_node_point(aes(size = DC_2028_3_all, color = DC_2028_3_all)) +\n  scale_color_gradient(low = \"blue\", high = \"red\") +\n  theme_graph() +\n  labs(title = \"All Degree Centrality Network for 2028\")\n\nplot_list\n\n\n$`In Degree Centrality`\n\n\n\n\n\n\n$`Out Degree Centrality`\n\n\n\n\n\n\n$`All Degree Centrality`\n\n\n\n\n\n\n\n\n\n\n\n160300-160599230100, 253099300000-390000\n\n\n\n\nA Glimpse into the Code\n# Calculate degree centrality for nodes\nDC_2029_1_in <- degree(Graph2029_1, mode = \"in\")\nDC_2029_1_out <- degree(Graph2029_1, mode = \"out\")\nDC_2029_1_all <- degree(Graph2029_1, mode = \"all\")\n\n# Add degree centrality to the nodes data of the graph\nGraph2029_1$nodes$DC_2029_1_in <- DC_2029_1_in\nGraph2029_1$nodes$DC_2029_1_out <- DC_2029_1_out\nGraph2029_1$nodes$DC_2029_1_all <- DC_2029_1_all\n\n\nplot_list <- list()\nplot_list[[\"In Degree Centrality\"]] <- ggraph(Graph2029_1, layout = \"fr\") + \n  geom_edge_link(alpha = 0.5) +\n  geom_node_point(aes(size = DC_2029_1_in, color = DC_2029_1_in)) +\n  scale_color_gradient(low = \"blue\", high = \"red\") +\n  theme_graph() +\n  labs(title = \"In Degree Centrality Network for 2029\")\n\nplot_list[[\"Out Degree Centrality\"]] <- ggraph(Graph2029_1, layout = \"fr\") + \n  geom_edge_link(alpha = 0.5) +\n  geom_node_point(aes(size = DC_2029_1_out, color = DC_2029_1_out)) +\n  scale_color_gradient(low = \"blue\", high = \"red\") +\n  theme_graph() +\n  labs(title = \"Out Degree Centrality Network for 2029\")\n\nplot_list[[\"All Degree Centrality\"]] <- ggraph(Graph2029_1, layout = \"fr\") + \n  geom_edge_link(alpha = 0.5) +\n  geom_node_point(aes(size = DC_2029_1_all, color = DC_2029_1_all)) +\n  scale_color_gradient(low = \"blue\", high = \"red\") +\n  theme_graph() +\n  labs(title = \"All Degree Centrality Network for 2029\")\n\nplot_list\n\n\n$`In Degree Centrality`\n\n\n\n\n\n\n$`Out Degree Centrality`\n\n\n\n\n\n\n$`All Degree Centrality`\n\n\n\n\n\n\n\n\n\nA Glimpse into the Code\n# Calculate degree centrality for nodes\nDC_2029_2_in <- degree(Graph2029_2, mode = \"in\")\nDC_2029_2_out <- degree(Graph2029_2, mode = \"out\")\nDC_2029_2_all <- degree(Graph2029_2, mode = \"all\")\n\n# Add degree centrality to the nodes data of the graph\nGraph2029_2$nodes$DC_2029_2_in <- DC_2029_2_in\nGraph2029_2$nodes$DC_2029_2_out <- DC_2029_2_out\nGraph2029_2$nodes$DC_2029_2_all <- DC_2029_2_all\n\n\nplot_list <- list()\nplot_list[[\"In Degree Centrality\"]] <- ggraph(Graph2029_2, layout = \"fr\") + \n  geom_edge_link(alpha = 0.5) +\n  geom_node_point(aes(size = DC_2029_2_in, color = DC_2029_2_in)) +\n  scale_color_gradient(low = \"blue\", high = \"red\") +\n  theme_graph() +\n  labs(title = \"In Degree Centrality Network for 2029\")\n\nplot_list[[\"Out Degree Centrality\"]] <- ggraph(Graph2029_2, layout = \"fr\") + \n  geom_edge_link(alpha = 0.5) +\n  geom_node_point(aes(size = DC_2029_2_out, color = DC_2029_2_out)) +\n  scale_color_gradient(low = \"blue\", high = \"red\") +\n  theme_graph() +\n  labs(title = \"Out Degree Centrality Network for 2029\")\n\nplot_list[[\"All Degree Centrality\"]] <- ggraph(Graph2029_2, layout = \"fr\") + \n  geom_edge_link(alpha = 0.5) +\n  geom_node_point(aes(size = DC_2029_2_all, color = DC_2029_2_all)) +\n  scale_color_gradient(low = \"blue\", high = \"red\") +\n  theme_graph() +\n  labs(title = \"All Degree Centrality Network for 2029\")\n\nplot_list\n\n\n$`In Degree Centrality`\n\n\n\n\n\n\n$`Out Degree Centrality`\n\n\n\n\n\n\n$`All Degree Centrality`\n\n\n\n\n\n\n\n\n\nA Glimpse into the Code\n# Calculate degree centrality for nodes\nDC_2029_3_in <- degree(Graph2029_3, mode = \"in\")\nDC_2029_3_out <- degree(Graph2029_3, mode = \"out\")\nDC_2029_3_all <- degree(Graph2029_3, mode = \"all\")\n\n# Add degree centrality to the nodes data of the graph\nGraph2029_3$nodes$DC_2029_3_in <- DC_2029_3_in\nGraph2029_3$nodes$DC_2029_3_out <- DC_2029_3_out\nGraph2029_3$nodes$DC_2029_3_all <- DC_2029_3_all\n\n\nplot_list <- list()\nplot_list[[\"In Degree Centrality\"]] <- ggraph(Graph2029_3, layout = \"fr\") + \n  geom_edge_link(alpha = 0.5) +\n  geom_node_point(aes(size = DC_2029_3_in, color = DC_2029_3_in)) +\n  scale_color_gradient(low = \"blue\", high = \"red\") +\n  theme_graph() +\n  labs(title = \"In Degree Centrality Network for 2029\")\n\nplot_list[[\"Out Degree Centrality\"]] <- ggraph(Graph2029_3, layout = \"fr\") + \n  geom_edge_link(alpha = 0.5) +\n  geom_node_point(aes(size = DC_2029_3_out, color = DC_2029_3_out)) +\n  scale_color_gradient(low = \"blue\", high = \"red\") +\n  theme_graph() +\n  labs(title = \"Out Degree Centrality Network for 2029\")\n\nplot_list[[\"All Degree Centrality\"]] <- ggraph(Graph2029_3, layout = \"fr\") + \n  geom_edge_link(alpha = 0.5) +\n  geom_node_point(aes(size = DC_2029_3_all, color = DC_2029_3_all)) +\n  scale_color_gradient(low = \"blue\", high = \"red\") +\n  theme_graph() +\n  labs(title = \"All Degree Centrality Network for 2029\")\n\nplot_list\n\n\n$`In Degree Centrality`\n\n\n\n\n\n\n$`Out Degree Centrality`\n\n\n\n\n\n\n$`All Degree Centrality`\n\n\n\n\n\n\n\n\n\n\n\n160300-160599230100, 253099300000-390000\n\n\n\n\nA Glimpse into the Code\n# Calculate degree centrality for nodes\nDC_2030_1_in <- degree(Graph2030_1, mode = \"in\")\nDC_2030_1_out <- degree(Graph2030_1, mode = \"out\")\nDC_2030_1_all <- degree(Graph2030_1, mode = \"all\")\n\n# Add degree centrality to the nodes data of the graph\nGraph2030_1$nodes$DC_2030_1_in <- DC_2030_1_in\nGraph2030_1$nodes$DC_2030_1_out <- DC_2030_1_out\nGraph2030_1$nodes$DC_2030_1_all <- DC_2030_1_all\n\n\nplot_list <- list()\nplot_list[[\"In Degree Centrality\"]] <- ggraph(Graph2030_1, layout = \"fr\") + \n  geom_edge_link(alpha = 0.5) +\n  geom_node_point(aes(size = DC_2030_1_in, color = DC_2030_1_in)) +\n  scale_color_gradient(low = \"blue\", high = \"red\") +\n  theme_graph() +\n  labs(title = \"In Degree Centrality Network for 2030\")\n\nplot_list[[\"Out Degree Centrality\"]] <- ggraph(Graph2030_1, layout = \"fr\") + \n  geom_edge_link(alpha = 0.5) +\n  geom_node_point(aes(size = DC_2030_1_out, color = DC_2030_1_out)) +\n  scale_color_gradient(low = \"blue\", high = \"red\") +\n  theme_graph() +\n  labs(title = \"Out Degree Centrality Network for 2030\")\n\nplot_list[[\"All Degree Centrality\"]] <- ggraph(Graph2030_1, layout = \"fr\") + \n  geom_edge_link(alpha = 0.5) +\n  geom_node_point(aes(size = DC_2030_1_all, color = DC_2030_1_all)) +\n  scale_color_gradient(low = \"blue\", high = \"red\") +\n  theme_graph() +\n  labs(title = \"All Degree Centrality Network for 2030\")\n\nplot_list\n\n\n$`In Degree Centrality`\n\n\n\n\n\n\n$`Out Degree Centrality`\n\n\n\n\n\n\n$`All Degree Centrality`\n\n\n\n\n\n\n\n\n\nA Glimpse into the Code\n# Calculate degree centrality for nodes\nDC_2030_2_in <- degree(Graph2030_2, mode = \"in\")\nDC_2030_2_out <- degree(Graph2030_2, mode = \"out\")\nDC_2030_2_all <- degree(Graph2030_2, mode = \"all\")\n\n# Add degree centrality to the nodes data of the graph\nGraph2030_2$nodes$DC_2030_2_in <- DC_2030_2_in\nGraph2030_2$nodes$DC_2030_2_out <- DC_2030_2_out\nGraph2030_2$nodes$DC_2030_2_all <- DC_2030_2_all\n\n\nplot_list <- list()\nplot_list[[\"In Degree Centrality\"]] <- ggraph(Graph2030_2, layout = \"fr\") + \n  geom_edge_link(alpha = 0.5) +\n  geom_node_point(aes(size = DC_2030_2_in, color = DC_2030_2_in)) +\n  scale_color_gradient(low = \"blue\", high = \"red\") +\n  theme_graph() +\n  labs(title = \"In Degree Centrality Network for 2030\")\n\nplot_list[[\"Out Degree Centrality\"]] <- ggraph(Graph2030_2, layout = \"fr\") + \n  geom_edge_link(alpha = 0.5) +\n  geom_node_point(aes(size = DC_2030_2_out, color = DC_2030_2_out)) +\n  scale_color_gradient(low = \"blue\", high = \"red\") +\n  theme_graph() +\n  labs(title = \"Out Degree Centrality Network for 2030\")\n\nplot_list[[\"All Degree Centrality\"]] <- ggraph(Graph2030_2, layout = \"fr\") + \n  geom_edge_link(alpha = 0.5) +\n  geom_node_point(aes(size = DC_2030_2_all, color = DC_2030_2_all)) +\n  scale_color_gradient(low = \"blue\", high = \"red\") +\n  theme_graph() +\n  labs(title = \"All Degree Centrality Network for 2030\")\n\nplot_list\n\n\n$`In Degree Centrality`\n\n\n\n\n\n\n$`Out Degree Centrality`\n\n\n\n\n\n\n$`All Degree Centrality`\n\n\n\n\n\n\n\n\n\nA Glimpse into the Code\n# Calculate degree centrality for nodes\nDC_2030_3_in <- degree(Graph2030_3, mode = \"in\")\nDC_2030_3_out <- degree(Graph2030_3, mode = \"out\")\nDC_2030_3_all <- degree(Graph2030_3, mode = \"all\")\n\n# Add degree centrality to the nodes data of the graph\nGraph2030_3$nodes$DC_2030_3_in <- DC_2030_3_in\nGraph2030_3$nodes$DC_2030_3_out <- DC_2030_3_out\nGraph2030_3$nodes$DC_2030_3_all <- DC_2030_3_all\n\n\nplot_list <- list()\nplot_list[[\"In Degree Centrality\"]] <- ggraph(Graph2030_3, layout = \"fr\") + \n  geom_edge_link(alpha = 0.5) +\n  geom_node_point(aes(size = DC_2030_3_in, color = DC_2030_3_in)) +\n  scale_color_gradient(low = \"blue\", high = \"red\") +\n  theme_graph() +\n  labs(title = \"In Degree Centrality Network for 2030\")\n\nplot_list[[\"Out Degree Centrality\"]] <- ggraph(Graph2030_3, layout = \"fr\") + \n  geom_edge_link(alpha = 0.5) +\n  geom_node_point(aes(size = DC_2030_3_out, color = DC_2030_3_out)) +\n  scale_color_gradient(low = \"blue\", high = \"red\") +\n  theme_graph() +\n  labs(title = \"Out Degree Centrality Network for 2030\")\n\nplot_list[[\"All Degree Centrality\"]] <- ggraph(Graph2030_3, layout = \"fr\") + \n  geom_edge_link(alpha = 0.5) +\n  geom_node_point(aes(size = DC_2030_3_all, color = DC_2030_3_all)) +\n  scale_color_gradient(low = \"blue\", high = \"red\") +\n  theme_graph() +\n  labs(title = \"All Degree Centrality Network for 2030\")\n\nplot_list\n\n\n$`In Degree Centrality`\n\n\n\n\n\n\n$`Out Degree Centrality`\n\n\n\n\n\n\n$`All Degree Centrality`\n\n\n\n\n\n\n\n\n\n\n\n160300-160599230100, 253099300000-390000\n\n\n\n\nA Glimpse into the Code\n# Calculate degree centrality for nodes\nDC_2031_1_in <- degree(Graph2031_1, mode = \"in\")\nDC_2031_1_out <- degree(Graph2031_1, mode = \"out\")\nDC_2031_1_all <- degree(Graph2031_1, mode = \"all\")\n\n# Add degree centrality to the nodes data of the graph\nGraph2031_1$nodes$DC_2031_1_in <- DC_2031_1_in\nGraph2031_1$nodes$DC_2031_1_out <- DC_2031_1_out\nGraph2031_1$nodes$DC_2031_1_all <- DC_2031_1_all\n\n\nplot_list <- list()\nplot_list[[\"In Degree Centrality\"]] <- ggraph(Graph2031_1, layout = \"fr\") + \n  geom_edge_link(alpha = 0.5) +\n  geom_node_point(aes(size = DC_2031_1_in, color = DC_2031_1_in)) +\n  scale_color_gradient(low = \"blue\", high = \"red\") +\n  theme_graph() +\n  labs(title = \"In Degree Centrality Network for 2031\")\n\nplot_list[[\"Out Degree Centrality\"]] <- ggraph(Graph2031_1, layout = \"fr\") + \n  geom_edge_link(alpha = 0.5) +\n  geom_node_point(aes(size = DC_2031_1_out, color = DC_2031_1_out)) +\n  scale_color_gradient(low = \"blue\", high = \"red\") +\n  theme_graph() +\n  labs(title = \"Out Degree Centrality Network for 2031\")\n\nplot_list[[\"All Degree Centrality\"]] <- ggraph(Graph2031_1, layout = \"fr\") + \n  geom_edge_link(alpha = 0.5) +\n  geom_node_point(aes(size = DC_2031_1_all, color = DC_2031_1_all)) +\n  scale_color_gradient(low = \"blue\", high = \"red\") +\n  theme_graph() +\n  labs(title = \"All Degree Centrality Network for 2031\")\n\nplot_list\n\n\n$`In Degree Centrality`\n\n\n\n\n\n\n$`Out Degree Centrality`\n\n\n\n\n\n\n$`All Degree Centrality`\n\n\n\n\n\n\n\n\n\nA Glimpse into the Code\n# Calculate degree centrality for nodes\nDC_2031_2_in <- degree(Graph2031_2, mode = \"in\")\nDC_2031_2_out <- degree(Graph2031_2, mode = \"out\")\nDC_2031_2_all <- degree(Graph2031_2, mode = \"all\")\n\n# Add degree centrality to the nodes data of the graph\nGraph2031_2$nodes$DC_2031_2_in <- DC_2031_2_in\nGraph2031_2$nodes$DC_2031_2_out <- DC_2031_2_out\nGraph2031_2$nodes$DC_2031_2_all <- DC_2031_2_all\n\n\nplot_list <- list()\nplot_list[[\"In Degree Centrality\"]] <- ggraph(Graph2031_2, layout = \"fr\") + \n  geom_edge_link(alpha = 0.5) +\n  geom_node_point(aes(size = DC_2031_2_in, color = DC_2031_2_in)) +\n  scale_color_gradient(low = \"blue\", high = \"red\") +\n  theme_graph() +\n  labs(title = \"In Degree Centrality Network for 2031\")\n\nplot_list[[\"Out Degree Centrality\"]] <- ggraph(Graph2031_2, layout = \"fr\") + \n  geom_edge_link(alpha = 0.5) +\n  geom_node_point(aes(size = DC_2031_2_out, color = DC_2031_2_out)) +\n  scale_color_gradient(low = \"blue\", high = \"red\") +\n  theme_graph() +\n  labs(title = \"Out Degree Centrality Network for 2031\")\n\nplot_list[[\"All Degree Centrality\"]] <- ggraph(Graph2031_2, layout = \"fr\") + \n  geom_edge_link(alpha = 0.5) +\n  geom_node_point(aes(size = DC_2031_2_all, color = DC_2031_2_all)) +\n  scale_color_gradient(low = \"blue\", high = \"red\") +\n  theme_graph() +\n  labs(title = \"All Degree Centrality Network for 2031\")\n\nplot_list\n\n\n$`In Degree Centrality`\n\n\n\n\n\n\n$`Out Degree Centrality`\n\n\n\n\n\n\n$`All Degree Centrality`\n\n\n\n\n\n\n\n\n\nA Glimpse into the Code\n# Calculate degree centrality for nodes\nDC_2031_3_in <- degree(Graph2031_3, mode = \"in\")\nDC_2031_3_out <- degree(Graph2031_3, mode = \"out\")\nDC_2031_3_all <- degree(Graph2031_3, mode = \"all\")\n\n# Add degree centrality to the nodes data of the graph\nGraph2031_3$nodes$DC_2031_3_in <- DC_2031_3_in\nGraph2031_3$nodes$DC_2031_3_out <- DC_2031_3_out\nGraph2031_3$nodes$DC_2031_3_all <- DC_2031_3_all\n\n\nplot_list <- list()\nplot_list[[\"In Degree Centrality\"]] <- ggraph(Graph2031_3, layout = \"fr\") + \n  geom_edge_link(alpha = 0.5) +\n  geom_node_point(aes(size = DC_2031_3_in, color = DC_2031_3_in)) +\n  scale_color_gradient(low = \"blue\", high = \"red\") +\n  theme_graph() +\n  labs(title = \"In Degree Centrality Network for 2031\")\n\nplot_list[[\"Out Degree Centrality\"]] <- ggraph(Graph2031_3, layout = \"fr\") + \n  geom_edge_link(alpha = 0.5) +\n  geom_node_point(aes(size = DC_2031_3_out, color = DC_2031_3_out)) +\n  scale_color_gradient(low = \"blue\", high = \"red\") +\n  theme_graph() +\n  labs(title = \"Out Degree Centrality Network for 2031\")\n\nplot_list[[\"All Degree Centrality\"]] <- ggraph(Graph2031_3, layout = \"fr\") + \n  geom_edge_link(alpha = 0.5) +\n  geom_node_point(aes(size = DC_2031_3_all, color = DC_2031_3_all)) +\n  scale_color_gradient(low = \"blue\", high = \"red\") +\n  theme_graph() +\n  labs(title = \"All Degree Centrality Network for 2031\")\n\nplot_list\n\n\n$`In Degree Centrality`\n\n\n\n\n\n\n$`Out Degree Centrality`\n\n\n\n\n\n\n$`All Degree Centrality`\n\n\n\n\n\n\n\n\n\n\n\n160300-160599230100, 253099300000-390000\n\n\n\n\nA Glimpse into the Code\n# Calculate degree centrality for nodes\nDC_2032_1_in <- degree(Graph2032_1, mode = \"in\")\nDC_2032_1_out <- degree(Graph2032_1, mode = \"out\")\nDC_2032_1_all <- degree(Graph2032_1, mode = \"all\")\n\n# Add degree centrality to the nodes data of the graph\nGraph2032_1$nodes$DC_2032_1_in <- DC_2032_1_in\nGraph2032_1$nodes$DC_2032_1_out <- DC_2032_1_out\nGraph2032_1$nodes$DC_2032_1_all <- DC_2032_1_all\n\n\nplot_list <- list()\nplot_list[[\"In Degree Centrality\"]] <- ggraph(Graph2032_1, layout = \"fr\") + \n  geom_edge_link(alpha = 0.5) +\n  geom_node_point(aes(size = DC_2032_1_in, color = DC_2032_1_in)) +\n  scale_color_gradient(low = \"blue\", high = \"red\") +\n  theme_graph() +\n  labs(title = \"In Degree Centrality Network for 2032\")\n\nplot_list[[\"Out Degree Centrality\"]] <- ggraph(Graph2032_1, layout = \"fr\") + \n  geom_edge_link(alpha = 0.5) +\n  geom_node_point(aes(size = DC_2032_1_out, color = DC_2032_1_out)) +\n  scale_color_gradient(low = \"blue\", high = \"red\") +\n  theme_graph() +\n  labs(title = \"Out Degree Centrality Network for 2032\")\n\nplot_list[[\"All Degree Centrality\"]] <- ggraph(Graph2032_1, layout = \"fr\") + \n  geom_edge_link(alpha = 0.5) +\n  geom_node_point(aes(size = DC_2032_1_all, color = DC_2032_1_all)) +\n  scale_color_gradient(low = \"blue\", high = \"red\") +\n  theme_graph() +\n  labs(title = \"All Degree Centrality Network for 2032\")\n\nplot_list\n\n\n$`In Degree Centrality`\n\n\n\n\n\n\n$`Out Degree Centrality`\n\n\n\n\n\n\n$`All Degree Centrality`\n\n\n\n\n\n\n\n\n\nA Glimpse into the Code\n# Calculate degree centrality for nodes\nDC_2032_2_in <- degree(Graph2032_2, mode = \"in\")\nDC_2032_2_out <- degree(Graph2032_2, mode = \"out\")\nDC_2032_2_all <- degree(Graph2032_2, mode = \"all\")\n\n# Add degree centrality to the nodes data of the graph\nGraph2032_2$nodes$DC_2032_2_in <- DC_2032_2_in\nGraph2032_2$nodes$DC_2032_2_out <- DC_2032_2_out\nGraph2032_2$nodes$DC_2032_2_all <- DC_2032_2_all\n\n\nplot_list <- list()\nplot_list[[\"In Degree Centrality\"]] <- ggraph(Graph2032_2, layout = \"fr\") + \n  geom_edge_link(alpha = 0.5) +\n  geom_node_point(aes(size = DC_2032_2_in, color = DC_2032_2_in)) +\n  scale_color_gradient(low = \"blue\", high = \"red\") +\n  theme_graph() +\n  labs(title = \"In Degree Centrality Network for 2032\")\n\nplot_list[[\"Out Degree Centrality\"]] <- ggraph(Graph2032_2, layout = \"fr\") + \n  geom_edge_link(alpha = 0.5) +\n  geom_node_point(aes(size = DC_2032_2_out, color = DC_2032_2_out)) +\n  scale_color_gradient(low = \"blue\", high = \"red\") +\n  theme_graph() +\n  labs(title = \"Out Degree Centrality Network for 2032\")\n\nplot_list[[\"All Degree Centrality\"]] <- ggraph(Graph2032_2, layout = \"fr\") + \n  geom_edge_link(alpha = 0.5) +\n  geom_node_point(aes(size = DC_2032_2_all, color = DC_2032_2_all)) +\n  scale_color_gradient(low = \"blue\", high = \"red\") +\n  theme_graph() +\n  labs(title = \"All Degree Centrality Network for 2032\")\n\nplot_list\n\n\n$`In Degree Centrality`\n\n\n\n\n\n\n$`Out Degree Centrality`\n\n\n\n\n\n\n$`All Degree Centrality`\n\n\n\n\n\n\n\n\n\nA Glimpse into the Code\n# Calculate degree centrality for nodes\nDC_2032_3_in <- degree(Graph2032_3, mode = \"in\")\nDC_2032_3_out <- degree(Graph2032_3, mode = \"out\")\nDC_2032_3_all <- degree(Graph2032_3, mode = \"all\")\n\n# Add degree centrality to the nodes data of the graph\nGraph2032_3$nodes$DC_2032_3_in <- DC_2032_3_in\nGraph2032_3$nodes$DC_2032_3_out <- DC_2032_3_out\nGraph2032_3$nodes$DC_2032_3_all <- DC_2032_3_all\n\n\nplot_list <- list()\nplot_list[[\"In Degree Centrality\"]] <- ggraph(Graph2032_3, layout = \"fr\") + \n  geom_edge_link(alpha = 0.5) +\n  geom_node_point(aes(size = DC_2032_3_in, color = DC_2032_3_in)) +\n  scale_color_gradient(low = \"blue\", high = \"red\") +\n  theme_graph() +\n  labs(title = \"In Degree Centrality Network for 2032\")\n\nplot_list[[\"Out Degree Centrality\"]] <- ggraph(Graph2032_3, layout = \"fr\") + \n  geom_edge_link(alpha = 0.5) +\n  geom_node_point(aes(size = DC_2032_3_out, color = DC_2032_3_out)) +\n  scale_color_gradient(low = \"blue\", high = \"red\") +\n  theme_graph() +\n  labs(title = \"Out Degree Centrality Network for 2032\")\n\nplot_list[[\"All Degree Centrality\"]] <- ggraph(Graph2032_3, layout = \"fr\") + \n  geom_edge_link(alpha = 0.5) +\n  geom_node_point(aes(size = DC_2032_3_all, color = DC_2032_3_all)) +\n  scale_color_gradient(low = \"blue\", high = \"red\") +\n  theme_graph() +\n  labs(title = \"All Degree Centrality Network for 2032\")\n\nplot_list\n\n\n$`In Degree Centrality`\n\n\n\n\n\n\n$`Out Degree Centrality`\n\n\n\n\n\n\n$`All Degree Centrality`\n\n\n\n\n\n\n\n\n\n\n\n160300-160599230100, 253099300000-390000\n\n\n\n\nA Glimpse into the Code\n# Calculate degree centrality for nodes\nDC_2033_1_in <- degree(Graph2033_1, mode = \"in\")\nDC_2033_1_out <- degree(Graph2033_1, mode = \"out\")\nDC_2033_1_all <- degree(Graph2033_1, mode = \"all\")\n\n# Add degree centrality to the nodes data of the graph\nGraph2033_1$nodes$DC_2033_1_in <- DC_2033_1_in\nGraph2033_1$nodes$DC_2033_1_out <- DC_2033_1_out\nGraph2033_1$nodes$DC_2033_1_all <- DC_2033_1_all\n\n\nplot_list <- list()\nplot_list[[\"In Degree Centrality\"]] <- ggraph(Graph2033_1, layout = \"fr\") + \n  geom_edge_link(alpha = 0.5) +\n  geom_node_point(aes(size = DC_2033_1_in, color = DC_2033_1_in)) +\n  scale_color_gradient(low = \"blue\", high = \"red\") +\n  theme_graph() +\n  labs(title = \"In Degree Centrality Network for 2033\")\n\nplot_list[[\"Out Degree Centrality\"]] <- ggraph(Graph2033_1, layout = \"fr\") + \n  geom_edge_link(alpha = 0.5) +\n  geom_node_point(aes(size = DC_2033_1_out, color = DC_2033_1_out)) +\n  scale_color_gradient(low = \"blue\", high = \"red\") +\n  theme_graph() +\n  labs(title = \"Out Degree Centrality Network for 2033\")\n\nplot_list[[\"All Degree Centrality\"]] <- ggraph(Graph2033_1, layout = \"fr\") + \n  geom_edge_link(alpha = 0.5) +\n  geom_node_point(aes(size = DC_2033_1_all, color = DC_2033_1_all)) +\n  scale_color_gradient(low = \"blue\", high = \"red\") +\n  theme_graph() +\n  labs(title = \"All Degree Centrality Network for 2033\")\n\nplot_list\n\n\n$`In Degree Centrality`\n\n\n\n\n\n\n$`Out Degree Centrality`\n\n\n\n\n\n\n$`All Degree Centrality`\n\n\n\n\n\n\n\n\n\nA Glimpse into the Code\n# Calculate degree centrality for nodes\nDC_2033_2_in <- degree(Graph2033_2, mode = \"in\")\nDC_2033_2_out <- degree(Graph2033_2, mode = \"out\")\nDC_2033_2_all <- degree(Graph2033_2, mode = \"all\")\n\n# Add degree centrality to the nodes data of the graph\nGraph2033_2$nodes$DC_2033_2_in <- DC_2033_2_in\nGraph2033_2$nodes$DC_2033_2_out <- DC_2033_2_out\nGraph2033_2$nodes$DC_2033_2_all <- DC_2033_2_all\n\nplot_list <- list()\nplot_list[[\"In Degree Centrality\"]] <- ggraph(Graph2033_2, layout = \"fr\") + \n  geom_edge_link(alpha = 0.5) +\n  geom_node_point(aes(size = DC_2033_2_in, color = DC_2033_2_in)) +\n  scale_color_gradient(low = \"blue\", high = \"red\") +\n  theme_graph() +\n  labs(title = \"In Degree Centrality Network for 2033\")\n\nplot_list[[\"Out Degree Centrality\"]] <- ggraph(Graph2033_2, layout = \"fr\") + \n  geom_edge_link(alpha = 0.5) +\n  geom_node_point(aes(size = DC_2033_2_out, color = DC_2033_2_out)) +\n  scale_color_gradient(low = \"blue\", high = \"red\") +\n  theme_graph() +\n  labs(title = \"Out Degree Centrality Network for 2033\")\n\nplot_list[[\"All Degree Centrality\"]] <- ggraph(Graph2033_2, layout = \"fr\") + \n  geom_edge_link(alpha = 0.5) +\n  geom_node_point(aes(size = DC_2033_2_all, color = DC_2033_2_all)) +\n  scale_color_gradient(low = \"blue\", high = \"red\") +\n  theme_graph() +\n  labs(title = \"All Degree Centrality Network for 2033\")\n\nplot_list\n\n\n$`In Degree Centrality`\n\n\n\n\n\n\n$`Out Degree Centrality`\n\n\n\n\n\n\n$`All Degree Centrality`\n\n\n\n\n\n\n\n\n\nA Glimpse into the Code\n# Calculate degree centrality for nodes\nDC_2033_3_in <- degree(Graph2033_3, mode = \"in\")\nDC_2033_3_out <- degree(Graph2033_3, mode = \"out\")\nDC_2033_3_all <- degree(Graph2033_3, mode = \"all\")\n\n# Add degree centrality to the nodes data of the graph\nGraph2033_3$nodes$DC_2033_3_in <- DC_2033_3_in\nGraph2033_3$nodes$DC_2033_3_out <- DC_2033_3_out\nGraph2033_3$nodes$DC_2033_3_all <- DC_2033_3_all\n\n\nplot_list <- list()\nplot_list[[\"In Degree Centrality\"]] <- ggraph(Graph2033_3, layout = \"fr\") + \n  geom_edge_link(alpha = 0.5) +\n  geom_node_point(aes(size = DC_2033_3_in, color = DC_2033_3_in)) +\n  scale_color_gradient(low = \"blue\", high = \"red\") +\n  theme_graph() +\n  labs(title = \"In Degree Centrality Network for 2033\")\n\nplot_list[[\"Out Degree Centrality\"]] <- ggraph(Graph2033_3, layout = \"fr\") + \n  geom_edge_link(alpha = 0.5) +\n  geom_node_point(aes(size = DC_2033_3_out, color = DC_2033_3_out)) +\n  scale_color_gradient(low = \"blue\", high = \"red\") +\n  theme_graph() +\n  labs(title = \"Out Degree Centrality Network for 2033\")\n\nplot_list[[\"All Degree Centrality\"]] <- ggraph(Graph2033_3, layout = \"fr\") + \n  geom_edge_link(alpha = 0.5) +\n  geom_node_point(aes(size = DC_2033_3_all, color = DC_2033_3_all)) +\n  scale_color_gradient(low = \"blue\", high = \"red\") +\n  theme_graph() +\n  labs(title = \"All Degree Centrality Network for 2033\")\n\nplot_list\n\n\n$`In Degree Centrality`\n\n\n\n\n\n\n$`Out Degree Centrality`\n\n\n\n\n\n\n$`All Degree Centrality`\n\n\n\n\n\n\n\n\n\n\n\n160300-160599230100, 253099300000-390000\n\n\n\n\nA Glimpse into the Code\n# Calculate degree centrality for nodes\nDC_2034_1_in <- degree(Graph2034_1, mode = \"in\")\nDC_2034_1_out <- degree(Graph2034_1, mode = \"out\")\nDC_2034_1_all <- degree(Graph2034_1, mode = \"all\")\n\n# Add degree centrality to the nodes data of the graph\nGraph2034_1$nodes$DC_2034_1_in <- DC_2034_1_in\nGraph2034_1$nodes$DC_2034_1_out <- DC_2034_1_out\nGraph2034_1$nodes$DC_2034_1_all <- DC_2034_1_all\n\nplot_list <- list()\nplot_list[[\"In Degree Centrality\"]] <- ggraph(Graph2034_1, layout = \"fr\") + \n  geom_edge_link(alpha = 0.5) +\n  geom_node_point(aes(size = DC_2034_1_in, color = DC_2034_1_in)) +\n  scale_color_gradient(low = \"blue\", high = \"red\") +\n  theme_graph() +\n  labs(title = \"In Degree Centrality Network for 2034\")\n\nplot_list[[\"Out Degree Centrality\"]] <- ggraph(Graph2034_1, layout = \"fr\") + \n  geom_edge_link(alpha = 0.5) +\n  geom_node_point(aes(size = DC_2034_1_out, color = DC_2034_1_out)) +\n  scale_color_gradient(low = \"blue\", high = \"red\") +\n  theme_graph() +\n  labs(title = \"Out Degree Centrality Network for 2034\")\n\nplot_list[[\"All Degree Centrality\"]] <- ggraph(Graph2034_1, layout = \"fr\") + \n  geom_edge_link(alpha = 0.5) +\n  geom_node_point(aes(size = DC_2034_1_all, color = DC_2034_1_all)) +\n  scale_color_gradient(low = \"blue\", high = \"red\") +\n  theme_graph() +\n  labs(title = \"All Degree Centrality Network for 2034\")\n\nplot_list\n\n\n$`In Degree Centrality`\n\n\n\n\n\n\n$`Out Degree Centrality`\n\n\n\n\n\n\n$`All Degree Centrality`\n\n\n\n\n\n\n\n\n\nA Glimpse into the Code\n# Calculate degree centrality for nodes\nDC_2034_2_in <- degree(Graph2034_2, mode = \"in\")\nDC_2034_2_out <- degree(Graph2034_2, mode = \"out\")\nDC_2034_2_all <- degree(Graph2034_2, mode = \"all\")\n\n# Add degree centrality to the nodes data of the graph\nGraph2034_2$nodes$DC_2034_2_in <- DC_2034_2_in\nGraph2034_2$nodes$DC_2034_2_out <- DC_2034_2_out\nGraph2034_2$nodes$DC_2034_2_all <- DC_2034_2_all\n\n\nplot_list <- list()\nplot_list[[\"In Degree Centrality\"]] <- ggraph(Graph2034_2, layout = \"fr\") + \n  geom_edge_link(alpha = 0.5) +\n  geom_node_point(aes(size = DC_2034_2_in, color = DC_2034_2_in)) +\n  scale_color_gradient(low = \"blue\", high = \"red\") +\n  theme_graph() +\n  labs(title = \"In Degree Centrality Network for 2034\")\n\nplot_list[[\"Out Degree Centrality\"]] <- ggraph(Graph2034_2, layout = \"fr\") + \n  geom_edge_link(alpha = 0.5) +\n  geom_node_point(aes(size = DC_2034_2_out, color = DC_2034_2_out)) +\n  scale_color_gradient(low = \"blue\", high = \"red\") +\n  theme_graph() +\n  labs(title = \"Out Degree Centrality Network for 2034\")\n\nplot_list[[\"All Degree Centrality\"]] <- ggraph(Graph2034_2, layout = \"fr\") + \n  geom_edge_link(alpha = 0.5) +\n  geom_node_point(aes(size = DC_2034_2_all, color = DC_2034_2_all)) +\n  scale_color_gradient(low = \"blue\", high = \"red\") +\n  theme_graph() +\n  labs(title = \"All Degree Centrality Network for 2034\")\n\nplot_list\n\n\n$`In Degree Centrality`\n\n\n\n\n\n\n$`Out Degree Centrality`\n\n\n\n\n\n\n$`All Degree Centrality`\n\n\n\n\n\n\n\n\n\nA Glimpse into the Code\n# Calculate degree centrality for nodes\nDC_2034_3_in <- degree(Graph2034_3, mode = \"in\")\nDC_2034_3_out <- degree(Graph2034_3, mode = \"out\")\nDC_2034_3_all <- degree(Graph2034_3, mode = \"all\")\n\n# Add degree centrality to the nodes data of the graph\nGraph2034_3$nodes$DC_2034_3_in <- DC_2034_3_in\nGraph2034_3$nodes$DC_2034_3_out <- DC_2034_3_out\nGraph2034_3$nodes$DC_2034_3_all <- DC_2034_3_all\n\n\nplot_list <- list()\nplot_list[[\"In Degree Centrality\"]] <- ggraph(Graph2034_3, layout = \"fr\") + \n  geom_edge_link(alpha = 0.5) +\n  geom_node_point(aes(size = DC_2034_3_in, color = DC_2034_3_in)) +\n  scale_color_gradient(low = \"blue\", high = \"red\") +\n  theme_graph() +\n  labs(title = \"In Degree Centrality Network for 2034\")\n\nplot_list[[\"Out Degree Centrality\"]] <- ggraph(Graph2034_3, layout = \"fr\") + \n  geom_edge_link(alpha = 0.5) +\n  geom_node_point(aes(size = DC_2034_3_out, color = DC_2034_3_out)) +\n  scale_color_gradient(low = \"blue\", high = \"red\") +\n  theme_graph() +\n  labs(title = \"Out Degree Centrality Network for 2034\")\n\nplot_list[[\"All Degree Centrality\"]] <- ggraph(Graph2034_3, layout = \"fr\") + \n  geom_edge_link(alpha = 0.5) +\n  geom_node_point(aes(size = DC_2034_3_all, color = DC_2034_3_all)) +\n  scale_color_gradient(low = \"blue\", high = \"red\") +\n  theme_graph() +\n  labs(title = \"All Degree Centrality Network for 2034\")\n\nplot_list\n\n\n$`In Degree Centrality`\n\n\n\n\n\n\n$`Out Degree Centrality`\n\n\n\n\n\n\n$`All Degree Centrality`\n\n\n\n\n\n\n\n\n\n\n\n160300-160599230100, 253099300000-390000\n\n\n\n\nA Glimpse into the Code\n# Calculate degree centrality for nodes\nDC_ALL_1_in <- degree(Graph_All1, mode = \"in\")\nDC_ALL_1_out <- degree(Graph_All1, mode = \"out\")\nDC_ALL_1_all <- degree(Graph_All1, mode = \"all\")\n\n# Add degree centrality to the nodes data of the graph\nGraph_All1$nodes$DC_ALL_1_in <- DC_ALL_1_in\nGraph_All1$nodes$DC_ALL_1_out <- DC_ALL_1_out\nGraph_All1$nodes$DC_ALL_1_all <- DC_ALL_1_all\n\nplot_list <- list()\nplot_list[[\"In Degree Centrality\"]] <- ggraph(Graph_All1, layout = \"fr\") + \n  geom_edge_link(alpha = 0.5) +\n  geom_node_point(aes(size = DC_ALL_1_in, color = DC_ALL_1_in)) +\n  scale_color_gradient(low = \"blue\", high = \"red\") +\n  theme_graph() +\n  labs(title = \"In Degree Centrality Network for all Years\")\n\nplot_list[[\"Out Degree Centrality\"]] <- ggraph(Graph_All1, layout = \"fr\") + \n  geom_edge_link(alpha = 0.5) +\n  geom_node_point(aes(size = DC_ALL_1_out, color = DC_ALL_1_out)) +\n  scale_color_gradient(low = \"blue\", high = \"red\") +\n  theme_graph() +\n  labs(title = \"Out Degree Centrality Network for all Years\")\n\nplot_list[[\"All Degree Centrality\"]] <- ggraph(Graph_All1, layout = \"fr\") + \n  geom_edge_link(alpha = 0.5) +\n  geom_node_point(aes(size = DC_ALL_1_all, color = DC_ALL_1_all)) +\n  scale_color_gradient(low = \"blue\", high = \"red\") +\n  theme_graph() +\n  labs(title = \"All Degree Centrality Network for all Years\")\n\nplot_list\n\n\n$`In Degree Centrality`\n\n\n\n\n\n\n$`Out Degree Centrality`\n\n\n\n\n\n\n$`All Degree Centrality`\n\n\n\n\n\n\n\n\n\nA Glimpse into the Code\n# Calculate degree centrality for nodes\nDC_ALL_2_in <- degree(Graph_All2, mode = \"in\")\nDC_ALL_2_out <- degree(Graph_All2, mode = \"out\")\nDC_ALL_2_all <- degree(Graph_All2, mode = \"all\")\n\n# Add degree centrality to the nodes data of the graph\nGraph_All2$nodes$DC_ALL_2_in <- DC_ALL_2_in\nGraph_All2$nodes$DC_ALL_2_out <- DC_ALL_2_out\nGraph_All2$nodes$DC_ALL_2_all <- DC_ALL_2_all\n\n\nplot_list <- list()\nplot_list[[\"In Degree Centrality\"]] <- ggraph(Graph_All2, layout = \"fr\") + \n  geom_edge_link(alpha = 0.5) +\n  geom_node_point(aes(size = DC_ALL_2_in, color = DC_ALL_2_in)) +\n  scale_color_gradient(low = \"blue\", high = \"red\") +\n  theme_graph() +\n  labs(title = \"In Degree Centrality Network for all Years\")\n\nplot_list[[\"Out Degree Centrality\"]] <- ggraph(Graph_All2, layout = \"fr\") + \n  geom_edge_link(alpha = 0.5) +\n  geom_node_point(aes(size = DC_ALL_2_out, color =DC_ALL_2_out)) +\n  scale_color_gradient(low = \"blue\", high = \"red\") +\n  theme_graph() +\n  labs(title = \"Out Degree Centrality Network for all Years\")\n\nplot_list[[\"All Degree Centrality\"]] <- ggraph(Graph_All2, layout = \"fr\") + \n  geom_edge_link(alpha = 0.5) +\n  geom_node_point(aes(size = DC_ALL_2_all, color = DC_ALL_2_all)) +\n  scale_color_gradient(low = \"blue\", high = \"red\") +\n  theme_graph() +\n  labs(title = \"All Degree Centrality Network for all Years\")\n\nplot_list\n\n\n$`In Degree Centrality`\n\n\n\n\n\n\n$`Out Degree Centrality`\n\n\n\n\n\n\n$`All Degree Centrality`\n\n\n\n\n\n\n\n\n\nA Glimpse into the Code\n# Calculate degree centrality for nodes\nDC_ALL_3_in <- degree(Graph_All3, mode = \"in\")\nDC_ALL_3_out <- degree(Graph_All3, mode = \"out\")\nDC_ALL_3_all <- degree(Graph_All3, mode = \"all\")\n\n# Add degree centrality to the nodes data of the graph\nGraph_All3$nodes$DC_ALL_3_in <- DC_ALL_3_in\nGraph_All3$nodes$DC_ALL_3_out <- DC_ALL_3_out\nGraph_All3$nodes$DC_ALL_3_all <- DC_ALL_3_all\n\n\nplot_list <- list()\nplot_list[[\"In Degree Centrality\"]] <- ggraph(Graph_All3, layout = \"fr\") + \n  geom_edge_link(alpha = 0.5) +\n  geom_node_point(aes(size = DC_ALL_3_in, color = DC_ALL_3_in)) +\n  scale_color_gradient(low = \"blue\", high = \"red\") +\n  theme_graph() +\n  labs(title = \"In Degree Centrality Network for all Years\")\n\nplot_list[[\"Out Degree Centrality\"]] <- ggraph(Graph_All3, layout = \"fr\") + \n  geom_edge_link(alpha = 0.5) +\n  geom_node_point(aes(size = DC_ALL_3_out, color = DC_ALL_3_out)) +\n  scale_color_gradient(low = \"blue\", high = \"red\") +\n  theme_graph() +\n  labs(title = \"Out Degree Centrality Network for all Years\")\n\nplot_list[[\"All Degree Centrality\"]] <- ggraph(Graph_All3, layout = \"fr\") + \n  geom_edge_link(alpha = 0.5) +\n  geom_node_point(aes(size = DC_ALL_3_all, color = DC_ALL_3_all)) +\n  scale_color_gradient(low = \"blue\", high = \"red\") +\n  theme_graph() +\n  labs(title = \"All Degree Centrality Network for all Years\")\n\nplot_list\n\n\n$`In Degree Centrality`\n\n\n\n\n\n\n$`Out Degree Centrality`\n\n\n\n\n\n\n$`All Degree Centrality`"
  },
  {
    "objectID": "Takehome Exercise/Takehome Ex 2/Takehome2.html#recommendations-limitations-and-takeaways",
    "href": "Takehome Exercise/Takehome Ex 2/Takehome2.html#recommendations-limitations-and-takeaways",
    "title": " ¶ TakeHome-2 ¶ ",
    "section": "Recommendations, Limitations and Takeaways",
    "text": "Recommendations, Limitations and Takeaways\nRECOMMENDATIONS - Continuous monitoring of the network can lead to early detection of significant changes in trade patterns. If a company suddenly changes its degree of centrality (either in, out, or total), it may be worth investigating the causes behind such a change.\n\nCompanies with high degree centrality (especially out-degree) can be considered critical nodes in the network. If such companies face disruptions, the impact on the overall network can be significant. Thus, a risk assessment focused on these nodes may be beneficial to ensure the network’s robustness.\n  Delving into trading patterns and shipment weight changes over time could provide additional insights.\nExploring the behavior within communities of companies could be another avenue for detecting IUU activities more efficiently.\n\nLIMITATIONS\n\nThe analysis is based on the transactions of goods under specific HS codes. However, it does not account for other potentially relevant factors such as the companies’ sizes, the actual value of transactions, or the geographical information which could provide additional valuable insights.\nWithout additional contextual information about the nodes (companies) and the nature of the transactions, interpretations and recommendations based on the network structure may have limitations.\nDegree centrality assumes that connections are equally important. In reality, a company’s importance might not just depend on the number of connections it has, but also on the quality of these connections, the value of goods transferred, and its strategic position in the network.\nRapid growth in shipping networks might increase the complexity of tracking and monitoring potential IUU activities.\nWithout concrete indicators, classifying companies as red or green flags for IUU based solely on their degree of import/export activities might be speculative.\n\nKEY TAKEAWAYS\n\nA majority of companies demonstrated low in,out and total degree centrality. This suggests that the networks in this industry might be relatively scattered and possibly disjointed.\nThere has been an observable expansion in the shipping networks over time, visible through an increase in connections and shipment frequency. Monitoring this expansion rate is crucial as sudden spikes could indicate potential illegal, unreported, and unregulated (IUU) activities.\nThe high-import/export companies and their top trading partners could potentially act as strategic points for monitoring and controlling IUU activities in the industry.\nThe sparse and potentially disconnected nature of the network might suggest a lack of centralized control or regulation in the industry."
  }
]